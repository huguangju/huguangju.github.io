const e=JSON.parse(`{"key":"v-4e719441","path":"/code/algorithm/sliding-window.html","title":"滑动窗口算法及应用","lang":"zh-CN","frontmatter":{"title":"滑动窗口算法及应用","date":"2023-04-08T00:00:00.000Z","category":["算法"],"description":"算法简介 滑动窗口算法（Sliding Window Algorithm）是一种常见的算法，用于解决数组或字符串的子问题。它通过维护一个大小可变的窗口，对数据进行处理。这个窗口的左右两端方向一致的向前滑动（右端固定，左端滑动；左端固定，右端滑动）。在处理数据时，窗口会向右移动，直到处理完整个数据集。 该算法常用于求解子数组或子字符串的问题，例如最大子数组和、最小子数组和、最长连续递增子序列等等。其时间复杂度通常为O(n)，是一种高效的算法。","head":[["meta",{"property":"og:url","content":"https://huguangju.cn/code/algorithm/sliding-window.html"}],["meta",{"property":"og:site_name","content":"Carson's blog"}],["meta",{"property":"og:title","content":"滑动窗口算法及应用"}],["meta",{"property":"og:description","content":"算法简介 滑动窗口算法（Sliding Window Algorithm）是一种常见的算法，用于解决数组或字符串的子问题。它通过维护一个大小可变的窗口，对数据进行处理。这个窗口的左右两端方向一致的向前滑动（右端固定，左端滑动；左端固定，右端滑动）。在处理数据时，窗口会向右移动，直到处理完整个数据集。 该算法常用于求解子数组或子字符串的问题，例如最大子数组和、最小子数组和、最长连续递增子序列等等。其时间复杂度通常为O(n)，是一种高效的算法。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-10T08:06:53.000Z"}],["meta",{"property":"article:published_time","content":"2023-04-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-10T08:06:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"滑动窗口算法及应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-10T08:06:53.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"算法简介","slug":"算法简介","link":"#算法简介","children":[]},{"level":2,"title":"滑动窗口的平均值","slug":"滑动窗口的平均值","link":"#滑动窗口的平均值","children":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]}]},{"level":2,"title":"最长重复子数组","slug":"最长重复子数组","link":"#最长重复子数组","children":[{"level":3,"title":"思路","slug":"思路-1","link":"#思路-1","children":[]},{"level":3,"title":"实现","slug":"实现-1","link":"#实现-1","children":[]}]},{"level":2,"title":"无重复字符的最长子串","slug":"无重复字符的最长子串","link":"#无重复字符的最长子串","children":[{"level":3,"title":"思路","slug":"思路-2","link":"#思路-2","children":[]},{"level":3,"title":"实现","slug":"实现-2","link":"#实现-2","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1681114013000,"updatedTime":1681114013000,"contributors":[{"name":"huguangju","email":"huguangju@weli.cn","commits":1}]},"readingTime":{"minutes":5.38,"words":1613},"filePathRelative":"code/algorithm/sliding-window.md","localizedDate":"2023年4月8日","excerpt":"<h2> 算法简介</h2>\\n<p>滑动窗口算法（Sliding Window Algorithm）是一种常见的算法，用于解决数组或字符串的子问题。它通过维护一个大小可变的窗口，对数据进行处理。这个窗口的左右两端方向一致的向前滑动（右端固定，左端滑动；左端固定，右端滑动）。在处理数据时，窗口会向右移动，直到处理完整个数据集。</p>\\n<p>该算法常用于求解子数组或子字符串的问题，例如最大子数组和、最小子数组和、最长连续递增子序列等等。其时间复杂度通常为O(n)，是一种高效的算法。</p>\\n","autoDesc":true}`);export{e as data};
