const t=JSON.parse(`{"key":"v-e2ceb0f6","path":"/reading/programming-typescript/introduction.html","title":"TypeScript 概述","lang":"zh-CN","frontmatter":{"title":"TypeScript 概述","category":["TypeScript"],"tag":["读书笔记"],"description":"TypeScript 能让代码更好地弹性伸缩，它开发的程序更安全（类型安全）。 类型安全：借助类型避免程序做无效的事情。 TypeScript 除了消除与类型有关的一整类问题之外，还彻底改变了编写代码的方式，先在类型层面规划整个程序，再深入到值层面。 在设计过程中考虑边缘情况，使程序更简单、运行更快，且更易于理解和维护。 编译器 程序由一些文件构成，并由编译器解析，转换成抽象句法树（abstract syntax tree，AST）。编译器把 AST 转换成一种称为字节码（bytecode）的低层表示。","head":[["meta",{"property":"og:url","content":"https://huguangju.cn/reading/programming-typescript/introduction.html"}],["meta",{"property":"og:site_name","content":"Carson's blog"}],["meta",{"property":"og:title","content":"TypeScript 概述"}],["meta",{"property":"og:description","content":"TypeScript 能让代码更好地弹性伸缩，它开发的程序更安全（类型安全）。 类型安全：借助类型避免程序做无效的事情。 TypeScript 除了消除与类型有关的一整类问题之外，还彻底改变了编写代码的方式，先在类型层面规划整个程序，再深入到值层面。 在设计过程中考虑边缘情况，使程序更简单、运行更快，且更易于理解和维护。 编译器 程序由一些文件构成，并由编译器解析，转换成抽象句法树（abstract syntax tree，AST）。编译器把 AST 转换成一种称为字节码（bytecode）的低层表示。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T14:01:34.000Z"}],["meta",{"property":"article:tag","content":"读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-04-05T14:01:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript 概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-05T14:01:34.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"编译器","slug":"编译器","link":"#编译器","children":[]},{"level":2,"title":"类型系统","slug":"类型系统","link":"#类型系统","children":[{"level":3,"title":"TypeScript VS. JavaScript","slug":"typescript-vs-javascript","link":"#typescript-vs-javascript","children":[]}]},{"level":2,"title":"代码编辑器设置","slug":"代码编辑器设置","link":"#代码编辑器设置","children":[{"level":3,"title":"tsconfg.json","slug":"tsconfg-json","link":"#tsconfg-json","children":[]},{"level":3,"title":"tslint.json","slug":"tslint-json","link":"#tslint-json","children":[]},{"level":3,"title":"index.ts","slug":"index-ts","link":"#index-ts","children":[]}]}],"git":{"createdTime":1680703294000,"updatedTime":1680703294000,"contributors":[{"name":"huguangju","email":"huguangju@weli.cn","commits":1}]},"readingTime":{"minutes":3.68,"words":1105},"filePathRelative":"reading/programming-typescript/introduction.md","localizedDate":"2023年4月5日","excerpt":"<p>TypeScript 能让代码更好地弹性伸缩，它开发的程序更安全（类型安全）。</p>\\n<blockquote>\\n<p>类型安全：借助类型避免程序做无效的事情。</p>\\n</blockquote>\\n<p>TypeScript 除了消除与类型有关的一整类问题之外，还彻底改变了编写代码的方式，先在类型层面规划整个程序，再深入到值层面。\\n在设计过程中考虑边缘情况，使程序更简单、运行更快，且更易于理解和维护。</p>\\n<h2> 编译器</h2>\\n<p>程序由一些文件构成，并由编译器解析，转换成抽象句法树（abstract syntax tree，AST）。编译器把 AST 转换成一种称为字节码（bytecode）的低层表示。</p>","autoDesc":true}`);export{t as data};
