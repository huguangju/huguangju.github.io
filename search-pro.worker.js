const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":237,\"nextId\":237,\"documentIds\":{\"0\":\"2\",\"1\":\"2#什么是-pnpm\",\"2\":\"2#特性概览\",\"3\":\"2#与-npm-的区别\",\"4\":\"2#依赖管理\",\"5\":\"2#npm-yarn-install-原理\",\"6\":\"2#pnpm-依赖管理\",\"7\":\"2#node-modules-结构\",\"8\":\"2#处理-peers\",\"9\":\"2#使用-pnpm\",\"10\":\"2#filter\",\"11\":\"2#管理-monorepo-项目\",\"12\":\"2#release工作流\",\"13\":\"2#配置-changesets\",\"14\":\"2#使用changesets\",\"15\":\"2#使用prerelease模式\",\"16\":\"2#总结\",\"17\":\"2#参考\",\"18\":\"2@0\",\"19\":\"2@1\",\"20\":\"3\",\"21\":\"3#介绍\",\"22\":\"3#使用场景\",\"23\":\"3#实现原理\",\"24\":\"3#npm-create-命令\",\"25\":\"3#启动命令行项目\",\"26\":\"3#解析处理命令行输入\",\"27\":\"3#创建项目\",\"28\":\"3#对比分析\",\"29\":\"3#集成式-create-vite\",\"30\":\"3#选项式-create-vue\",\"31\":\"3#独立仓库-vitesse\",\"32\":\"3#总结\",\"33\":\"3#创建项目模板\",\"34\":\"3#发布到-npm\",\"35\":\"3#使用\",\"36\":\"3#参考\",\"37\":\"3@0\",\"38\":\"3@1\",\"39\":\"4\",\"40\":\"4#启动\",\"41\":\"4#开发构建\",\"42\":\"4#渲染进程\",\"43\":\"4#本地开发服务器\",\"44\":\"4#vite-配置\",\"45\":\"4#主进程\",\"46\":\"4#监听文件变化\",\"47\":\"4#rollup\",\"48\":\"4#electron-进程\",\"49\":\"4#其它依赖\",\"50\":\"4#主进程-1\",\"51\":\"4#初始化窗口\",\"52\":\"4#进程通信-ipc\",\"53\":\"4#检查更新\",\"54\":\"4#热更新\",\"55\":\"4#渲染进程-1\",\"56\":\"4#问题\",\"57\":\"4#使用-icon-park-自定义项目图标\",\"58\":\"4@0\",\"59\":\"4@1\",\"60\":\"5\",\"61\":\"5#如何看源码\",\"62\":\"5#推荐\",\"63\":\"5#参考\",\"64\":\"6\",\"65\":\"7\",\"66\":\"7#文档\",\"67\":\"7#前端站点\",\"68\":\"7#导航站\",\"69\":\"7#个人博客\",\"70\":\"7#开发工具\",\"71\":\"7#js\",\"72\":\"7#css\",\"73\":\"7#ai\",\"74\":\"7#参考\",\"75\":\"8\",\"76\":\"8#算法简介\",\"77\":\"8#滑动窗口的平均值\",\"78\":\"8#思路\",\"79\":\"8#实现\",\"80\":\"8#最长重复子数组\",\"81\":\"8#思路-1\",\"82\":\"8#实现-1\",\"83\":\"8#无重复字符的最长子串\",\"84\":\"8#思路-2\",\"85\":\"8#实现-2\",\"86\":\"8#参考\",\"87\":\"8@0\",\"88\":\"9\",\"89\":\"9#前言\",\"90\":\"9#什么是缓存-cache\",\"91\":\"9#什么是前端缓存\",\"92\":\"9#前端有哪此缓存\",\"93\":\"9#http-缓存\",\"94\":\"9#与缓存有关的首部字段名\",\"95\":\"9#expires\",\"96\":\"9#cache-control\",\"97\":\"9#last-modified-与-if-modified-since\",\"98\":\"9#etag-与-if-none-match\",\"99\":\"9#强缓存\",\"100\":\"9#max-age-与-s-maxage\",\"101\":\"9#expires-与-max-age\",\"102\":\"9#缓存新鲜度与使用期算法\",\"103\":\"9#缓存新鲜度\",\"104\":\"9#使用期算法\",\"105\":\"9#从协商缓存到启发式缓存\",\"106\":\"9#协商缓存的生效流程\",\"107\":\"9#缓存标识-last-modified-与-etag\",\"108\":\"9#etag-原理及实现\",\"109\":\"9#启发式缓存\",\"110\":\"9#参考\",\"111\":\"9@0\",\"112\":\"9@1\",\"113\":\"10\",\"114\":\"10#http-缓存方案\",\"115\":\"10#前端应用中的-http-缓存方案\",\"116\":\"10#webpack-中的-hash-模式\",\"117\":\"10#用户操作与-http-缓存\",\"118\":\"10#chrome-的三种加载模式\",\"119\":\"10#模式三-清空缓存并硬性重新加载\",\"120\":\"10#为什么-ctrl-f5-还是命中了缓存\",\"121\":\"10#nginx-与跨域问题\",\"122\":\"10#使用-nginx-配置响应报头\",\"123\":\"10#memory-cache-与-disk-cache\",\"124\":\"10#memory-cache\",\"125\":\"10#disk-cache\",\"126\":\"10#浏览器缓存机制\",\"127\":\"10#缓存获取顺序\",\"128\":\"10#缓存存储优先级\",\"129\":\"10#preload-与-prefetch\",\"130\":\"10#service-worker\",\"131\":\"10#pwa\",\"132\":\"10#service-worker-介绍\",\"133\":\"10#存储型缓存\",\"134\":\"10#网站登录背后的存储逻辑\",\"135\":\"10#浏览器存储型缓存方案\",\"136\":\"10#chrome-浏览器-application-面板\",\"137\":\"10#参考\",\"138\":\"10@0\",\"139\":\"10@1\",\"140\":\"11\",\"141\":\"11#了解-event-emitter-pub-sub\",\"142\":\"11#源码解析\",\"143\":\"11#使用\",\"144\":\"11#技巧\",\"145\":\"11#巧用位运算符\",\"146\":\"11#创建数组副本\",\"147\":\"11#添加-typescript-类型\",\"148\":\"11#构建\",\"149\":\"11#常用工具和命令\",\"150\":\"11#测试\",\"151\":\"11#类型检测\",\"152\":\"11#eslint\",\"153\":\"11#其他-package-json-配置\",\"154\":\"11#打包\",\"155\":\"11#提交-发布\",\"156\":\"11#github-工作流\",\"157\":\"11#文档\",\"158\":\"11#总结\",\"159\":\"11@0\",\"160\":\"11@1\",\"161\":\"13\",\"162\":\"13#编译器\",\"163\":\"13#类型系统\",\"164\":\"13#typescript-vs-javascript\",\"165\":\"13#代码编辑器设置\",\"166\":\"13#tsconfg-json\",\"167\":\"13#eslint-json\",\"168\":\"13#index-ts\",\"169\":\"13@0\",\"170\":\"13@1\",\"171\":\"15\",\"172\":\"15#始识前端框架\",\"173\":\"15#描述-ui\",\"174\":\"15#组织-ui-与逻辑\",\"175\":\"15#组件间传输数据\",\"176\":\"15#前端框架分类依据\",\"177\":\"15#react-中的自变量与因变理\",\"178\":\"15#前端框架使用的技术\",\"179\":\"15#细粒度更新\",\"180\":\"15#aot\",\"181\":\"15#virtual-dom\",\"182\":\"15#前端框架的实现原理\",\"183\":\"15#svelte\",\"184\":\"15#vue3\",\"185\":\"15#react\",\"186\":\"15@0\",\"187\":\"15@1\",\"188\":\"16\",\"189\":\"16#问题与解决思路\",\"190\":\"16#底层架构的演进\",\"191\":\"16#fiber-架构\",\"192\":\"16#调试-react-源码\",\"193\":\"16@0\",\"194\":\"16@1\",\"195\":\"18\",\"196\":\"18@0\",\"197\":\"18@1\",\"198\":\"19\",\"199\":\"19#命令式和声明式\",\"200\":\"19#性能与可维护性的权衡\",\"201\":\"19#虚拟dom的性能如何\",\"202\":\"19#运行时和编译时\",\"203\":\"19@0\",\"204\":\"19@1\",\"205\":\"20\",\"206\":\"20#综合\",\"207\":\"20#vue\",\"208\":\"20#react\",\"209\":\"21\",\"210\":\"21#关键点\",\"211\":\"21#面试题\",\"212\":\"21#布局\",\"213\":\"21#应用\",\"214\":\"21#高级\",\"215\":\"21#参考\",\"216\":\"22\",\"217\":\"22#关键点\",\"218\":\"22#面试题\",\"219\":\"22#变量和类型\",\"220\":\"22#原型和原型链\",\"221\":\"22#作用域和闭包\",\"222\":\"22#执行机制\",\"223\":\"22#语法和api\",\"224\":\"22#web-api\",\"225\":\"22#应用\",\"226\":\"22#参考\",\"227\":\"23\",\"228\":\"24\",\"229\":\"25\",\"230\":\"26\",\"231\":\"27\",\"232\":\"28\",\"233\":\"29\",\"234\":\"30\",\"235\":\"31\",\"236\":\"32\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[3,7],\"2\":[1,30],\"3\":[3,23],\"4\":[1],\"5\":[4,65],\"6\":[2,37],\"7\":[3,64],\"8\":[2,30],\"9\":[2,8],\"10\":[1,21],\"11\":[3,77],\"12\":[1,5],\"13\":[2,71],\"14\":[1,38],\"15\":[1,25],\"16\":[1,16],\"17\":[1,118],\"18\":[null,null,1],\"19\":[null,null,1],\"20\":[3],\"21\":[1,4],\"22\":[1,46],\"23\":[1,24],\"24\":[3,60],\"25\":[1,145],\"26\":[1,265],\"27\":[1,128],\"28\":[1,23],\"29\":[3,53],\"30\":[3,20],\"31\":[2,34],\"32\":[1,20],\"33\":[1,12],\"34\":[2,32],\"35\":[1,14],\"36\":[1,7],\"37\":[null,null,1],\"38\":[null,null,2],\"39\":[4,9],\"40\":[1,39],\"41\":[1,20],\"42\":[1,20],\"43\":[1,26],\"44\":[2,86],\"45\":[1,5],\"46\":[1,76],\"47\":[1,144],\"48\":[2,75],\"49\":[1,4],\"50\":[1,80],\"51\":[1,135],\"52\":[3,61],\"53\":[1,48],\"54\":[1,21],\"55\":[1,20],\"56\":[1],\"57\":[4,44],\"58\":[null,null,1],\"59\":[null,null,2],\"60\":[1],\"61\":[2,20],\"62\":[1,3],\"63\":[1,7],\"64\":[1,60],\"65\":[1],\"66\":[1,6],\"67\":[1,14],\"68\":[1,2],\"69\":[1,14],\"70\":[1,10],\"71\":[1,5],\"72\":[1,17],\"73\":[1,8],\"74\":[1,16],\"75\":[1],\"76\":[1,24],\"77\":[1,18],\"78\":[1,13],\"79\":[1,41],\"80\":[1,9],\"81\":[1,15],\"82\":[1,43],\"83\":[1,6],\"84\":[1,19],\"85\":[1,69],\"86\":[1,4],\"87\":[null,null,1],\"88\":[3],\"89\":[1,2],\"90\":[3,19],\"91\":[2,14],\"92\":[2,27],\"93\":[2,67],\"94\":[1,48],\"95\":[1,26],\"96\":[2,77],\"97\":[5,33],\"98\":[5,26],\"99\":[1,9],\"100\":[5,32],\"101\":[4,11],\"102\":[1,14],\"103\":[1,25],\"104\":[1,53],\"105\":[1,6],\"106\":[1,51],\"107\":[5,68],\"108\":[2,53],\"109\":[1,25],\"110\":[1,12],\"111\":[null,null,1],\"112\":[null,null,1],\"113\":[3],\"114\":[2],\"115\":[3,69],\"116\":[4,63],\"117\":[3],\"118\":[2,53],\"119\":[2,5],\"120\":[5,24],\"121\":[2,65],\"122\":[3,68],\"123\":[4],\"124\":[2,14],\"125\":[2,14],\"126\":[1],\"127\":[1,11],\"128\":[1,19],\"129\":[3,28],\"130\":[2],\"131\":[1,47],\"132\":[3,220],\"133\":[1],\"134\":[1,52],\"135\":[1,102],\"136\":[4,23],\"137\":[1,12],\"138\":[null,null,1],\"139\":[null,null,1],\"140\":[2,12],\"141\":[5,50],\"142\":[1,92],\"143\":[1,26],\"144\":[1],\"145\":[1,45],\"146\":[1,18],\"147\":[3,90],\"148\":[1,84],\"149\":[1,38],\"150\":[1,66],\"151\":[1,26],\"152\":[1,54],\"153\":[4,74],\"154\":[1,42],\"155\":[2,36],\"156\":[2,85],\"157\":[1,42],\"158\":[1,10],\"159\":[null,null,1],\"160\":[null,null,2],\"161\":[2,14],\"162\":[1,50],\"163\":[1,11],\"164\":[3,28],\"165\":[1,16],\"166\":[2,67],\"167\":[2,41],\"168\":[2,22],\"169\":[null,null,1],\"170\":[null,null,1],\"171\":[1],\"172\":[1,68],\"173\":[2,103],\"174\":[3,92],\"175\":[1,47],\"176\":[1,50],\"177\":[2,54],\"178\":[1],\"179\":[1,117],\"180\":[1,141],\"181\":[2,56],\"182\":[1],\"183\":[1,33],\"184\":[1,143],\"185\":[1,56],\"186\":[null,null,1],\"187\":[null,null,1],\"188\":[2],\"189\":[1],\"190\":[1],\"191\":[2],\"192\":[3],\"193\":[null,null,1],\"194\":[null,null,1],\"195\":[1,1],\"196\":[null,null,1],\"197\":[null,null,1],\"198\":[1,15],\"199\":[1,28],\"200\":[1,29],\"201\":[1,47],\"202\":[1,52],\"203\":[null,null,1],\"204\":[null,null,1],\"205\":[1,3],\"206\":[1,49],\"207\":[1,21],\"208\":[1,9],\"209\":[2],\"210\":[1,16],\"211\":[1],\"212\":[1,13],\"213\":[1,21],\"214\":[1,5],\"215\":[1,9],\"216\":[2],\"217\":[1,37],\"218\":[1],\"219\":[1,4],\"220\":[1,15],\"221\":[1,13],\"222\":[1,22],\"223\":[1,22],\"224\":[2,19],\"225\":[1,30],\"226\":[1,13],\"227\":[1,1],\"228\":[1,1],\"229\":[1,3],\"230\":[1],\"231\":[1],\"232\":[1],\"233\":[1],\"234\":[1],\"235\":[1],\"236\":[1]},\"averageFieldLength\":[1.6050966455964963,39.44407705797412,0.3028473036604917],\"storedFields\":{\"0\":{\"h\":\"pnpm 特性及基本使用\"},\"1\":{\"h\":\"什么是 pnpm?\",\"t\":[\"performant npm ，意味“高性能的 npm”。 快速的，节省磁盘空间的包管理工具。\"]},\"2\":{\"h\":\"特性概览\",\"t\":[\"速度快\",\"非扁平的包结构，没有 npm3+/yarn 复杂的扁平算法，且只更新变化的文件\",\"高效利用磁盘空间\",\"pnpm 内部使用基于内容寻址的文件系统来存储磁盘上所有的文件：\",\"不会重复安装同一个包\",\"即使一个包的不同版本，pnpm 也会极大程度地复用之前版本的代码（保留未更新文件的hardlink）\",\"支持 monorepo\",\"用一个 git 仓库来管理多个子项目，所有的子项目都存放在根目录的 packages 目录下，那么一个子项目就代表一个package。\",\"安全性高\",\"规避非法访问未声明依赖的风险，未在 package.json 中声明的包无法访问。\"]},\"3\":{\"h\":\"与 npm 的区别\",\"t\":[\"pnpm 与 npm 命令使用方法很相似，但有以下区别：\",\"pnpm install 命令会将包安装在项目根目录下的 node_modules/.pnpm-store 目录中。与其他包管理器不同，pnpm 不会将每个包都安装在独立的目录中，而是共享相同的包存储。这可以节省磁盘空间，并且可以加快安装速度，因为相同的包只需要下载一次。\",\"安装依赖项时，pnpm 会自动执行依赖项之间的垃圾回收，自动检测哪些包不再被使用，并将其删除，从而进一步减少磁盘占用。\"]},\"4\":{\"h\":\"依赖管理\"},\"5\":{\"h\":\"npm/yarn install 原理\",\"t\":[\"分为两部分：\",\"执行该命令后，包如何到达项目 node_modules 当中\",\"node_modules 内部如何管理依赖\",\"执行命令后，首先会构建依赖树。然后针对每个节点下的包会做如下处理:\",\"解析依赖包版本区间为具体版本号\",\"下载对应版本依赖的 tar 包到本地离线镜像，并解压到本地缓存\",\"将依赖从缓存拷贝到当前目录的 node_modules 目录\",\"npm 1/2中，依赖在 node_modules 中的目录结构为嵌套结构。依赖层层嵌套存在的问题：\",\"依赖层级太深，会导致文件路径过长的问题（windows）\",\"大量包被重复安装（A、B包依赖同一个版本的C包，在A、B包下的node_modules会重复安装C包）\",\"模块实例不能共享（比如两个不同包引入React版本不一致，无法共享内部变量导致未知bug）\",\"npm3/yarn，通过扁平化依赖解决上述问题。所有依赖都被提升到 node_modules 根目录下。\",\"安装新包时会根据 node require 机制，会不停往上级的 node_modules 当中去找，如果找到相同版本的包就不会重新安装，解决了重复安装包问题，避免依赖层级过深。 但它也存在以下问题：\",\"依赖结构的不确定性\",\"当A/B两个包同时依赖C包的不同版本，到底把哪个C包版本扁平化到node_modules下取决于A/B包在package.json 中的位置，靠前优先。*-lock.json 文件的诞生才解决此问题（npm 5.x/yarn）。\",\"扁平化算法本身的复杂性很高，耗时较长\",\"项目中仍然可以非法访问没有声明过依赖的包\"]},\"6\":{\"h\":\"pnpm 依赖管理\",\"t\":[\"以安装 express 为例：\",\"pnpm init pnpm install express\",\"node_modules目录如下：\",\".pnpm .modules.yaml express\",\"上面的 express 仅是一个软链接，其真实的位置在 .pnpm/express@4.18.2/node_modules/express。\",\"将 包本身 和 依赖 放在同一个node_module下面，与原生 Node 解析完全兼容，又能将 package 与相关的依赖很好地组织到一起，设计精妙。\",\"image.png\",\"可以看到，node_modules 下面的依赖包跟 package.json 声明的依赖基本保持一致，整体上更清晰规范。\"]},\"7\":{\"h\":\"node_modules 结构\",\"t\":[\"pnpm 的 node_modules 布局使用符号链接来创建依赖项的嵌套结构。 node_modules 中每个包的每个文件都是来自内容可寻址存储的硬链接。这项技术被称作“虚拟文件系统”，用于在所有项目间共享依赖项。\",\"在 pnpm 中，每个项目都有一个名为 .node_modules/.pnpm 的目录，其中包含所有依赖项的符号链接。这些符号链接指向全局存储仓库 ~/Library/pnpm/store ，它用于存储所有项目共享的包。。\",\"如果某个包不存在于本地的 node_modules/.pnpm 目录中，则 pnpm 会在 ~/Library/pnpm/store 目录中下载该包，并将其安装到本地的 node_modules/.pnpm 目录中。然后，pnpm 会使用硬链接技术将其链接到项目的 node_modules 目录中。\",\"示例： 假设安装了依赖于 bar@1.0.0 的 foo@1.0.0，会经历以下步骤。\",\"pnpm 会将两个包硬链接到 node_modules\",\"创建符号链接来构建嵌套的依赖关系图结构（两个包都硬链接到一个 node_modules 文件夹（foo@1.0.0/node_modules/foo）内的子文件夹中）\",\"符号链接依赖项（bar 将被符号链接到 foo@1.0.0/node_modules 文件夹） \",\"允许包自行导入自已\",\"避免循环符号链接（依赖以及需要依赖的包被放置在一个文件夹下）\",\"处理直接依赖关系（foo 将被符号链接至根目录的 node_modules 文件夹）\",\"无论依赖项的数量和依赖关系图的深度如何，布局都会保持上述结构。 这与 Node 的模块解析算法完全兼容！ 解析模块时，Node 会忽略符号链接，被依赖项是被解析到其实际位置。\",\"此布局的一大好处：只有真正在依赖项中的包才能访问。使用平铺的 node_modules 结构，所有被提升的包都可以访问。 这避免了 npm3+/yarn 中的非法访问依赖问题。\"]},\"8\":{\"h\":\"处理 peers\",\"t\":[\"peer 依赖项（peer dependencies）会从依赖图中更高的已安装的依赖项中解析（resolve），因为它们与父级共享相同的版本。\",\"通常，如果一个 package 没有 peer 依赖项（peer dependencies），它会被硬链接到其依赖项的软连接（symlinks）旁的 node_modules。\",\"但是，如果该 package 有 peer 依赖（peer dependencies），那么它可能就会有多组依赖项，所以pnpm为不同的 peer 依赖项创建不同的解析。Node.js 模块解析器将找到正确的 peers。\",\"如果一个package的依赖有peer依赖，这些依赖会在更高的依赖图中解析, 则这个传递package便可在项目中有几组不同的依赖项。\"]},\"9\":{\"h\":\"使用 pnpm\",\"t\":[\"大多数npm/yarn的使用经验可无缝切换到pnpm上。\",\"常用命令：pnpm install/uninstall/update/link\"]},\"10\":{\"h\":\"filter\",\"t\":[\"pnpm filter 命令可以过滤出符合条件的包，然后对这些包执行指定的操作：\",\"pnpm filter <pattern> <command>\",\"其中，<pattern> 是一个正则表达式，用于匹配包的名称，<command> 则是要执行的命令，可以是任何 pnpm 支持的命令。例如，要查找所有名称以 react 开头的包，并更新它们的版本，可以使用以下命令：\",\"pnpm filter \\\"^react\\\" update\",\"更多用法参考官网\"]},\"11\":{\"h\":\"管理 monorepo 项目\",\"t\":[\"使用 pnpm init创建项目，配置 pnpm-workspace.yaml 设置 workspace，下面配置表示将 packages 下的所有文件夹都当做一个 package，添加到 monorepo 中进行管理：\",\"packages: - 'packages/**'\",\"设置工程目录下 package.json 的 private 为 true，防止根目录被发布。\",\"然后创建 packages 文件夹，并在其中创建两个子项目：web端、工具类。\",\"├── packages │ ├── shared │ └── web\",\"全局依赖 像 lodash 这样的全局依赖，可将其安装到根目录，即：\",\"pnpm install lodash-es -Dw\",\"-w 代表在根目录安装依赖\",\"局部依赖 为指定 package 单独安装依赖，可使用 --filter 标志将命令限定于子集。\",\"pnpm install vue --filter @hugon/web\",\"package 间的相互依赖 例如 @hugon/web 依赖 @hugon/shared，基于 pnpm 提供的 workspace:协议，可以方便的在 packages 内部进行互相引用：\",\"pnpm install @hugon/shared --filter @hugon/web\",\"此时 web 项目下的 node_modules 中新增了 @hugon/shared 软链以指向该包。 当执行 pnpm publish发布时，会把基于的 workspace 的依赖变成外部依赖，以解决开发和生产环境的依赖问题。\",\"只允许使用pnpm包管理器 安装 only-allow\",\"{ \\\"scripts\\\": { \\\"preinstall\\\": \\\"npx only-allow pnpm\\\" } }\"]},\"12\":{\"h\":\"Release工作流\",\"t\":[\"使用官方推荐之一的 changesets 来作包的版本管理，它的主要工作是管理包的version和生成changelog。\"]},\"13\":{\"h\":\"配置 changesets\",\"t\":[\"pnpm add -Dw @changesets/cli # 安装到工作空间的根目录中 pnpm changesets init # 初始化\",\"执行完初始化命令后，会在工程的根目录下生成 .changeset 目录，其中的 config.json 作为默认的 changeset 的配置文件。 修改配置：\",\"{ \\\"$schema\\\": \\\"https://unpkg.com/@changesets/config@2.0.0/schema.json\\\", \\\"changelog\\\": \\\"@changesets/cli/changelog\\\", \\\"commit\\\": false, \\\"linked\\\": [[\\\"@hugon/*\\\"]], \\\"access\\\": \\\"public\\\", \\\"baseBranch\\\": \\\"main\\\", \\\"updateInternalDependencies\\\": \\\"patch\\\", \\\"ignore\\\": [], \\\"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\\\": { \\\"onlyUpdatePeerDependentsWhenOutOfRange\\\": true } }\",\"说明：\",\"changelog: changelog 生成方式\",\"commit: 不要让 changeset 在 publish 的时候帮我们做 git add\",\"linked: 配置哪些包要共享版本\",\"access: 公私有安全设定，内网建议 restricted ，开源使用 public\",\"baseBranch: 项目主分支\",\"updateInternalDependencies: 确保某包依赖的包发生 upgrade，该包也要发生 version upgrade 的衡量单位（量级）\",\"ignore: 不需要变动 version 的包\",\"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH: 在每次 version 变动时一定无理由 patch 抬升依赖他的那些包的版本，防止陷入 major 优先的未更新问题\"]},\"14\":{\"h\":\"使用changesets\",\"t\":[\"在工程根目录下 pacakge.json 的 scripts 中增加如下脚本，以便于统一管理所有包的发布过程：\",\"{ // 编译阶段，生成构建产物 \\\"build\\\": \\\"pnpm --filter=@qftjs/* run build\\\", // 清理构建产物和 node_modules \\\"clear\\\": \\\"rimraf 'packages/*/{lib,node_modules}' && rimraf node_modules\\\", // 执行 changeset，开始交互式填写变更集 \\\"changeset\\\": \\\"changeset\\\", // 修改发布包的版本，注意需严格遵循 semver 版本规范 \\\"version-packages\\\": \\\"changeset version\\\", // 构建后产物发布 \\\"release\\\": \\\"pnpm build && pnpm release:only\\\", \\\"release:only\\\": \\\"changeset publish --registry=https://registry.npmjs.com/\\\" }\"]},\"15\":{\"h\":\"使用Prerelease模式\",\"t\":[\"发布带 tag 的 prerelease版本 (如beta或者rc版本)，通过 pre enter <tag> 命令进入先进入 pre 模式。 <tag> 包含：alpha、beta、rc。\",\"pnpm changeset pre enter beta\",\"之后在此模式下的 changeset publish 均将默认走 beta 环境。完成版本发布之后，退出 Prereleases 模式：\",\"pnpm changeset pre exit\"]},\"16\":{\"h\":\"总结\",\"t\":[\"pnpm 基于 symlink 和 hard link 机制，解决 npm/yarn 上存在的问题，能高效地管理包的版本及依赖\",\"pnpm 天然支持使用 monorepo 模式管理项目\",\"pnpm 能更安全地处理依赖访问和解析问题\"]},\"17\":{\"h\":\"参考\",\"t\":[\"关于现代包管理器的深度思考——为什么现在我更推荐 pnpm 而不是 npm/yarn? - 掘金\",\"介绍特性：快、省、安全（及原因）、支持monorepo\",\"介绍 npm/yarn install 原理和存在的问题，及 pnpm 的依赖管理是如何解决的\",\"Pnpm: 最先进的包管理工具\",\"symlink 和 hard link 机制介绍。store 目录用于存储依赖的 hard links\",\"symlink 在 windows 存在兼容问题，使用 junctions 特性代替\",\"解决痛点：Phantom dependencies 和 NPM doppelgangers\",\"pnpm 不适用场景：Electron、部署在 lambda 上的应用\",\"新一代包管理工具 pnpm 使用心得\",\"dependencies 和 devDependencies 的区别，及 peerDependencies 的使用\",\"与传统包管理器文件结构对比\",\"优势：硬链接节省磁盘，软链接优化依赖管理\",\"老项目迁移，解决幽灵依赖问题，在.npmrc 文件中配置 public-hoist-pattern 或 shamefully-hoist 字段（不推荐）\",\"Flat node_modules is not the only way | pnpm\",\"Linux软连接和硬链接 - iTech - 博客园\",\"Quick Start：用 pnpm 管理 Monorepo 项目\",\"pnpm 的全局、局部依赖安装方式\",\"同时运行多个子包命令脚本\",\"pnpm + workspace + changesets 构建你的 monorepo 工程 - 掘金\",\"工程初始化及依赖包安装\",\"使用changesets管理release工作流\",\"代码及commit规范配置（eslint、commitizen）\",\"2023 年了！ pnpm monorepo用起来！ - 掘金\",\"使用rollup打包输入配置（多包相同编译、子包自定义编译输出格式、命令行打包并指定格式、ts打包）\",\"changesets的使用\",\"预发布版本\",\"代码格式校验（lint、prettier、lint-stage、simple-git-hooks）\",\"代码提交规范（commitzen、commitlint）\"]},\"18\":{\"c\":[\"工程化\"]},\"19\":{\"c\":[\"pnpm\"]},\"20\":{\"h\":\"前端脚手架 CLI 方案探索\"},\"21\":{\"h\":\"介绍\",\"t\":[\"脚手架是工程化中的重要环节，用于新项目的启动和搭建，能帮助开发者提升效率和开发体验。\"]},\"22\":{\"h\":\"使用场景\",\"t\":[\"脚手架自动生成项目的使用场景非常广泛，特别是在需要频繁创建新项目的情况下。以下是一些常见的使用场景：\",\"新项目启动：当需要启动一个新项目时，可以使用脚手架自动生成项目的基础结构，包括目录结构、配置文件、依赖项等，从而加快项目启动的速度。\",\"快速原型开发：快速创建一个原型，从而节省时间和精力。\",\"统一项目结构：统一多个项目的结构和规范时，从而确保项目结构和规范的一致性。\",\"项目模板定制：为不同的项目创建不同的模板，并根据不同的需求进行定制化，从而提高项目的可维护性和可扩展性。\",\"总之，脚手架自动生成项目可以帮助开发人员快速创建项目，并且提高项目的可维护性和可扩展性，特别是在需要频繁创建新项目或者需要统一多个项目的结构和规范时，使用脚手架可以提高开发效率和代码质量。 在前端工程化中，脚手架是不可或缺的一环。\",\"通常，开发新项目大都是直接复制之前的项目代码，然后删减，这显然不是优雅的方式。因此，需要脚手架自动生成项目，在项目初始化时就具有统一的技术栈、权限、基础功能、代码规范，以及项目构建流程，甚至单元测试等。\",\"更进一步，上述统一化的功能可当做独立的包发布和维护，以方便后续在各个项目中版本升级。这样新项目开发只需专注于业务，无需过多关项目构建及公共逻辑维护，提高前端研发能效。\"]},\"23\":{\"h\":\"实现原理\",\"t\":[\"现代脚手架离不开命令行工具（CLI），流畅的命令行工具能快速启动脚手架，实现高度自动化和智能化流程。\",\"为了实现一个简单的命令行工具，用于创建基于模板的项目，我们需要使用以下依赖包：\",\"prompts： 处理复杂的用户输入，完成命令行交互\",\"kolorist: 在终端输出彩色信息文案\",\"commander: 命令行参数解析\",\"最终，我们的目标是支持以下方式启动项目：\",\"npm create hugon\",\"hugon 是这个项目的名称，需要创建一个 create-hugon 包并发布到 npm 上。\"]},\"24\":{\"h\":\"npm create 命令\",\"t\":[\"npm create 是一个用于创建新项目的 npm 命令。它可以自动化地创建一个新的项目，包括一些常见的配置和文件，以及安装一些常用的依赖项。使用 npm create命令可以极大地简化项目的初始化过程。\",\"要使用 npm create 命令创建一个新项目，只需要在终端中输入 npm create <package-name>，其中 <package-name> 是你想要创建的项目的名称。 npm 会首先检查本地是否已经安装了 create-<package-name> 包。如果没有安装，则会自动从 npm registry 下载该包，并将其安装到本地的 node_modules 目录中。\",\"npm 6.1 及以上版本可以使用 npm init 或 npm create 命令启动项目。 npm v6 给 init新增了 create 别名（命令行 npm help create 查看详细文档）。\",\"然后，npm 会执行 create-<package-name> 包中的一个名为 bin/create-<package-name> 的脚本（定义在 package.json 中），该脚本负责生成新项目的文件和配置(通常会定义一些模板和配置文件，将它们复制到新项目的目录中，并根据用户的选择和输入进行初始化配置)。\",\"npm create 命令会用以下形式交由 npm exec 安装，然后执行其 bin 脚本\",\"npm create foo -> npm exec create-foo npm create @usr/foo -> npm exec @usr/create-foo\"]},\"25\":{\"h\":\"启动命令行项目\",\"t\":[\"先如下创建项目\",\"mkdir create-hugon && cd create-hugon npm init --yes\",\"接着创建 src 目录及 index.ts 文件，内容如下：\",\"import minimist from 'minimist' const argv = minimist<{ template?: string }>(process.argv.slice(2), { string: ['_'] }) const cwd = process.cwd() async function init() { console.log(argv); } init().catch((e) => { console.error(e) })\",\"安装依赖包：\",\"pnpm add unbuild kolorist minimist prompts -D pnpm add typescript @types/node -D\",\"在 package.json 添加编译命令，使用 unbuild 构建打包，会生成开发时 stub，用于开发调试，而不用 watch 一直监听文件构建：\",\"{ \\\"scripts\\\": { \\\"dev\\\": \\\"unbuild --stub\\\" },\",\"--stub 选项用于创建一个轻量级的启动脚本，这个启动脚本被称为 stub。它的作用是在运行时加载打包后的代码，并将控制权转交给打包后的代码。通常情况下，stub 会非常小，只包含一些必要的代码，例如加载打包后的代码的逻辑等。\",\"unbuild 打包后的文件实际使用 jiti 库作为 require 的替代品，以提高性能。 使用 require 加载模块时，Node.js 会在每次加载模块时重新解析和编译代码。而 jiti 则可以将模块编译成可重用的 JavaScript 函数（并将其缓存起来），从而提高应用程序的性能。\",\"为了使 CLI 可以在终端执行，需在 package.json 中指定 bin 文件入口，注册一个名为 create-hugon 的命令。\",\"{ \\\"type\\\": \\\"module\\\", // 指定文件作为ES模块语法加载 \\\"bin\\\": { \\\"create-hugon\\\": \\\"index.js\\\" }, \\\"main\\\": \\\"index.js\\\" }\",\"bin 字段用于声明一些可执行文件的路径，通常是一些命令行工具或者脚本。 在终端中输入这些命令时，实际上是在执行对应的可执行文件。操作系统会在环境变量 PATH 中定义的路径中寻找对应的可执行文件并执行。 在安装包时，npm 会将 bin 字段中声明的可执行文件链接到全局 node_modules/.bin 目录下。这个目录也会被添加到环境变量 PATH 中，所以可以直接在终端中执行这些命令。 在终端中执行 create-hugon 命令，实际上就是在执行 ./bin/create-hugon.js 文件。\",\"先执行 npm run dev ，会在 dist 下生成 index.mjs 文件。然后在 index.js 内引入，作为包的入口文件。\",\"#!/usr/bin/env node import './dist/index.mjs'\",\"为了调试方便，将当前项目链接到全局环境中（执行npm ls -g 可查看已安装到全局的命令）：\",\"npm link\",\"npm link 命令会在全局 node_modules 目录中创建一个指向本地包的符号链接，然后在当前项目的 node_modules 目录中创建一个指向全局包的符号链接，这样就可以在当前项目中使用本地包了。\",\"现在就可以执行 create-hugon 命令了\",\"create-hugon my-hugon-app --template admin-ts #> { _: [ 'my-hugon-app' ], template: 'admin-ts' }\"]},\"26\":{\"h\":\"解析处理命令行输入\",\"t\":[\"上文中，我们创建了一个命令行项目，可以全局执行该命令，并且可以接收用户输入参数。接下来，我们需要解析命令行输入，以编写项目创建逻辑。\",\"使用 prompts 模块支持用户交互，同时使用 minimist 模块解析命令行参数。在 init 函数中编写参数解析逻辑。需要设计命令行支持的几个选项目：\",\"_[0]: 创建的项目目录名称\",\"template: 支持默认的几种模板类型，用户可通过 select 命令进行选择\",\"利用 prompts 使命令行支持用户交互，使用 minimist 解析命令行参数。在 init 函数中编写参数解析逻辑。\",\"首先，要定义一个模板选择列表的数据结构：\",\"import { blue, green, yellow } from 'kolorist' type ColorFunc = (str: string | number) => string type Platform = { name: string display: string color: ColorFunc variants: PlatformVariant[] } type PlatformVariant = { name: string display: string color: ColorFunc } const PLATFORMS: Platform[] = [ { name: 'admin', display: 'Admin', color: green, // 提供 ts 和非 ts 的两种变体选项 variants: [ { name: 'admin', display: 'JavaScript', color: yellow, }, { name: 'admin-ts', display: 'TypeScript', color: blue, }, ], }, ]\",\"上面定义了 admin 模板，用于管理后台。\",\"import prompts from 'prompts' import { blue, green, red, yellow, reset } from 'kolorist' import { fileURLToPath } from 'node:url' // 获取模板名列表 const TEMPLATES = PLATFORMS.map( (f) => (f.variants && f.variants.map((v) => v.name)) || [f.name], ).reduce((a, b) => a.concat(b), []) const renameFiles: Record<string, string | undefined> = { _gitignore: '.gitignore', } const defaultTargetDir = 'hugon-project' async function init() { // 获取输出的目标文件夹参数，例 npm create hugon my-hugon，argTargetDir 为 my-hugon const argTargetDir = formatTargetDir(argv._[0]) // 获取指定模板参数 const argTemplate = argv.template let targetDir = argTargetDir || defaultTargetDir // 获取项目名 const getProjectName = () => targetDir === '.' ? path.basename(path.resolve()) : targetDir let result: prompts.Answers<'projectName' | 'overwrite' | 'packageName' | 'template'> try { // 按顺序执行询问 // type 为 falsy 值时询问器会跳过当前问题 result = await prompts([ { // 文本输入框 type: argTargetDir ? null : 'text', // 用户响应将会保存到返回响应对象中的这个属性上 name: 'projectName', // 重置命令行文案 message: reset('Project name:'), // 默认值 initial: defaultTargetDir, // 获取用户响应值 onState: (state) => { targetDir = formatTargetDir(state.value) || defaultTargetDir }, }, ], { // 用户取消操作（按ctrl+C，或 ESC） onCancel: () => { throw new Error(red('✖') + ' 操作已取消') }, }) } catch (cancelled: any) { console.log(cancelled.message) return } console.log(result) } function formatTargetDir(targetDir: string | undefined) { return targetDir?.trim().replace(/\\\\/+$/g, '') }\",\"此时，在命令行输入 create-hugon，命令行交互会提示用户输入项目名，未输入则使用默认名称：\",\"create-hugon create-hugon ? Project name: › hugon-project\",\"完整的 prompts 用法查看此文档\",\"接下来完善其它问询：\",\"try { // 按顺序执行询问 // type 为 falsy 值时询问器会跳过当前问题 result = await prompts([ // ... ... { // 若存项目目录存在并不为空，询问用户是否覆盖 type: () => !fs.existsSync(targetDir) || isEmpty(targetDir) ? null : 'confirm', name: 'overwrite', message: () => targetDir === '.' ? '当前目录' : `目标目录 \\\"${targetDir}\\\" 不为空。是否移除存在的文件并继续？`, }, { // type 为函数时，入参签名 (prev, values, prompt)。values 为之前所收集的用户回答 // 若用户选择不覆盖，中止操作 type: (_, { overwrite }: { overwrite?: boolean }) => { if (overwrite === false) { throw new Error(red('✖') + ' 操作已取消') } return null }, name: 'overwriteChecker', }, { // 检查项目名是否合法，不合法需重新输入（会尝试处理为合法值作为默认值） type: () => (isValidPackageName(getProjectName()) ? null : 'text'), name: 'packageName', message: reset('项目名称:'), // 将获取的项目名处理为合法值，并作为默认值 initial: () => toValidPackageName(getProjectName()), // 再次校验用户输入的项目名。返回 true 表示校验通过，返回字符串为用户自定义错误信息 validate: (dir) => isValidPackageName(dir) || '无效的 package.json name 字段', }, { // 指定的模板不在列表中，则让用户重新从列表选择 type: argTemplate && TEMPLATES.includes(argTemplate) ? null : 'select', name: 'framework', message: typeof argTemplate === 'string' && !TEMPLATES.includes(argTemplate) ? reset(`\\\"${argTemplate}\\\" 不是有效模板. 请从下方选择: `) : reset('选择平台:'), initial: 0, choices: PLATFORMS.map((platform) => { return { title: platform.color(platform.display || platform.name), value: platform, } }), }, { // 选择平台下的变体 type: (platform: Platform) => platform && platform.variants ? 'select' : null, name: 'variant', message: reset('选择变体:'), choices: (platform: Platform) => platform.variants.map((variant) => { return { title: variant.color(variant.display || variant.name), value: variant.name, } }), } ], { // 用户取消操作 onCancel: () => { throw new Error(red('✖') + ' 操作已取消') }, }) } catch (cancelled: any) { console.log(cancelled.message) return }\",\"其它工具函数：\",\"import fs from 'node:fs' import path from 'node:path' function isEmpty(path: string) { const files = fs.readdirSync(path) return files.length === 0 || (files.length === 1 && files[0] === '.git') } function emptyDir(dir: string) { if (!fs.existsSync(dir)) { return } for (const file of fs.readdirSync(dir)) { if (file === '.git') { continue } fs.rmSync(path.resolve(dir, file), { recursive: true, force: true }) } } function isValidPackageName(projectName: string) { return /^(?:@[a-z\\\\d\\\\-*~][a-z\\\\d\\\\-*._~]*\\\\/)?[a-z\\\\d\\\\-~][a-z\\\\d\\\\-._~]*$/.test( projectName, ) } // 将包名转为合法值 function toValidPackageName(projectName: string) { return projectName .trim() .toLowerCase() .replace(/\\\\s+/g, '-') .replace(/^[._]/, '') .replace(/[^a-z\\\\d\\\\-~]+/g, '-') } // 复制文件或文件夹 function copy(src: string, dest: string) { const stat = fs.statSync(src) if (stat.isDirectory()) { copyDir(src, dest) } else { fs.copyFileSync(src, dest) } } // 复制目录 function copyDir(srcDir: string, destDir: string) { fs.mkdirSync(destDir, { recursive: true }) for (const file of fs.readdirSync(srcDir)) { const srcFile = path.resolve(srcDir, file) const destFile = path.resolve(destDir, file) copy(srcFile, destFile) } } function isEmpty(path: string) { const files = fs.readdirSync(path) return files.length === 0 || (files.length === 1 && files[0] === '.git') } // 删除目录（保留 .git 目录） function emptyDir(dir: string) { if (!fs.existsSync(dir)) { return } for (const file of fs.readdirSync(dir)) { if (file === '.git') { continue } fs.rmSync(path.resolve(dir, file), { recursive: true, force: true }) } } // 获取包信息 function pkgFromUserAgent(userAgent: string | undefined) { if (!userAgent) return undefined const pkgSpec = userAgent.split(' ')[0] const pkgSpecArr = pkgSpec.split('/') return { name: pkgSpecArr[0], version: pkgSpecArr[1], } }\"]},\"27\":{\"h\":\"创建项目\",\"t\":[\"各个模板源码放置于 create-hugon 下，以 template- 开头的目录。如选择 admin/admin-ts，则会以 create-hugon/template-admin-ts 模板生成项目。\",\"创建项目的主要代码：\",\"// 用户选择的选项 const { platform, overwrite, packageName, variant } = result const root = path.join(cwd, targetDir) // 创建项目文件夹，已存在则先删除其下非 .git 文件夹的文件或文件夹 if (overwrite) { emptyDir(root) } else if (!fs.existsSync(root)) { fs.mkdirSync(root, { recursive: true }) } const template: string = variant || platform?.name || argTemplate // process.env.npm_config_user_agent 拿到包含版本信息的用户代理字符串，例如： // 'pnpm/6.23.2 npm/? node/v16.13.0 darwin arm64' const pkgInfo = pkgFromUserAgent(process.env.npm_config_user_agent) const pkgManager = pkgInfo ? pkgInfo.name : 'npm' console.log(`\\\\n在 ${root} 中创建项目...`) // 模板文件目录 const templateDir = path.resolve( fileURLToPath(import.meta.url), '../..', `template-${template}`, ) const files = fs.readdirSync(templateDir) // 复制模板目录的文件到目标目录 for (const file of files.filter((f) => f !== 'package.json')) { write(file) } const pkg = JSON.parse( fs.readFileSync(path.join(templateDir, `package.json`), 'utf-8'), ) pkg.name = packageName || getProjectName() // 修改 package.json 中的 name 字段为项目名称 write('package.json', JSON.stringify(pkg, null, 2)) // 输出项目启动引导 // ... ...\",\"至此，就完成了一个脚手架的雏形。脚手架生成项目的整体流程：\",\"首先询问用户项目名称，如果存在项目名称对应的目录，并且不是空目录，询问用户是否覆盖。如果选择不覆盖，则中止操作；如果选择覆盖，则检查项目名是否合法，不合法需要重新输入。\",\"指定模板，如果命令行指定的模板不在模板列表中，让用户重新从列表选择。如果不选择，则使用默认模板。\",\"如果上面选择了平台类型，需要再选择其下的具体项目类型。\",\"创建项目文件夹，如果目录已存在，则先删除其下非 .git 文件夹的文件或文件夹。\",\"修改 package.json 中的 name 字段为项目名称。\",\"控制台输出项目启动引导指示。\"]},\"28\":{\"h\":\"对比分析\",\"t\":[\"主流的脚手架生成方案：\",\"提供集成式的项目模板（选择少，功能集成度高，更适合业务类的复杂脚手架， 如 create-vite）\",\"提供更细致的特性选项（更侧重特性的组合性，通常用于基于框架的简单脚手架， 如 create-vue / vue-cli）\",\"独立的的模板仓库（区别于上面的两种，在一个仓库中维护一个模板）\",\"上面的 「实现原理」章节所写的 CLI 采用的是 create-vite 的集成式方案。\"]},\"29\":{\"h\":\"集成式：create-vite\",\"t\":[\"基于 vite， 生成主流框架基础模板的工具。\",\"create-vite 属于 vite 项目的一个子包，使用 monorepo 方式管理。\",\"其下提供了很多模板，如：vanilla，vanilla-ts, vue, vue-ts，react，react-ts等\",\"可见，它主要是基于选定框架，以及基于语言或特性的变体（如选择生成 vue 项目，可选TS版本或非TS版本的），相对选项式的粒度更粗。\",\"这是社区目前流行的一种模板管理方式，在此之前使用的是独立的模板仓库。\",\"通常会以 pnpm monorepo 或 lerna 方式（单仓库管理多个项目，对应的是 mutliRepo）管理此类项目，收益是：\",\"模板集中统一管理，更直观\",\"工作流程一致性，版本依赖提升。如果依赖发生变化，可以及时同步到其他使用到的 package 中\",\"降低项目基建成本。所有项目复用一套标准的工具和规范，无需切换开发环境\",\"团队协作更容易。方便共享和复用代码，方便检索项目源码，简化 commit 记录，统一版本管理\"]},\"30\":{\"h\":\"选项式：create-vue\",\"t\":[\"用于生成基于 vite 的 vue 框架基础模板的工具（可看作 vue-cli 的升级版本）。\",\"如上图，此类脚手架会提供一些基础特性以供选择，询问是否使用某些特性，根据选择创建模板。\",\"此类脚手架比较适合生成框架类的，或功能简单的脚手架。优点是选项更灵活。\",\"因为这些特性大体会以条件分支的形式存在于模板中，然后根据条件判断选择对应的特性。当特性较多较复杂时，会大大增加模板的维护成本。\"]},\"31\":{\"h\":\"独立仓库：vitesse\",\"t\":[\"https://github.com/antfu/vitesse vite + vue 的社区模板（集成诸如I18n/PWA/UnoCSS/SSG等企业级应用特性）\",\"此类模板，可以用如 degit 之类的工具搭建项目。\",\"npx degit antfu/vitesse my-project cd my-project pnpm i pnpm dev\",\"degit 的优点是可以避免不必要的 Git 仓库克隆，从而提高了克隆速度和效率。\",\"独立仓库式的模板，优点是使用简单，项目结构一目了然。跟集成式的区别，主要在于模板代码的管理方式。\"]},\"32\":{\"h\":\"总结\",\"t\":[\"选项式的脚手架适合简单的项目模板生成，但对于复杂的项目模板生成，建议采用集成式或独立仓库式的模板。这两种模板的区别在于模板的代码管理方式：\",\"集成式的模板采用 monorepo 管理，适合管理多个、相互有关联的模板。\",\"独立仓库式的模板更适合做一个大一统、独立的、无依赖的模板。\",\"因此，建议采用类似 create-vite 的方案创建脚手架，同时可以综合参考其他模式，选择最适合自己的模板管理方式。\"]},\"33\":{\"h\":\"创建项目模板\",\"t\":[\"在根目录下执行 pnpm create vite template-admin-ts --template vue-ts 快速创建一个 vue 项目，后续可基于此做模板定制开发。\"]},\"34\":{\"h\":\"发布到 npm\",\"t\":[\"npm login --registry https://registry.npmjs.org/\",\"在 package.json 中的 scripts 添加 prepublishOnly 钩子：\",\"{ \\\"scripts\\\": { \\\"build\\\": \\\"unbuild\\\", \\\"prepublishOnly\\\": \\\"npm run build\\\" }, \\\"publishConfig\\\": { \\\"registry\\\": \\\"https://registry.npmjs.org/\\\" }, \\\"files\\\": [ \\\"index.js\\\", \\\"template-*\\\", \\\"dist\\\", \\\"README.md\\\" ], }\",\"若本地设置过其它 npm 源，需配置 publishConfig 以在发布时指向原始源。\",\"设置 files 字段来控制哪些文件会被打包进模块中发布。\",\"npm publish\"]},\"35\":{\"h\":\"使用\",\"t\":[\"无参数运行，会提示让选择项目名称和模板\",\"npm create hugon\",\"也可直接指定项目名称和模板。如果想生成 admin-ts 项目，则运行：\",\"npm create hugon my-admin-app --template admin-ts\"]},\"36\":{\"h\":\"参考\",\"t\":[\"vuejs/create-vue\",\"vitejs/vite/packages/create-vite\",\"vue-cli\"]},\"37\":{\"c\":[\"工程化\"]},\"38\":{\"c\":[\"cli\",\"脚手架\"]},\"39\":{\"h\":\"electron + vite 脚手架介绍\",\"t\":[\"GitHub - umbrella22/electron-vite-template - vue3 + Vite + electron项目模板\"]},\"40\":{\"h\":\"启动\",\"t\":[\"配置 npm 及 electron 镜像，避免下载依赖因网络问题失败。\",\"registry=https://registry.npmmirror.com/ # electron ELECTRON_MIRROR=https://cdn.npmmirror.com/binaries/electron/ ELECTRON_BUILDER_BINARIES_MIRROR=https://npmmirror.com/mirrors/electron-builder-binaries/\",\"首次执行 yarn安装依赖时，执行到 electron 的 node install.js 报 RequestError: socket hang up 并退出。再次执行 yarn就好了。\",\"执行 yarn dev启动项目，带 HMR。\"]},\"41\":{\"h\":\"开发构建\",\"t\":[\"yarn dev 执行的入口文件为 .electron-vite/dev-runner.ts，用于开发环境代码构建。此文件在 init 函数中主依次启动渲染进程、主进程、Electron。\",\"最开始，使用 cfonts 在终端中显示彩色的 ASCII 艺术字体 electron-vite。\"]},\"42\":{\"h\":\"渲染进程\",\"t\":[\"Electron 的渲染进程是指在 Electron 应用程序中运行的 JavaScript 代码，它们负责渲染和处理用户界面。每个 Electron 窗口都有一个对应的渲染进程，这个渲染进程负责显示窗口中的内容和处理用户输入。渲染进程可以与主进程进行通信，以便实现更复杂的功能。\",\"此项目中渲染进程的交由 Vite 处理，用于快速搭建 Web 应用程序的开发环境，并提供快速的热更新和构建功能，以提高开发效率和构建速度。\"]},\"43\":{\"h\":\"本地开发服务器\",\"t\":[\"先使用 portfinder 获取一个可用的端口号，并将该端口号设置为 process.env.PORT 的值。然后，它调用 Vite 的createServer 函数创建一个 Vite 服务器，并将 vite.config.ts 文件作为配置文件传递给该函数。最后，使用 server.listen 方法启动服务器（使用上面获取的端口号）。\"]},\"44\":{\"h\":\"Vite 配置\",\"t\":[\"本地开发服务器由 Vite 创建，其配置文件位于.electron-vite/vite.config.ts。\",\"defineConfig({ mode: process.env.NODE_ENV, // 运行模式 root, // 指定项目的根目录路径，此处设置为针对渲染进程的 src/renderer define: { // 存储一些全局配置信息 // 渲染进程中约定以 `__CONFIG__` （全局变量）来获取 `env` 文件夹内的内容 __CONFIG__: config, }, resolve: { // 设置别名，使用 @renderer 来代替 src/renderer alias: { \\\"@renderer\\\": root, }, }, base: \\\"./\\\", // 项目的基础 URL，用于处理静态资源的路径问题 // 构建相关的配置选项，例如输出目录、目标环境、代码压缩等 build: { outDir: config && config.target ? resolve(\\\"dist/web\\\") : resolve(\\\"dist/electron/renderer\\\"), emptyOutDir: true, target: \\\"esnext\\\", minify: \\\"esbuild\\\", cssCodeSplit: false, }, server: {}, // 分别支持 Vue.js 的 JSX 语法和编译 Vue 单文件组件 plugins: [vueJsx(), vuePlugin()], optimizeDeps: {}, })\",\"配置文件中的一些配置选项的含义：\",\"mode：指定当前的运行模式，可以是 \\\"development\\\" 或 \\\"production\\\"。\",\"root：指定项目的根目录路径。\",\"define：定义一些全局变量，这些变量可以在代码中直接使用。\",\"resolve：指定模块解析的配置选项。\",\"base：指定项目的基础 URL，用于处理静态资源的路径问题。\",\"build：指定构建相关的配置选项，例如输出目录、目标环境、代码压缩等。\",\"server：指定开发服务器的配置选项，例如端口号、代理等。\",\"plugins：指定使用的插件，例如 vueJsx 和 vuePlugin。\",\"optimizeDeps：指定 Vite 在开发环境下优化依赖的行为。\"]},\"45\":{\"h\":\"主进程\",\"t\":[\"Electron 的主进程是应用程序的核心，负责管理和协调应用程序的所有窗口和渲染进程，同时提供了访问本地文件系统和操作系统资源的能力。\"]},\"46\":{\"h\":\"监听文件变化\",\"t\":[\"主进程启动入口为 startMain 函数，返回 Promise 函数。该函数会启动 Electron 主进程并监听主进程文件的变化。当主进程文件发生变化时，会输出日志信息；当主进程文件被修改后重启 Electron 进程时，杀掉当前运行的 Electron 进程，再启动一个新的 Electron 进程。\",\"new Promise((resolve, reject) => { // 监视对主进程代码所做的更改，并在检测到更改时自动重新构建该代码 const MainWatcher = watch(mainOpt); // 监听文件变更 MainWatcher.on(\\\"change\\\", (filename) => { // 主进程 src/main 下代码变更时，输出变更的文件名日志信息 }); // 处理文件监视器发出的所有其他事件 MainWatcher.on(\\\"event\\\", (event) => { // 检测到更改后完成重建代码时 if (event.code === \\\"END\\\") { // 确保 electron 进程对象已存在 if (electronProcess) { // 用于防止快速连续多次重启 Electron 进程，这可能会导致应用出现问题。 // 默认情况下，该标志设置为false，因此在检测到文件更改事件时将自动重新启动 Electron 进程。 manualRestart = true; // 确保在重新启动之前正确终止 Electron 进程，避免同时运行多个实例的 Electron 进程 if (electronProcess.pid) process.kill(electronProcess.pid); electronProcess = null; startElectron(); // 当 manualRestart 标志被设置为 true 时，它会阻止 Electron 进程在检测到文件更改事件时自动重启。 // 通过设置超时并在超时后将 manualRestart 标志重置为false，以确保不会无限期地将该标志设为 true。 setTimeout(() => { manualRestart = false; }, 5000); } resolve(); // 重新构建过程中发生错误时 } else if (event.code === \\\"ERROR\\\") { reject(event.error); } }); });\"]},\"47\":{\"h\":\"Rollup\",\"t\":[\"主进程代码基于 rollup 构建，其配置文件为.electron-vite/rollup.config.ts，其主要内容如下：\",\"const config = getConfig(); // 读取 env 目录下的 *.env 文件 defineConfig({ // ... 省略部分配置 plugins: [ replace({ preventAssignment: true, // 不要将替换的结果包裹在一个赋值语句中，而是直接替换掉变量名 \\\"process.env.userConfig\\\": config ? JSON.stringify(config) : \\\"{}\\\", }), // 提供路径和读取别名 nodeResolve({ preferBuiltins: true, // 优先使用Node.js内置模块 browser: false, // 将模块的导入路径视为在Node.js环境下运行 extensions: [\\\".mjs\\\", \\\".ts\\\", \\\".js\\\", \\\".json\\\", \\\".node\\\"], // 可以解析的模块文件扩展名 }), commonjs({ sourceMap: false, // 不生成源映射文件 }), json(), // 用于将 JSON 文件转换为 ES6 模块 // 使用 esbuild 进行代码转换和压缩（所有配置项可选） esbuild({ include: /\\\\.[jt]s?$/, // default。转换 .js 或 .ts 结尾的文件 exclude: /node_modules/, // watch: process.argv.includes('--watch'), // rollup 中有配置 sourceMap: env != \\\"production\\\", // default。非生产环境下生成 sourceMap minify: env === \\\"production\\\", // 生产环境下压缩代码 target: \\\"es2017\\\", // default。转换后的代码目标版本 // 类似 @rollup/plugin-replace，可在代码中进行常量替换 define: { __VERSION__: '\\\"x.y.z\\\"', }, // 添加额外的加载器 loaders: { // 添加对 .json 文件的支持，需要使用 @rollup/plugin-commonjs 插件来将其转换为 ES6 模块 \\\".json\\\": \\\"json\\\", // 在 .js 文件中启用 JSX 语法支持 \\\".js\\\": \\\"jsx\\\", }, }), // 创建别名 alias({ entries: [ { find: \\\"@main\\\", // 要替换的模块名 replacement: path.join(__dirname, \\\"../src/main\\\") // 要替换成的路径 }, { find: \\\"@config\\\", replacement: path.join(__dirname, \\\"..\\\", \\\"config\\\"), }, ], }), // 生产环境下用 obfuscator 混淆代码，从而增加代码的安全性 process.env.NODE_ENV == \\\"production\\\" ? obfuscator({ global: true, // 混淆整个代码库，包括所有导出的变量和函数 }) : null, ], // 指定哪些模块应该被视为外部依赖，而不是被打包进最终的输出文件中 // builtinModules 自 module 模块引入，是一个数组，包含Node.js中内置的所有内置模块的名称 external: [...builtinModules, ...Object.keys(dependencies), \\\"electron\\\"], })\",\"使用到的 rollup 插件：\",\"@rollup/plugin-node-resolve: 用于解析 node_modules 中的第三方模块\",\"@rollup/plugin-commonjs: 用于将 CommonJS 模块转换为 ES6 模块\",\"@rollup/plugin-replace: 用于在打包过程中替换代码中的字符串或者其他值\",\"@rollup/plugin-alias: 用于创建模块的别名\",\"@rollup/plugin-json: 用于将 JSON 文件转换为 ES6 模块\",\"rollup-plugin-esbuild: 用于使用 esbuild 进行代码转换和压缩，以提高打包速度和减小文件大小\",\"rollup-plugin-obfuscator: 用于对打包后的代码进行混淆和压缩，以保护代码的安全性\"]},\"48\":{\"h\":\"Electron 进程\",\"t\":[\"function startElectron() { // --inspect=5858 参数表示启用调试模式，并监听 5858 端口 var args = [ \\\"--inspect=5858\\\", join(__dirname, \\\"../dist/electron/main/main.js\\\"), ]; // ... // spawn 方法返回一个 ChildProcess 对象，并在下方监听 Electron 进程的标准输出和标准错误输出 electronProcess = spawn(electron as any, args); electronProcess?.stdout?.on(\\\"data\\\", (data: string) => { electronLog(removeJunk(data), \\\"blue\\\"); }); electronProcess?.stderr?.on(\\\"data\\\", (data: string) => { // removeJunk 过滤 Electron 进程输出中的无用信息，过滤指定格式的警告、错误、日志信息 electronLog(removeJunk(data), \\\"red\\\"); }); // 处理 Electron 进程关闭事件 electronProcess.on(\\\"close\\\", () => { // 当 Electron 进程关闭时，检查 manualRestart 标志为 false 时调用 process.exit() 终止 Node.js 进程。 // 确保在 Electron 进程关闭时终止 Node.js 进程，除非手动启动了重启操作。 // 可以确保应用程序在 Electron 进程关闭时完全关闭，并防止任何残留进程或资源对应用程序造成问题。 if (!manualRestart) process.exit(); }); }\",\"process.env.npm_execpath: 确定应用程序是使用 npm 还是 yarn 运行。npm_execpath 属性由 npm 设置，并包含当前正在运行的 npm 可执行文件路径。\"]},\"49\":{\"h\":\"其它依赖\",\"t\":[\"dotenv 可用于加载环境变量\",\"chalk 在终端中输出彩色文字\"]},\"50\":{\"h\":\"主进程\",\"t\":[\"主进程入口文件在 src/main/index.ts。\",\"// ... function onAppReady() { // 初始化窗口 new InitWindow().initWindow() // 禁用 F12 按钮 DisableButton.Disablef12() // 开发环境加载 Vue.js 开发工具扩展 if (process.env.NODE_ENV === 'development') { const { VUEJS3_DEVTOOLS } = require(\\\"electron-devtools-vendor\\\"); session.defaultSession.loadExtension(VUEJS3_DEVTOOLS, { allowFileAccess: true, }); console.log('已安装: vue-devtools') } } // 应用准备就绪时 app.whenReady().then(onAppReady) // 由于9.x版本问题，需要加入该配置关闭跨域问题 app.commandLine.appendSwitch('disable-features', 'OutOfBlinkCors') // 当所有窗口关闭时退出应用 app.on('window-all-closed', () => { app.quit() }) // 新窗口创建 app.on('browser-window-created', () => { console.log('window-created') }) // 如果是当前进程是默认应用，则删除“electron-vue-template”协议的默认客户端 if (process.defaultApp) { if (process.argv.length >= 2) { app.removeAsDefaultProtocolClient('electron-vue-template') console.log('由于框架特殊性开发环境下无法使用') } } else { app.setAsDefaultProtocolClient('electron-vue-template') }\"]},\"51\":{\"h\":\"初始化窗口\",\"t\":[\"上面代码中的 new InitWindow().initWindow()用于初始化窗口设置，源码位于 src/main/services/windowManager.ts，用于初始化 Electron 应用程序的主进程。它创建了一个 MainInit 类，该类负责创建应用程序的主窗口和加载窗口（主窗口加载完成前显示），并在必要时处理窗口的崩溃和无响应情况。同时，还设置了窗口菜单和 IPC 通信。\",\"class MainInit { public winURL: string = \\\"\\\"; public shartURL: string = \\\"\\\"; public loadWindow: BrowserWindow = null; public mainWindow: BrowserWindow = null; constructor() { this.winURL = winURL; this.shartURL = loadingURL; // 开发环境添加“开发者设置”菜单 // ... // 进程间通讯 setIpc.Mainfunc(); } // 初始化窗口函数（若配置显示loading窗口，在主窗口加载前先显示） initWindow() { if (UseStartupChart) return this.loadingWindow(this.shartURL); return this.createMainWindow(); } // 主窗口函数 createMainWindow() { this.mainWindow = new BrowserWindow({ // 窗口标题栏样式（hidden 为隐藏标题栏） titleBarStyle: IsUseSysTitle ? \\\"default\\\" : \\\"hidden\\\", ...mainWindowConfig, }); // 设置菜单 const menu = Menu.buildFromTemplate(menuconfig as any); Menu.setApplicationMenu(menu); // 加载主窗口 this.mainWindow.loadURL(this.winURL); this.mainWindow.once(\\\"ready-to-show\\\", () => { // 在此事件后显示窗口将没有视觉闪烁！！ this.mainWindow.show(); // 开发模式下自动开启devtools if (process.env.NODE_ENV === \\\"development\\\") { this.mainWindow.webContents.openDevTools({ mode: \\\"undocked\\\", activate: true }); } // 销毁loading窗口 if (UseStartupChart) this.loadWindow.destroy(); }); // 主窗口未响应时提示，让用户选择重载或退出 this.mainWindow.on(\\\"unresponsive\\\", () => { /*...*/ }); // 在窗口关闭时移除相应窗口的引用对象，避免再次使用它 this.mainWindow.on(\\\"closed\\\", () => { this.mainWindow = null; }); // 当确定渲染进程卡死时，分类型进行告警操作，并让用户选择重载或退出 app.on(\\\"render-process-gone\\\", (event, webContents, details) => { /*...*/ }); // 进程崩溃或被杀死时警告，让用户选择重载或退出 app.on(\\\"child-process-gone\\\", (event, details) => { /*...*/ }); } // 加载窗口函数 loadingWindow(loadingURL: string) { this.loadWindow = new BrowserWindow({ width: 400, height: 600, frame: false, // 创建一个无边框窗口 skipTaskbar: true, // 在任务栏中显示窗口 transparent: true, // 使窗口 透明 resizable: false, webPreferences: { experimentalFeatures: true }, // 启用 Chromium 的实验功能 }); this.loadWindow.loadURL(loadingURL); this.loadWindow.show(); this.loadWindow.setAlwaysOnTop(true); // 延迟两秒可以根据情况后续调快，= =，就相当于个，sleep吧，就那种。 = =。。。 setTimeout(() => { this.createMainWindow(); }, 1500); } }\"]},\"52\":{\"h\":\"进程通信（IPC）\",\"t\":[\"上方代码中的 setIpc.Mainfunc()从同目录下的 ipcMain.ts引入。设置了几个 IPC处理函数，用于在 Electron 应用程序的主进程和渲染器进程之间进行通信。包括：\",\"IsUseSysTitle：返回一个布尔值，指示应用程序是否应该使用系统标题栏\",\"windows-mini：最小化发送消息的窗口\",\"window-max：最大化或还原发送消息的窗口\",\"window-close：关闭发送消息的窗口\",\"check-update：检查更新并显示对话框（如果有可用更新）\",\"confirm-update：退出并安装更新\",\"app-close：退出Electron应用程序\",\"get-static-path: 返回带有各种静态文件路径的对象，这些文件由应用程序使用\",\"open-messagebox: 显示具有自定义选项的消息框\",\"open-errorbox: 显示具有标题和消息的错误框\",\"start-server: 启动本地服务器并返回其状态\",\"stop-server: 停止本地服务器并返回其状态\",\"ipcMain.handle(channel, listener) 用于为一个 invokeable 的 IPC 添加一个 handler。每当一个渲染进程调用 ipcRenderer.invoke(channel, ...args) 时这个处理器就会被调用。\"]},\"53\":{\"h\":\"检查更新\",\"t\":[\"在上方的 check-update中处理检查更新，代码位于 src/main/services/checkupdate.ts，该类为 electron-updater 包提供的 autoUpdater 模块设置事件监听器，包括：\",\"error：在更新过程中发生错误时触发\",\"checking-for-update：当更新过程开始时触发\",\"update-available：当有新版本可用时触发\",\"update-not-available：当没有新版本可用时触发\",\"download-progress：在下载更新时触发\",\"update-downloaded：在下载完成后触发\",\"还有三个方法：\",\"Message: 向主窗口的渲染进程发送消息\",\"checkUpdate: 检查是否有更新，并根据更新状态向渲染进程发送消息\",\"quitAndInstall: 退出应用程序并安装更新\",\"electron-updater 是一个 Electron 应用程序自动更新的库，可以方便地实现应用程序的自动更新功能，提高用户体验和开发效率。它支持多种更新方式，并提供了许多可配置的选项，可以自定义更新的行为和外观。\"]},\"54\":{\"h\":\"热更新\",\"t\":[\"ipcMain.handle 函数监听来自渲染进程的 hot-update 事件，并使用与事件发送方相关联的 BrowserWindow 对象调用 updater 函数。updater 函数首先通过向远程服务器发出请求来检查是否有新版本可用。如果有，它会下载更新包，使用 SHA256 哈希验证其完整性，将其提取到临时目录中，删除旧应用程序文件，并将新文件复制到应用程序目录中。\"]},\"55\":{\"h\":\"渲染进程\",\"t\":[\"渲染进程负责呈现用户界面。此项目采用 Vue3 + Vite 开发，src/renderer 下即为整个 用户界面代码，结构跟传统 Web 应用一致。index.html作用入口，会被 BrowserWindow实例通过 loadURL 加载。\"]},\"56\":{\"h\":\"问题\"},\"57\":{\"h\":\"使用 icon-park 自定义项目图标\",\"t\":[\"使用 <icon-pack> 组件引入图标，控制台报 [Vue warn]: Failed to resolve component: iconpark-icon If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. 解决方法：\",\"// fix: Failed to resolve component: iconpark-icon const isCustomElement = (tag) => tag === \\\"iconpark-icon\\\" export default defineConfig({ plugins: [ vueJsx({ isCustomElement, }), vuePlugin({ template: { compilerOptions: { isCustomElement, }, }, }), ], });\"]},\"58\":{\"c\":[\"electron\"]},\"59\":{\"c\":[\"electron\",\"vite\"]},\"60\":{\"h\":\"读源码\"},\"61\":{\"h\":\"如何看源码？\",\"t\":[\"问题驱动，带着具体的目标去看源码；\",\"树立好的心理认知，找自已了解或感兴趣的领域；\",\"理解 MVP，确定包含定位源码最小可运行代码需要的内容，先梳理结构，确保 MVP 能够跑起来；\",\"再在最小、最核心的源码上以打断点、画思维导图、查文档的方式理解源码。\",\"MVP（Minimum Viable Product，最简化可实行产品）是一种产品理论，即最简可行化分析\"]},\"62\":{\"h\":\"推荐\",\"t\":[\"vueuse\",\"mini-vue\"]},\"63\":{\"h\":\"参考\",\"t\":[\"6.7K Star 的知名开源项目源码，该怎么看？\",\"学习源码整体架构系列\",\"流行框架与库的源码分析与最简实现\"]},\"64\":{\"h\":\"读书笔记\",\"t\":[\"《React 设计原理》 - by 卡颂\",\"《Vue.js 设计与实现》 - by 霍春阳\",\"《TypeScript 编程》 - by Boris Cherny\",\"《Effective TypeScript》 - by 丹.范德卡姆\",\"《JavaScript 经典实例》 - by 亚当.D.斯科特\",\"《React Router 从原理到实战》 - by 李杨韬\",\"《深入理解ES6》 - by Nicholas c.Zakas\",\"《JavaScript 语言精髓与编程实践》 - 周爱民\",\"《JavaScript 库开发 原理、技术与实战》 - by 颜海镜 侯策\",\"《前端跨界开发指南 JavaScript工具库原理解析与实战》 - by 史文强\",\"《前端架构师 基础建设与架构设计思想》 - by 侯策\",\"《前端架开发核心知识进阶 从夯实基础到突破瓶颈》 - by 侯策\",\"《JavaScript ES8 函数式编程实践入门》 - 安托.阿拉文思\",\"《重构-改善既有代码的设计（第2版）》 - by 马丁.福勒\",\"《学习 JavaScript 数据结构与算法》 - by Loiane Groner\",\"《JavaScript 设计模式与开发实践》 - 曾探\",\"《代码大全（第2版）》 - Steve McConnell\"]},\"65\":{\"h\":\"导航\"},\"66\":{\"h\":\"文档\",\"t\":[\"MDN - JavaScript\",\"ES6入门教程 by 阮一峰\",\"Git的奇技淫巧\"]},\"67\":{\"h\":\"前端站点\",\"t\":[\"CSS-Tricks 提供各种文章、教程、视频和示例，涵盖 CSS、HTML、JavaScript\",\"Codrops 关于 Web 设计和开发的博客和社区站点\",\"SitePoint 提供有深度的前端文章和教程\"]},\"68\":{\"h\":\"导航站\",\"t\":[\"前端编程导航\",\"菜鸟工具\"]},\"69\":{\"h\":\"个人博客\",\"t\":[\"ascoders/weekly 前端精读周刊。帮你理解最前沿、实用的技术\",\"tnfe/TNT-Weekly 每周为你提供高质量的关于小程序、h5等前端领域的文章和项目\",\"阮一峰的网络日志\",\"张鑫旭的个人主页\",\"朴灵的博客\",\"小胡子哥的博客\"]},\"70\":{\"h\":\"开发工具\",\"t\":[\"多语言代码转换器\",\"regex101 正则表达式工具\",\"Can I use 浏览器兼容性查询\",\"开发者武器库\",\"Ngnix 可视化配置工具\"]},\"71\":{\"h\":\"JS\",\"t\":[\"30 seconds of code 代码片段集合\"]},\"72\":{\"h\":\"CSS\",\"t\":[\"应该掌握CSS tricks\",\"CSS Tricks CSS技巧文章\",\"CSS3-Box Shadow(阴影)\",\"贝塞尔曲线生成器\",\"animista CSS动画可视化工具，可复制代码\",\"fancy border radius border radius 生成器\"]},\"73\":{\"h\":\"AI\",\"t\":[\"ClickPrompt 为 Prompt 编写者设计的工具\",\"Vega 创作平台 文生图、图生图的AI工具\"]},\"74\":{\"h\":\"参考\",\"t\":[\"Roadmap 交互式路线图、指南和其他教育内容\",\"Awesome JavaScript\",\"收藏夹 by 花裤衩\",\"收藏夹 by Evan\",\"编程自学之路 by r2coding\",\"前端 50 个优质 Web 在线资源~\"]},\"75\":{\"h\":\"滑动窗口算法及应用\"},\"76\":{\"h\":\"算法简介\",\"t\":[\"滑动窗口算法（Sliding Window Algorithm）是一种常见的算法，用于解决数组或字符串的子问题。它通过维护一个大小可变的窗口，对数据进行处理。这个窗口的左右两端方向一致的向前滑动（右端固定，左端滑动；左端固定，右端滑动）。在处理数据时，窗口会向右移动，直到处理完整个数据集。\",\"该算法常用于求解子数组或子字符串的问题，例如最大子数组和、最小子数组和、最长连续递增子序列等等。其时间复杂度通常为O(n)，是一种高效的算法。\"]},\"77\":{\"h\":\"\",\"t\":[\"给定一个整数数据流和一个窗口大小，根据该滑动窗口的大小，计算滑动窗口里所有数字的平均值。\",\"实现 MovingAverage 类：\",\"MovingAverage(size: number) 用窗口大小 size 初始化对象。\",\"next(val: number): number 成员函数 next 每次调用的时候都会往滑动窗口增加一个整数，请计算并返回数据流中最后 size 个值的移动平均值，即滑动窗口里所有数字的平均值。\"]},\"78\":{\"h\":\"思路\",\"t\":[\"使用一个队列来存储滑动窗口中的元素，使用一个变量来记录滑动窗口中所有元素的和。\",\"每次调用 next 方法时，将新的元素加入队列中，并更新滑动窗口中所有元素的和。\",\"如果队列的长度超过了滑动窗口的大小，需要将队首元素弹出，并从滑动窗口中减去该元素的值。\",\"最后，返回滑动窗口中所有元素的平均值。\"]},\"79\":{\"h\":\"实现\",\"t\":[\"class MovingAverage { // 初始化队列、队列长度和当前和 constructor(size) { this.size = size; this.queue = []; this.sum = 0; } next(val) { // 如果队列长度等于规定长度，则弹出队列头部元素，同时减去该元素的值 if (this.queue.length === this.size) { this.sum -= this.queue.shift(); } // 将新的元素加入队列尾部，并加上该元素的值 this.queue.push(val); this.sum += val; // 返回队列中所有元素的平均值 return this.sum / this.queue.length; } }\",\"示例：\",\"const movingAverage = new MovingAverage(3); // 声明了窗口的长度为 3 movingAverage.next(1); // 返回 1.0 = 1 / 1 movingAverage.next(10); // 返回 5.5 = (1 + 10) / 2 movingAverage.next(3); // 返回 4.66667 = (1 + 10 + 3) / 3 movingAverage.next(5); // 返回 6.0 = (10 + 3 + 5) / 3\"]},\"80\":{\"h\":\"\",\"t\":[\"给两个整数数组 nums1 和 nums2 ，返回 两个数组中 **公共的** 、长度最长的子数组的长度。\"]},\"81\":{\"h\":\"思路\",\"t\":[\"枚举 nums1 和 nums2 所有的对齐方式。\",\"第一类为 A 不变，B 的首元素与 A 中的某个元素对齐；\",\"第二类为 B 不变，A 的首元素与 B 中的某个元素对齐。\",\"对于每一种对齐方式，计算它们相对位置相同的重复子数组即可。\"]},\"82\":{\"h\":\"实现\",\"t\":[\"// 查找两个数组中的最长重复子数组 function findLength(nums1, nums2) { let len1 = nums1.length; let len2 = nums2.length; let maxLength = 0; // 遍历 nums1，计算以该位置开始的最长重复子数组的长度 for (let i = 0; i < len1; i++) { let len = Math.min(len2, len1 - i); let currentLength = this.getMaxLength(nums1, nums2, i, 0, len); maxLength = Math.max(maxLength, currentLength); } // 遍历 nums2，计算以该位置开始的最长重复子数组的长度 for (let i = 0; i < len2; i++) { let len = Math.min(len1, len2 - i); let currentLength = this.getMaxLength(nums1, nums2, 0, i, len); maxLength = Math.max(maxLength, currentLength); } return maxLength; } // 计算以 add1 和 add2 为起点，长度为 len 的最长重复子数组的长度 function getMaxLength(nums1, nums2, add1, add2, len) { let maxLength = 0; let currentLength = 0; for (let i = 0; i < len; i++) { // 如果 nums1 和 nums2 数组中当前位置的元素相等，则更新 currentLength 和 maxLength 的值 if (nums1[add1 + i] == nums2[add2 + i]) { currentLength++; } else { currentLength = 0; } maxLength = Math.max(maxLength, currentLength); } return maxLength; }\"]},\"83\":{\"h\":\"\",\"t\":[\"给定一个字符串 s ，找出其中不含有重复字符的 最长子串 的长度。\"]},\"84\":{\"h\":\"思路\",\"t\":[\"使用两个指针表示字符串中的某个子串（或窗口）的左右边界，其中左指针代表着上文中「枚举子串的起始位置」，而右指针为右边界；\",\"在每一步的操作中，将左指针向右移动一格，表示 开始枚举下一个字符作为起始位置，然后可以不断地向右移动右指针，但需要保证这两个指针对应的子串中没有重复的字符。在移动结束后，这个子串就对应着 以左指针开始的，不包含重复字符的最长子串。记录下这个子串的长度；\",\"枚举结束后，找到的最长的子串的长度即为答案\"]},\"85\":{\"h\":\"实现\",\"t\":[\"function lengthOfLongestSubstring (s) { const occ = new Set(); const n = s.length; // 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动 let rk = -1, ans = 0; for (let i = 0; i < n; ++i) { if (i != 0) { // 左指针向右移动一格，移除一个字符 occ.delete(s.charAt(i - 1)); } // 右指针 rk 没有到达字符串末尾并，且当前字符 s.charAt(rk + 1) 没有出现过 while (rk + 1 < n && !occ.has(s.charAt(rk + 1))) { // 不断地移动右指针 occ.add(s.charAt(rk + 1)); ++rk; } // 第 i 到 rk 个字符是一个极长的无重复字符子串 ans = Math.max(ans, rk - i + 1); } return ans; };\",\"为什么用 chartAt 而不用数组下标方式获取字符呢？\",\"s.charAt(i - 1) 和 s[i - 1] 都可以用来获取字符串 s 中下标为 i - 1 的字符，它们的作用是相同的。但是，它们在实现上是有一些区别。\",\"s.charAt(i - 1)：charAt 是字符串对象的一个方法，用来获取字符串中指定位置的字符。如果 指定位置超出了字符串的范围，返回空字符串；\",\"s[i - 1]：如果指定位置超出了字符串的范围，会抛出一个异常\",\"在这个算法中，如果确定输入的字符串是合法的，那么使用 s[i - 1] 也是可以的，而且可能会稍微快一些。但是，为了保证代码的健壮性，建议使用 charAt 方法。\"]},\"86\":{\"h\":\"参考\",\"t\":[\"滑动窗口详解 - 力扣\",\"无重复字符的最长子串 - 解题思路\"]},\"87\":{\"c\":[\"算法\"]},\"88\":{\"h\":\"前端缓存与技术方案（上）\"},\"89\":{\"h\":\"前言\",\"t\":[\"缓存的合理使用可提升网页性能。\"]},\"90\":{\"h\":\"什么是缓存（cache）？\",\"t\":[\"缓存是计算机系统中的一种技术，用于临时存储经常访问的数据，以加快数据访问速度。缓存通常位于数据访问路径的中间，可以在数据访问时快速提供数据，而无需每次都从原始数据源获取数据。缓存可以是硬件或软件实现的，可以在多个层次上实现，例如浏览器缓存、操作系统缓存、CPU 缓存等。缓存的使用可以显著提高系统性能，减少对原始数据源的访问次数，从而减少系统资源的占用和延迟。\",\"可以看出，缓存的重点在于访问速度快、性能高。\"]},\"91\":{\"h\":\"什么是前端缓存？\",\"t\":[\"前端缓存可以直接看作是 HTTP 缓存和浏览器缓存的结合，两者相辅相成。\",\"HTTP 缓存：客户端与服务器之间通信产生的一种缓存，用其以提升服务器资源的重复利用率（有效时间内不向服务器请求相同资源，减少服务器压力）；\",\"浏览器缓存：浏览器提供的一种缓存机制，可以将服务器资源和网页访问产生的临时数据缓存到内存或本地，提升客户端的加载速度。\"]},\"92\":{\"h\":\"前端有哪此缓存？\",\"t\":[\"可按分类方式和细分程度划分。如：\",\"HTTP 缓存 \",\"按照失效策略划分：强缓存、协商缓存。\",\"浏览器缓 \",\"按照缓存位置划分：Service Worker Cache、Memory Cache、Disk Cache、Push Cache。\",\"存储型缓存： Cookie、Web Storage、IndexedDB 等。\",\"前端会使用 CDN 缓存加速静态文件，但 CDN 本质上属于服务端缓存。\"]},\"93\":{\"h\":\"HTTP 缓存\",\"t\":[\"HTTP 是一种能够获取如 HTML 这样的网络资源的 protocol(通讯协议)。它是在 Web 上进行数据交换的基础，是一种 client-server 协议，也就是说，请求通常是由像浏览器这样的接受方发起的。一个完整的 Web 文档通常是由不同的子文档拼接而成的，像是文本、布局描述、图片、视频、脚本等等。\",\"前端接触到的为 HTTP 请求部分，主要发生在客户端。请求是由“报文”的形式发送的，请求报文由三部分组成：请求行、请求报头和请求正文。HTTP 响应部分的响应报文也由三部分组成：状态行、响应报头和响应正文。\",\"关键与缓存有关的 请求报头和 响应报头，即浏览器 Network 面板中常见的 Request Headers 和 Response Headers 部分。 报头是由一系列中间用冒号 “:” 分隔的键值对组成，称之为首部字段，其由首部字段名和字段值构成。如： Content-Type: text/javascript 以上首部字段名为 Content-Type，首部字段值为 text/javascript，表示报文主体的对象类型。\",\"首部字段又分为四种类型：\",\"通用（请求报头和响应报头都会用到）\",\"请求（请求报头用到）\",\"响应（响应报头用到）\",\"实体（针对请求报头和响应报头实体部分使用）\"]},\"94\":{\"h\":\"与缓存有关的首部字段名\",\"t\":[\"上面提到的 HTTP 缓存可以拆解为 强缓存 和 协商缓存，所以需要弄清楚和强缓存、协商缓存有关的首部字段名。\",\"graph LR; A[HTTP缓存]-->B[强缓存]; A-->C[协商缓存]; B-->D[Expires]; E-->K[max-age]; E-->L[s-maxage]; B-->E[Cache-Control]; E-->G[public/private]; E-->I[no-cache/no-store]; E-->J[...]; C-->M[Last-Modified]; C-->O[If-Modified-Since]; C-->N[ETag]; C-->P[If-None-Match];\"]},\"95\":{\"h\":\"Expires\",\"t\":[\"在 HTTP/1.0 中定义缓存的字段，其给出了缓存过期的绝对时间，即在此时间之后，响应资源过期，属于实体首部字段。\",\"Expires: Wed, 11 May 2023 03:50:47 GMT\",\"表示该资源将在指定时间之后过期，过期前浏览器可以直接从浏览器缓中读取数据，无需再次请求服务器（命即中了强缓存）。\",\"因为 Expires 设置的缓存过期时间是一个绝对时间，所以会受客户端时间的影响而变得不精准。\"]},\"96\":{\"h\":\"Cache-Control\",\"t\":[\"在 HTTP/1.1 中定义缓存的字段，其用于控制缓存的行为。可以组合使用多种指令（指令间通过 “,” 分隔），属于通用首部字段。常用指令有：max-age、s-maxage、public/private、no-cache/no store 等。\",\"Cache-Control: max-age:3600, s-maxage=3600, public Cache-Control: no-cache\",\"max-age 指令给出了缓存过期的相对时间（单位：秒）。当其与 Expires 同时出现时，max-age 的优先级更高。但往往为了做向下兼容，两者都会经常出现在响应首部中。\",\"max-age 还可在请求首部中被使用，告知服务器客户端希望接收一个存在时间（age）不大于多少秒的资源。\",\"而 s-maxage 与 max-age 不同之处在于，其只适用于公共缓存服务器，比如资源从源服务器发出后又被中间的代理服务器接收并缓存。 当使用 s-maxage 指令后，公共缓存服务器将直接忽略 Expires 和 max-age 指令的值。\",\"public 指令表示该资源可以被任何节点缓存（包括客户端和代理服务器），与其行为相反的 private 指令表示该资源只提供给客户端缓存，代理服务器不会进行缓存。同时当设置了 private 指令后 s-maxage 指令将被忽略。\",\"no-cache、no-store 两个指令在请求和响应中都可以使用。两者看上去都代表不缓存，但在响应首部中被使用时， no-store 才是真正的不进行任何缓存。\",\"当 no-cache 在请求首部中被使用时，表示告知（代理）服务器不直接使用缓存，要求向源服务器发起请求，而当在响应首部中被返回时，表示客户端可以缓存资源，但每次使用缓存资源前都必须先向服务器确认其有效性，这对每次访问都需要确认身份的应用来说很有用。\",\"也可以在代码里加入 meta 标签的方式来修改资源的请求首部：\",\"<meta http-equiv=\\\"Cache-Control\\\" content=\\\"no-cache\\\" />\",\"接下来再看看协商缓存中涉及的主要首部字段名。\"]},\"97\":{\"h\":\"Last-Modified 与 If-Modified-Since\",\"t\":[\"代表资源的最后修改时间，其属于响应首部字段。当浏览器第一次接收到服务器返回资源的 Last-Modified 值后，其会把这个值存储起来，并再下次访问该资源时通过携带 If-Modified-Since 请求首部发送给服务器验证该资源有没有过期。\",\"Last-Modified: Fri, 14 May 2023 17:23:13 GMT If-Modified-Since: Fri, 14 May 2023 17:23:13 GMT\",\"如果在 If-Modified-Since 字段指定的时间之后资源发生了更新，那么服务器会将更新的资源发送给浏览器（状态码200）并返回最新的 Last-Modified 值，浏览器收到资源后会更新缓存的 If-Modified-Since 的值。\",\"如果在 If-Modified-Since 字段指定的时间之后资源都未更新，那么服务器会返回状态码 304 Not Modified 的响应。\"]},\"98\":{\"h\":\"Etag 与 If-None-Match\",\"t\":[\"Etag 首部字段用于代表资源的唯一性标识，服务器会按照指定的规则生成资源的标识，其属于响应首部字段。当资源发生变化时，Etag 的标识也会更新。同样的，当浏览器第一次接收到服务器返回资源的 Etag 值后，其会把这个值存储起来，并在下次访问该资源时通过携带 If-None-Match 请求首部发送给服务器验证该资源有没有过期。\",\"Etag: \\\"29322-09SpAhH3nXWd8KIVqB10hSSz66\\\" If-None-Match: \\\"29322-09SpAhH3nXWd8KIVqB10hSSz66\\\"\",\"如果服务器发现 If-None-Match 值与 Etag 不一致时，说明服务器上的文件已经被更新，那么服务器会发送更新后的资源给浏览器并返回最新的 Etag 值，浏览器收到资源后会更新缓存的 If-None-Match 的值。\"]},\"99\":{\"h\":\"强缓存\",\"t\":[\"强缓存的生成过程：\",\"当浏览器发起 HTTP 请求时，会查询浏览器缓存是否缓存有该资源，那么浏览器便会向服务器发起请求，服务器接收请求后将资源返回给浏览器，浏览器会将资源的响应数据存储到浏览器缓存中。\"]},\"100\":{\"h\":\"max-age 与 s-maxage\",\"t\":[\"强缓存的生成过程：当浏览器第一次发起 HTTP 请求时，若浏览器缓存中没有该资源的缓存数据，浏览器会向服务器发起请求，服务器返回资源数据，浏览器将其存储到缓存中。\",\"强缓存不仅限于 Disk cache，还包括 Memory Cache（内存缓存）。内存缓存更快，会被浏览器优先读取。\",\"被浏览器缓存的资源，响应报头中都包含了与强缓存有关的首部字段：Expires 或 Cache-Control，如 max-age=2592000,s-maxage=3600。\",\"s-maxage 仅在代理服务器中生效，优先级高于 max-age。\"]},\"101\":{\"h\":\"expires 与 max-age\",\"t\":[\"expires 设置的缓存过期时间是一个绝对时间，所以会受客户端时间的影响而变得不精准。\",\"max-age 则是相对时间，起始时间从浏览器获取并缓存该资源的时间算。但若修改客户端时间为 max-age 指定时间之后，缓存也会失效。\"]},\"102\":{\"h\":\"缓存新鲜度与使用期算法\",\"t\":[\"类比食品保质期，强缓存也有“保质期”，一般称其为“新鲜度”。判断强缓存是否新鲜的公式则为：\",\"强缓存是否新鲜 = 缓存新鲜度 > 缓存使用期\",\"强缓存是否新鲜取决于两个关键词：缓存新鲜度和缓存使用期。\"]},\"103\":{\"h\":\"缓存新鲜度\",\"t\":[\"在浏览器中强缓存的保质期限怎么计算？\",\"缓存的新鲜度公式如下：\",\"缓存新鲜度 = max-age || (expires - date)\",\"即，当 max-age 存在时，缓存新鲜度等于 max-age 表示的时间单位长度（s）。当 max-age 不存在时，缓存新鲜度等于 expires - date 的值。\",\"其中，首部字段 date 表示创建报文的日期时间，可以理解为服务器（包含源服务器和代理服务器）返回新资源的时间（绝对时间）。\"]},\"104\":{\"h\":\"使用期算法\",\"t\":[\"缓存使用期：可以理解为浏览器已经使用该资源的时间。主要与响应使用期、传输延迟时间和停留缓存时间有关，计算公式如下：\",\"缓存使用期 = 响应使用期 + 传输延迟时间 + 停留缓存时间\",\"响应使用期、传输延迟时间 与 停留缓存时间\",\"响应使用期 可通过两种方式计算：\",\"max(0, response_time - date_value)\",\"age_value\",\"response_time 是浏览器缓存收到响应的本地时间，date_value 即上文提到的 date 首部。Age 表示资源在缓存代理服务器中存贮的时长（s）\",\"将以上两种方式进行组合:\",\"apparent_age = max(0, response_time - date_value) 响应使用期 = max(apparent_age, age_value)\",\"传输延迟时间 可以理解为浏览器缓存发起请求到收到响应的时间差，其计算公式为：\",\"传输延迟时间 = response_time - request_time\",\"response_time 和 request_time 分别代表浏览器缓存收到响应和发起请求的本地时间\",\"停留缓存时间 表示资源在浏览器上已经缓存的时间，其计算公式为：\",\"停留缓存时间 = now - response_time\",\"now 代表电脑客户端的当前时间，response_time 代表浏览器缓存收到响应的本地时间\",\"max-age 仍然受到本地时间影响的原因\",\"从上文可总结出影响强缓存使用期的因素有：\",\"age_value：响应首部 age 值 date_value：响应首部 date 值 request_time：浏览器缓存发起请求的本地时间 response_time：浏览器缓存收到响应的本地时间 now：客户端当前时间\",\"以上 request_time、response_time 和 now 取的都是客户端本地时间，而 now 则受客户端本地时间修改的影响。\",\"因此一旦修改了电脑客户端本地时间为未来时间，缓存使用期的计算便会受到影响（主要是停留缓存时间会变大），从而导致缓存使用期超出缓存新鲜度范围（强缓存失效）。\"]},\"105\":{\"h\":\"从协商缓存到启发式缓存\",\"t\":[\"协商缓存可以看作是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程。\",\"即，浏览器启用协商缓存的前提是强缓存失效。\"]},\"106\":{\"h\":\"协商缓存的生效流程\",\"t\":[\"sequenceDiagram participant 浏览器 participant 浏览器缓存 participant 服务器 浏览器->>服务器: 发送请求 服务器->>浏览器: 返回响应 + Cache-Control 头部 alt 缓存未命中 浏览器->>浏览器缓存: 请求缓存 浏览器缓存-->>浏览器: 无缓存 浏览器->>服务器: 发送请求 服务器->>浏览器: 返回响应 + Cache-Control 头部 else 缓存命中 浏览器-->>浏览器缓存: 请求缓存 浏览器缓存->>浏览器: 返回缓存 end 浏览器->>服务器: 发送请求 + If-Modified-Since 头部 服务器->>浏览器: 返回 304 Not Modified 或新的响应 + Cache-Control 头部 alt 缓存未更新 浏览器-->>浏览器缓存: 更新缓存 浏览器缓存->>浏览器: 返回更新后的缓存 else 缓存已更新 浏览器-->>浏览器缓存: 更新缓存 浏览器缓存-->>浏览器: 缓存已更新 end\",\"上图流程图描述了协商缓存的生效流程。具体来说，流程包括以下步骤：\",\"浏览器向服务器发送请求，并在响应中收到 Cache-Control 头部;\",\"如果缓存未命中，则浏览器向浏览器缓存请求缓存，然后再次向服务器发送请求;\",\"如果缓存命中，则浏览器从浏览器缓存中获取响应;\",\"浏览器向服务器发送带有 If-Modified-Since 头部的请求，以检查缓存是否已更新;\",\"如果缓存未更新，则浏览器更新缓存并将更新后的缓存返回;\",\"如果缓存已更新，则浏览器从浏览器缓存中获取更新后的缓存。\"]},\"107\":{\"h\":\"缓存标识 Last-Modified 与 ETag\",\"t\":[\"Last-Modified 和 ETag 都是用于标识缓存的标识符，用于在缓存验证失效流程中判断资源是否已更新。它们的作用相同，但实现方式不同。\",\"Last-Modified 是一个时间戳，表示资源的最后修改时间。\",\"当浏览器向服务器发送请求时，服务器会将资源的最后修改时间作为 Last-Modified 字段的值返回给浏览器。\",\"当浏览器再次请求该资源时，会携带一个 If-Modified-Since 字段，其中的值为上次请求时返回的 Last-Modified 值。\",\"服务器会将资源的最后修改时间与 If-Modified-Since 中的时间戳进行比较，如果时间戳相同，则表示资源未更新，可以直接使用缓存；\",\"如果时间戳不同，则表示资源已更新，需要重新获取资源。\",\"ETag 是一个字符串，表示资源的唯一标识符。\",\"当浏览器向服务器发送请求时，服务器会将资源的 ETag 值作为 ETag 字段的值返回给浏览器。\",\"当浏览器再次请求该资源时，会携带一个 If-None-Match 字段，其中的值为上次请求时返回的 ETag 值。\",\"服务器会将资源的 ETag 值与 If-None-Match 中的值进行比较，如果值相同，则表示资源未更新，可以直接使用缓存；\",\"如果值不同，则表示资源已更新，需要重新获取资源。\",\"Last-Modified 有什么弊端？在服务器进行对比时一定精准吗？\",\"时钟不同步问题：last-modified 头部信息是由服务器生成的，而浏览器是根据本地时间来判断缓存是否过期的。若两端时钟不同步，就会导致缓存判断不准确。\",\"精度问题：last-modified 的精度只能到秒级别，如果同一秒钟内多次修改了资源，就会导致缓存失效的判断不准确。\",\"修改时间被篡改问题：由于 last-modified 是由服务器生成的，因此如果服务器的时间被篡改了，就会导致缓存失效的判断不准确。\",\"相比于 Last-Modified，ETag 更加准确，因为它是资源的唯一标识符，不会因为时间戳精度问题而产生误差。 但是，由于 ETag 是字符串类型，需要服务器进行字符串比较，可能会带来一定的性能开销。\",\"因此，在实际应用中，可以根据具体情况选择使用 Last-Modified 或 ETag。\"]},\"108\":{\"h\":\"ETag 原理及实现\",\"t\":[\"ETag 的值是由服务器生成的一个字符串，用于表示资源的特定版本。当客户端请求该资源时，可以将该值一起发送给服务器，服务器会根据该值来判断客户端缓存的版本是否过期。\",\"通常用以下几种方式生成：\",\"使用哈希算法生成：服务器可以使用哈希算法（如 MD5、SHA1 等）对资源内容进行计算，生成一个唯一的字符串作为 ETag 值。当资源内容发生变化时，ETag 值也会随之改变。\",\"使用版本号生成：服务器可以在资源的文件名或路径中加入版本号信息，每次更新版本号时，ETag 值也会随之改变。\",\"使用时间戳生成：服务器可以使用资源的最后修改时间作为 ETag 值。当资源内容发生变化时，最后修改时间也会随之改变，从而导致 ETag 值的改变。\",\"相关信息\",\"ETag 值的生成方式并没有统一的规定，不同的服务器实现可能采用不同的方式来生成 ETag 值。 但是，无论采用何种方式，ETag 值都应该是唯一的，并且能够准确地表示资源的特定版本。\",\"ETag 值又分为强 ETag 值和弱 ETag 值两种类型:\",\"强 ETag 值：指的是完全匹配资源内容的 ETag 值，也就是说，只有当两个 ETag 值完全相同，才表示两个资源内容完全一致；\",\"弱 ETag 值：指的是不完全匹配资源内容的 ETag 值，即使两个 ETag 值不完全相同，但只要它们表示的是同一个资源，就可以认为这两个资源内容是一致的。弱 ETag 值会在字段值最开始处附加 W/，例如：W/\\\"abcde12345\\\"。\"]},\"109\":{\"h\":\"启发式缓存\",\"t\":[\"启发式缓存（Heuristic Caching），也称为启发式过期（Heuristic Expiration），它是一种基于启发式算法的缓存过期策略。\",\"当服务器没有提供明确的缓存过期时间或者缓存标识时，浏览器就会使用启发式算法来估算资源的过期时间。启发式算法通常会根据资源的一些属性（如大小、类型、URL 等）来估算过期时间，从而决定是否缓存该资源以及缓存多长时间。\",\"注意：启发式缓存并不是一种精确的缓存策略，它只是一种基于经验的估算方法。因此，使用启发式缓存可能会导致一些资源过早地失效或者过晚地失效，从而影响用户的体验。 为了避免这种情况，建议在服务器端尽可能提供明确的缓存过期时间或者缓存标识，以确保缓存的准确性和有效性。\"]},\"110\":{\"h\":\"参考\",\"t\":[\"前端缓存技术与方案解析 - 劳卜 - 掘金小册\",\"彻底理解浏览器的缓存机制 - 掘金\",\"手写一个基于 Proxy 的缓存库 · Issue #34 · wsafight/personBlog\"]},\"111\":{\"c\":[\"基础\"]},\"112\":{\"c\":[\"缓存\"]},\"113\":{\"h\":\"前端缓存与技术方案（下）\"},\"114\":{\"h\":\"HTTP 缓存方案\"},\"115\":{\"h\":\"前端应用中的 HTTP 缓存方案\",\"t\":[\"当访问单页应用（SPA）的首页时，浏览器率先加载的是 HTML 文件，后续再按需加载其它公共资源。刷新页面，可观察 HTML 资源是走的协商缓存，其它大部分资源都命中了强缓存。\",\"因为像 JS、CSS 等资源经过像 webpack 这样的打包工具打包后可以自动生成 hash 文件名，资源变化会导致 hash 名更新。而 HTML 的文件名不会改变。\",\"但我们期望浏览器每次加载时都应该向服务器询问是否更新。否则会出现新版本发布后，浏览器读取缓存 HTML 文件，会导致页面空白报错（旧资源被删除）或应用没有更新（读取了旧资源）的问题。\",\"根据 HTTP 缓存的规则可使用以下缓存方案：\",\"频繁变动的资源，比如 HTML，采用协商缓存\",\"CSS、JS、图片资源等采用强缓存，使用 hash 命名\",\"如何让 HTML 文件走协商缓存？\",\"前提：先让浏览器强缓存失效。可以设置如下服务器响应报头：\",\"Cache-Control: max-age=0 Last-Modified: Sat, 04 Sep 2021 08:59:40 GMT\",\"在资源 0 秒就失效的情况下，存在协商缓存触发条件的 Last-Modified 标识，这样每次访问加载的 HTML 资源就会确保是最新的，解决了 HTML 被浏览器强缓存的问题。\"]},\"116\":{\"h\":\"Webpack 中的 Hash 模式\",\"t\":[\"在 Webpack 中，有三种常见的哈希类型，分别是 hash、chunkhash 和 contenthash。\",\"hash\",\"默认使用。项目级别的 hash，整个项目生成一个唯一的哈希值（即使只修改了一个文件，也会导致所有的文件名都发生变化导致缓存失效，不建议使用）。\",\"chunkhash\",\"入口文件（entry）级别的 hash，基于每个 chunk 的内容生成一个哈希值。因此，当项目中只有部分文件发生变化时，只有受影响的 chunk 的哈希值会发生变化(可通过 CommonsChunkPlugin 插件进行公共模块的提取，将公共库、插件打包成独立文件)。\",\"contenthash\",\"文件内容级别的 hash，基于文件内容生成的哈希值，在文件内容发生变化时，对应的哈希值才会变化。因此，当项目中只有部分文件发生变化时，只有受影响的文件的哈希值会发生变化。\",\"比如，一个 a.js 文件中引入了 a.css，那么当 js 文件被修改后，就算 css 文件并没有被修改，由于该模块发生了改变，同样会导致 css 文件也被重复构建。 此时，针对 css 使用 contenthash 后，只要其内容不变就不会被重复构建。\",\"为了最大化利用 HTTP 缓存中的强缓存优势，可以使用 Webpack 中的 [contenthash] 和 [chunkhash] 两个 hash 值来命名输出的文件，以减少不必要的资源重复请求，提升网页的整体打开速度。\"]},\"117\":{\"h\":\"用户操作与 HTTP 缓存\"},\"118\":{\"h\":\"Chrome 的三种加载模式\",\"t\":[\"在开发者工具打开时，Chrome 提供了三种加载模式（浏览器刷新按钮上右键鼠标可显示）。\",\"模式一：正常重新加载\",\"Mac: Command + R 快捷键 Windows: Ctrl + R（等同于直接按 F5）\",\"和直接点击浏览器上的刷新按钮效果一样，触发该模式在控制台可以看到大多数资源会命中强缓存，即会优先读取缓存。\",\"模式二：硬性重新加载\",\"Mac: Command + Shift + R Windows: Ctrl + Shift + R（等同于直接按 Ctrl + F5）\",\"常说的“强制刷新网页”，比如部署代码后仍然访问的是“旧”页面，使用强制刷新（Ctrl + F5）后，所有资源都会重新向服务器获取。\",\"检查请求报头可以发现，所有资源的请求首部都被加上了 cache-control: no-cache 和 pragma: no-cache，两者的作用都表示告知（代理）服务器不直接使用缓存，要求向源服务器发起请求，而 pragma 则是为了兼容 HTTP/1.0。\",\"因此硬性重新加载并没有清空缓存，而是禁用缓存。其效果类似于在开发者工具 Network 面板勾选了 Disable cache 选项。\"]},\"119\":{\"h\":\"模式三：清空缓存并硬性重新加载\",\"t\":[\"比硬性重新加载多了清空缓存的操作，会将浏览器存储的本地缓存都清空掉（所有访问过的网站缓存都将被清除），再重新向服务器发送请求。\"]},\"120\":{\"h\":\"为什么 Ctrl + F5 还是命中了缓存\",\"t\":[\"资源在硬性重新加载后还是命中缓存，说明请求报头上并没有加上特定的两个首部。命中缓存的资源都是随着页面渲染而加载的，而不走缓存的则是等待页面加载完通过脚本异步插入到 DOM 中去的，即资源异步加载命中缓存不受硬性重新加载控制。\",\"Tips\",\"如果采用开发者工具 Network 面板勾选 Disable cache 选项方式，那么异步资源也不会读取缓存，原因是缓存被提前禁用了，这与硬性重新加载不同。\",\"base64 图片缓存\",\"base64 格式的图片几乎永远都是 from memory cache，因为浏览器为了节省渲染开销而将其缓存到内存中。\"]},\"121\":{\"h\":\"Nginx 与跨域问题\",\"t\":[\"在前端开发中，Nginx 通常被用来解决跨域问题。跨域问题是由于浏览器的同源策略导致的，为了解决这个问题，可以通过设置响应头中的 Access-Control-Allow-Origin 来指定允许访问的域名。因此，在前端访问后端跨域时，需要检查服务端或者 Nginx 配置的 Access-Control-Allow-Origin 是否包含前端域名。\",\"有些时候 Access-Control-Allow-Origin 被设置成 * 代表允许所有域名访问，但可能还会报跨域，其根源其实在前端。比如前端使用 Axios 请求库时如果开启了以下配置：\",\"axios.defaults.withCredentials = true // 允许携带 cookie\",\"此时服务端配置 Access-Control-Allow-Origin 时就不能为 *，或者针对该类型的接口前端请求关闭该配置即可。\",\"同时当前端配置了 axios.defaults.withCredentials = true 时，服务端需配置 access-control-allow-credentials: true。\",\"如果浏览器发起了预检请求，那么可能还需要配置 access-control-allow-methods 和 access-control-allow-headers 报头为允许的值。比如：\",\"access-control-allow-headers: Content-Type,Content-Length,Authorization,Accept,X-Requested-With access-control-allow-methods: PUT,POST,GET,DELETE,OPTIONS\",\"所谓预检请求，也就是浏览器控制台经常会看到的 OPTIONS 请求。\"]},\"122\":{\"h\":\"使用 Nginx 配置响应报头\",\"t\":[\"修改跨域相关配置 如果要修改上述的跨域配置，那么首先找到对应的应用端口，修改 location / 中的参数：\",\"server { listen 80; location / { add_header Access-Control-Allow-Origin *; add_header Access-Control-Allow-Methods 'PUT,POST,GET,DELETE,OPTIONS'; add_header Access-Control-Allow-Headers 'Content-Type,Content-Length, Authorization, Accept,X-Requested-With'; if ($request_method = 'OPTIONS') { return 204; } } }\",\"修改缓存相关配置 Nginx 主要修改缓存方式和过期时间的配置。比如不想 HTML 文件命中强缓存，希望其走协商缓存，可以添加如下响应报头配置：\",\"server { listen 80; location / { if ($request_filename ~* .*.(html|htm)$) { add_header Cache-Control 'no-cache'; } } }\",\"而像 js、css 和图片这样的静态资源，希望浏览器命中强缓存，nginx 可以设置相应的过期时间：\",\"server { listen 80; location ~ .*.(gif|jpg|jpeg|png|bmp|swf|js|css)$ { expires 1d; } }\",\"上述配置以 1 天为例，最终浏览器将返回响应报头 Cache-Control: max-age=86400。\"]},\"123\":{\"h\":\"Memory Cache 与 Disk Cache\"},\"124\":{\"h\":\"Memory Cache\",\"t\":[\"一种缓存机制，用于存储最近访问的资源，例如图片、CSS 和 JavaScript 文件等。它存储在内存中，读取速度快，可以减少网络请求，提高网页加载速度。但是它的容量较小，不适合存储大型文件。\"]},\"125\":{\"h\":\"Disk Cache\",\"t\":[\"可以将一些已经访问过的网页资源保存在本地硬盘上，以便下次访问同一网页时可以更快地加载资源，提高网页加载速度和用户体验。优点是生命周期长，不触发删除操作则一直存在，而缺点则是获取资源的速度相对内存缓存较慢。\",\"Disk Cache 会根据保存下来的资源的 HTTP 首部字段来判断它们是否需要重新请求，如果重新请求那便是强缓存的失效流程，否则便是生效流程。\"]},\"126\":{\"h\":\"浏览器缓存机制\"},\"127\":{\"h\":\"缓存获取顺序\",\"t\":[\"当一个资源准备加载时，浏览器会根据其三级缓存原理进行判断：\",\"浏览器会率先查找内存缓存，如果资源在内存中存在，那么直接从内存中加载\",\"如果内存中没找到，接下去会去磁盘中查找，找到便从磁盘中获取\",\"如果磁盘中也没有找到，那么就进行网络请求，并将请求后符合条件的资源存入内存和磁盘中\"]},\"128\":{\"h\":\"缓存存储优先级\",\"t\":[\"除了 base64 的图片永远从内存加载外，其他大部分资源会从磁盘加载。\",\"磁盘缓存会将命中强缓存的 JS、CSS、图片等资源保存下来。而内存缓存仅会保存合适的内容。\",\"浏览器内存缓存生效的前提下，JS 资源的执行加载时间会影响其是否被内存缓存。此外图片资源（非 base64）也有和 JS 资源同样的现象，而 CSS 资源比较与众不同，其被磁盘缓存的概率远大于被内存缓存。\"]},\"129\":{\"h\":\"Preload 与 Prefetch\",\"t\":[\"preload 也称为预加载，用于在页面加载时预加载资源，以提高页面的性能和用户体验。通过使用 <link rel=\\\"preload\\\">，浏览器可以在页面加载时提前下载一些资源，以便在后续的页面渲染过程中更快地获取这些资源。\",\"注意，预加载资源并不一定会被浏览器缓存，因此在使用时，需要根据具体情况来决定是否需要设置缓存策略。另外，预加载资源也可能会对服务器造成额外的负担，因此需要谨慎使用。\",\"preload 则表示预提取，用于在空闲时间预加载资源，以提高页面的性能和用户体验。<link rel=\\\"prefetch\\\"> 不会在页面加载时立即下载资源，而是在浏览器空闲时下载资源，以便在后续的页面渲染过程中更快地获取这些资源。\",\"使用 prefetch 加载的资源，刷新页面时大概率会从磁盘缓存中读取，如果跳转到使用它的页面，则直接会从磁盘中加载该资源。\"]},\"130\":{\"h\":\"Service Worker\"},\"131\":{\"h\":\"PWA\",\"t\":[\"PWA 全称为 Progressive Web Apps，是一种可以像本地应用一样提供快速、可靠和具有类似原生应用体验的 Web 应用。\",\"PWA 的实现需要借助 Service Worker 技术和 Web App Manifest 文件。 PWA 技术的出现，使得 Web 应用在移动端能够更好地满足用户对于快速、可靠和具有本地应用体验的需求。\",\"以下是 PWA 的几个主要特性：\",\"可靠性：PWA 可以在离线状态下访问，具有快速的加载速度和可靠的性能。\",\"快速性：PWA 具有快速的加载速度，可以在几秒钟内快速加载应用程序。\",\"独立性：PWA 可以像本地应用一样运行，不需要安装，也不需要从应用商店下载。\",\"用户体验：PWA 具有类似原生应用的 UI 交互体验，可以提供推送通知、添加到主屏幕、后台服务等原生应用所具备的功能。\",\"安全性：PWA 使用 HTTPS 协议进行通信，可以提供更高的安全性和保护用户隐私的能力。\",\"可发现性：PWA 可以被搜索引擎索引，可以通过链接分享和搜索引擎等方式被用户发现和访问。\"]},\"132\":{\"h\":\"Service Worker 介绍\",\"t\":[\"Service Worker 的本质是一种 JavaScript 脚本，它运行在浏览器的后台线程中，独立于网页主线程，可以拦截和处理网页发出的网络请求，从而可以实现离线缓存、消息推送等功能。 因为它是运行在后台线程中的，所以即使用户关闭了网页，Service Worker 仍然可以继续运行。这使得 Service Worker 成为一种非常有用的技术，可以用来提高网页的性能和用户体验。\",\"Service Worker 依赖 Cache API 和 Fetch API 来实现离线缓存和网络请求拦截。Service Worker 缓存是持久的，独立于浏览器缓存或网络状态。\",\"生命周期与缓存 Service Worker 的生命周期包括以下几个阶段：\",\"注册：Service Worker 脚本被注册到浏览器中，此时脚本还没有被激活。\",\"安装：Service Worker 脚本被下载到浏览器中，并进行安装。在安装阶段，通常会进行一些初始化操作，例如打开缓存等。\",\"激活：Service Worker 脚本被激活，此时可以开始拦截网络请求并进行缓存操作。\",\"运行：Service Worker 脚本开始运行，可以处理网络请求并进行缓存操作。\",\"更新：Service Worker 脚本被更新，此时会重新执行安装和激活阶段，并且可以清除旧的缓存。\",\"在 Service Worker 的生命周期中，缓存是一个非常重要的概念。在安装阶段，通常会打开一个缓存，将需要缓存的资源添加到缓存中。在激活和运行阶段，可以从缓存中读取资源，并且可以将新的资源添加到缓存中。通过缓存，可以实现离线缓存和网络请求拦截等功能，从而提高网页的性能和用户体验。\",\"注意，Service Worker 缓存的资源是有时效性的，因为缓存中的资源可能会过期或者被更新。因此，在更新 Service Worker 脚本时，通常需要清除旧的缓存，以便新的资源可以被缓存。\",\"注册 通常会编写以下脚本进行 Service Worker 的注册：\",\"if ('serviceWorker' in navigator) { window.addEventListener('load', function() { navigator.serviceWorker.register('/service-worker.js').then(function(registration) { console.log('Service Worker registered:', registration); }, function(error) { console.log('Service Worker registration failed:', error); }); }); }\",\"这段代码首先检查浏览器是否支持 Service Worker，如果支持，则在页面加载完成后注册 Service Worker。navigator.serviceWorker.register 方法用于注册 Service Worker，参数是 Service Worker 脚本的 URL。注册成功后，会返回一个 ServiceWorkerRegistration 对象，可以用来管理 Service Worker 的生命周期。\",\"默认情况下，Service Worker 的作用范围不能超出其脚本所在的路径。如果该脚本放在根目录下，则代表项目根目录下的所有请求都可以被代理。当然，也可以在注册时使用 scope 参数指定对应的作用域。\",\"安装 在安装阶段，通常会进行以下几个步骤：\",\"下载脚本：浏览器会下载 Service Worker 脚本，并将其保存到缓存中。\",\"缓存静态资源：在 Service Worker 脚本中，可以通过 CacheStorage API 将一些静态资源添加到缓存中，从而实现离线缓存和快速加载等功能。在安装阶段，通常会将一些静态资源添加到缓存中。\",\"安装完成：当 Service Worker 脚本下载完成并缓存静态资源后，安装阶段就完成了。此时，Service Worker 还没有被激活，因此无法拦截网络请求。\",\"在这个阶段，Service Worker 开始接管网络请求，但并不一定立即生效，因为它需要等待所有已打开的页面关闭后才会生效。\",\"激活 在 Service Worker 激活阶段，可以执行一些操作，例如：\",\"缓存静态资源：可以在激活阶段缓存一些静态资源，这样在后续的请求中就可以直接从缓存中获取，从而提高页面加载速度。\",\"清理旧版本缓存：如果我们更新了 Service Worker，可能会有一些旧版本的缓存仍然存在，这些缓存可能会导致页面出现问题。在激活阶段，可以清理这些旧版本的缓存，保证页面正常运行。\",\"发送通知：可以在激活阶段发送一些通知，告知用户 Service Worker 已经更新，或者一些其他信息。\",\"注意，Service Worker 激活阶段只有在 Service Worker 注册成功后才会触发，如果注册失败，则不会进入激活阶段。另外，如果 Service Worker 更新失败，则不会触发激活阶段，而是继续使用旧版本的 Service Worker。\",\"运行 在 Service Worker 注册成功并且激活后，它开始接管网络请求，处理客户端的请求并返回响应的阶段。\",\"在 Service Worker 运行阶段，我们可以执行一些操作，例如：\",\"缓存网络请求：可以在 Service Worker 运行阶段缓存一些网络请求，这样在后续的请求中就可以直接从缓存中获取，从而提高页面加载速度和离线访问能力。\",\"拦截请求：可以在 Service Worker 运行阶段拦截客户端发送的请求，对请求进行处理，然后返回响应。这样可以实现一些高级的功能，例如离线访问、网络请求代理、请求重定向等。\",\"推送消息：可以在 Service Worker 运行阶段向客户端推送消息，例如通知用户有新消息、提醒用户更新等。\",\"注意，Service Worker 运行阶段是一个长期运行的过程，直到 Service Worker 被注销或者浏览器关闭。需要注意一些问题，例如缓存策略、请求处理、错误处理、性能优化等。\",\"更新 指在已经注册并激活的 Service Worker 更新后，新版本的 Service Worker 开始接管网络请求的过程。\",\"当一个新版本的 Service Worker 被注册后，它会等待所有已打开的页面关闭，然后进入激活阶段。在激活阶段，我们可以执行一些操作，例如清理旧版本缓存、发送通知等。然后新版本的 Service Worker 就会开始接管网络请求，处理客户端的请求并返回响应。\",\"在 Service Worker 更新阶段，需要注意一些问题，例如：\",\"缓存策略：如果我们在新版本的 Service Worker 中修改了缓存策略，可能会导致客户端缓存出现问题。因此在更新 Service Worker 时需要注意缓存策略的兼容性。\",\"请求处理：如果我们在新版本的 Service Worker 中修改了请求处理逻辑，可能会导致客户端请求出现问题。因此在更新 Service Worker 时需要注意请求处理逻辑的兼容性。\",\"错误处理：如果新版本的 Service Worker 出现了错误，可能会导致客户端请求出现问题。因此在更新 Service Worker 时需要注意错误处理的兼容性。\",\"注意，如果新版本的 Service Worker 更新失败，可能会导致客户端出现问题。因此在更新 Service Worker 时需要进行充分的测试和验证，确保更新过程的稳定性和可靠性。\",\"出于安全考虑，Service worker 只能在 https 及 localhost 下被使用。\"]},\"133\":{\"h\":\"存储型缓存\"},\"134\":{\"h\":\"网站登录背后的存储逻辑\",\"t\":[\"用户在客户端输入账号密码并点击登录后，前端将数据发送给服务端进行验证。如果校验成功，服务端会返回有效的 token 信息，后续客户端请求需要携带该 token 以供服务端验证用户登录的有效性，因此 token 信息在客户端的存储及传输，是用户不必重复登录的关键。\",\"服务端自动植入 服务端登录接口通过设置响应报头中的 set-cookie 首部字段，将 token 信息植入浏览器 cookie 中。 set-cookie 指令值包含了必选项 <cookie-name>=<cookie-value> 值和名的形式，同时还包括了可选项 Path（路径）、Domain（域名）、Max-Age（有效时间）等，以分号分隔。 之后前端调用同域下的接口时，浏览器会自动将网站的 cookie 值附加在请求头中传给后端进行校验，前端则不需要关心 token 的存取问题。\",\"前端手动存储 前端存储的方式不受限于浏览器环境（如像 APP 或小程序没有浏览器 cookie 的环境）。\",\"前端获取到服务端登录接口返回的 token 信息，再通过前端存储方法将数据持久化缓存起来，并在退出后手动清除。后续，在调用接口时需要手动将 token 传递给服务端；\"]},\"135\":{\"h\":\"浏览器存储型缓存方案\",\"t\":[\"Cookie 存储方案 Cookie 最初是为了辨别用户身份，实现页面间状态的维持和传递。\",\"其存储空间很小，不能超过 4KB。\",\"当 Cookie 在同域下被设置时，它会随着每一次资源请求的请求报头一起传递到服务端进行验证。如果存在过多的 Cookie，将会导致无效资源的传输和性能浪费。\",\"由于 Cookie 无法跨域传输，因此可以利用这一特点在 CDN 域名上进行优化。如果 CDN 资源和主站采用了相同的域名，那么 Cookie 的传输将会导致巨大的性能浪费。相反，可以将 CDN 的域名与主站区分开来，以避免这个问题。\",\"浏览器提供的原始 Cookie 存储 API 使用起来并不是特别方便。可使用 js-cookie 库，它封装了 Cookie 的常用操作，提供了简单易用的 API。\",\"Web Storage 存储方案Web Storage 作为 HTML5 推出的浏览器存储机制，其又可分为 Session Storage 和 Local Storage，两者相辅相成。\",\"Session Storage 作为临时性的本地存储，其生命周期存在于网页会话期间，即使用 Session Storage 存储的缓存数据在网页关闭后会自动释放，并不是持久性的。而 Local Storage 则存储于浏览器本地，除非手动删除或过期，否则其一直存在，属于持久性缓存。\",\"Web Storage 与 Cookie 相比存储大小得到了明显的提升，一般为 2.5-10M 之间（各家浏览器不同）。\",\"注意：Web Storage 存储的数据最终都会转化成字符串类型\",\"存储对象时如果没有提前采用序列化方法 JSON.stringify 转化为字符串对象，那么最终获取的值会变成 [object Object]。\",\"可对 Local Storage 封装方法，赋予其过期时间和自动序列化反序列化的能力，此时便无需再关心存储数据的格式问题。\",\"npm 上有处理此问题的包：web-storage-cache\",\"IndexedDB 存储方案 IndexedDB 是一个大规模的 NoSQL 存储系统，它几乎可以存储浏览器中的任何数据内容，包括二进制数据（ArrayBuffer 对象和 Blob 对象），其可以存储不少于 250M 的数据。\",\"npm 上比较流行的封装 IndexedDB 的包 idb 可以简化原始 API 的操作流程。\"]},\"136\":{\"h\":\"Chrome 浏览器 Application 面板\",\"t\":[\"Chrome Application 面板集成了对浏览器存储数据的一系列操作功能，比如清空存储数据、操作查看 Cookie / Web Storage、查看删除 IndexedDB、调试 Service Worker 等。\",\"HttpOnly\",\"当 Cookie 数据中对应的 HttpOnly 字段显示被勾选时，表示该 Cookie 不可通过 JS 获取和修改。\"]},\"137\":{\"h\":\"参考\",\"t\":[\"前端缓存技术与方案解析 - 劳卜 - 掘金小册\",\"彻底理解浏览器的缓存机制 - 掘金\",\"手写一个基于 Proxy 的缓存库 · Issue #34 · wsafight/personBlog\"]},\"138\":{\"c\":[\"基础\"]},\"139\":{\"c\":[\"缓存\"]},\"140\":{\"h\":\"mitt 源码阅读笔记\",\"t\":[\"mitt 是一个轻量级的 JavaScript 事件总线库，可以用于处理事件和消息传递。mitt 提供了一个简单而强大的 API，用于在程序中实现组件之间的松散耦合通信。\",\"本文将探索 mitt 的源码，了解其实现原理。\"]},\"141\":{\"h\":\"了解 Event Emitter / Pub/Sub\",\"t\":[\"在 JavaScript 中，事件发射器（Event Emitter）和发布-订阅（Pub/Sub）模式都属于行为型设计模式。\",\"这两种模式都是用于在程序中实现组件之间的松散耦合，以便它们可以相互通信而不需要直接依赖彼此。这种松散耦合可以提高代码的可维护性和可扩展性。例如，Node.js 中的 EventEmitter 类是一个事件发射器的实现，而 RxJS 库提供了一个强大的发布-订阅模式的实现。\",\"事件发射器模式\",\"是一种基于事件的设计模式，它使用一个事件发射器对象来管理事件和事件监听器。事件发射器对象维护一个事件列表，其中每个事件都有一个名称和一个或多个事件监听器。当事件发射器对象触发一个事件时，所有监听该事件的事件监听器都会被调用，并传递给它们相关的数据。事件发射器模式通常用于处理异步事件，例如用户交互、网络请求和定时器等。\",\"发布-订阅模式\",\"是一种基于消息的设计模式，它使用一个主题（或发布者）对象来管理消息和订阅者对象。主题对象维护一个消息列表，其中每个消息都有一个名称和一个或多个订阅者。当主题对象发送一条消息时，所有订阅该消息的订阅者都会收到该消息，并采取适当的行动。发布-订阅模式通常用于处理解耦逻辑，例如模块之间的通信、组件之间的通信和跨页面的通信等。\"]},\"142\":{\"h\":\"源码解析\",\"t\":[\"mitt 的核心源码只包含了一个函数，它返回一个事件管理对象（下面的代码移除 TypeScript 相关内容，以便于理解）。\",\"/** * 创建事件发射器，用于注册、移除和触发事件 * @param {Map} all - 存储所有事件类型及其对应的处理函数的 Map 对象 * @returns {Object} - 包含 all、on、off 和 emit 方法的对象 */ function mitt(all) { all = all || new Map(); return { // 事件名称与已注册的处理函数之间的映射表 all, /** * 注册事件处理函数 * @param {string} type - 要监听的事件类型（用 `'*'` 表示所有事件） * @param {function} handler - 响应指定事件时要调用的函数 */ on(type, handler) { // 获取事件类型对应的处理函数列表 const handlers = all.get(type); // 已有处理函数，将新处理函数添加到处理函数列表；没有，则用新处理函数初始化处理函数列表 if (handlers) { handlers.push(handler); } else { all.set(type, [handler]); } }, /** * 注销事件处理函数 * 如果省略 `handler`，则会注销所有指定类型的处理程序 * @param {string} type - 要注销注册 `handler` 的事件类型（用 `'＊'` 删除通配符处理程序） * @param {function} handler - 要注销的处理函数 */ off(type, handler) { const handlers = all.get(type); if (handlers) { // 如果指定了要注销的事件处理函数，从处理函数列表中移除它； // 未指定，则将该事件类型的处理函数列表清空 if (handler) { handlers.splice(handlers.indexOf(handler) >>> 0, 1); } else { all.set(type, []); } } }, /** * 触发事件，调用指定类型的所有处理程序。 * 如果存在，将在匹配类型的处理程序之后调用 `'*'` 处理程序。 * * 注意：不支持手动触发 '*' 处理程序 * @param {string} type - 要触发的事件类型 * @param {any} evt - 传递给每个事件处理函数的参数（推荐对象） */ emit(type, evt) { let handlers = all.get(type); if (handlers) { // 如果有处理函数，依次调用处理函数并传入参数 // 注：使用 slice 函数用于创建数组的副本，避免影响原始列表 handlers .slice() .map((handler) => { handler(evt); }); } // 获取通配符事件类型对应的处理函数列表，有则依次调用并传参 handlers = all.get('*'); if (handlers) { handlers .slice() .map((handler) => { handler(type, evt); }); } }, }; }\"]},\"143\":{\"h\":\"使用\",\"t\":[\"const emitter = mitt() // 监听一个事件 emitter.on('foo', e => console.log('foo', e) ) // 监听所有事件 emitter.on('*', (type, e) => console.log(type, e) ) // 触发一个事件 emitter.emit('foo', { a: 'b' }) // 清除所有事件 emitter.all.clear() // 使用处理函数引用 function onFoo() {} emitter.on('foo', onFoo) // 监听 emitter.off('foo', onFoo) // 移除监听\"]},\"144\":{\"h\":\"技巧\"},\"145\":{\"h\":\"巧用位运算符\",\"t\":[\"handlers.splice(handlers.indexOf(handler) >>> 0, 1);\",\">>> 0 是一种位运算技巧，用于将索引转换为非负整数（因为 JavaScript 中的位运算符只能用于 32 位整数）。\",\"handlers.indexOf(handler) 返回指定处理函数在处理函数列表中的索引，如果处理函数不存在于列表中，则返回 -1。 此时，执行 -1 >>> 0，其结果为 4294967295，远大于 handlers 数组长度。 当 splice() 方法的第一个参数大于或等于数组的长度时，它不会删除任何元素。\",\"这样做的目的是为了避免出现负数索引值，因为负数索引值会导致删除错误的处理函数。\",\"-1 >>> 0 的执行过程\",\"在 JavaScript 中可使用 >>> 将有符号整数转为无符号整数。\",\"将 -1 表示为二进制数，即 11111111 11111111 11111111 11111111。 执行无符号右移操作，将该二进制数向右移动 0 位，即不移动，得到的结果仍为 11111111 11111111 11111111 11111111。 将结果转换为十进制数，即 4294967295。因此，-1 >>> 0 的结果为 4294967295。\"]},\"146\":{\"h\":\"创建数组副本\",\"t\":[\"handlers.slice().map((handler) => { handler(evt); });\",\"使用 slice() 方法可以在不修改原始数组的情况下创建一个新的数组副本，它包含原始数组中的所有元素，因此对新数组的操作不会影响原始数组。\",\"除此之外，还有以下几种方式可复制数组：\",\"arr.concat[]\",\"展开运算符 [...arr]\",\"Array.from(arr)\"]},\"147\":{\"h\":\"添加 TypeScript 类型\",\"t\":[\"定义基础类型：\",\"export type EventType = string | symbol; // 事件处理器，可选的事件参数，不返回值 export type Handler<T = unknown> = (event: T) => void; // 定义一个通用的事件处理函数类型，可以处理多种不同类型的事件 export type WildcardHandler<T = Record<string, unknown>> = ( type: keyof T, // 必须是 T 类型中的某个属性名称 event: T[keyof T] // 必须是 T 类型中所有属性值的联合类型 ) => void; // 一个包含当前已注册的某种类型事件处理程序的数组 export type EventHandlerList<T = unknown> = Array<Handler<T>>; export type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>; // 一个 Map 类型，用于存储事件类型及其处理函数列表 // 在 TypeScript 中，Map 是一个泛型类型，可以指定键和值的类型。例如，Map<string, number> 表示一个键为字符串类型，值为数字类型的 Map 对象。 export type EventHandlerMap<Events extends Record<EventType, unknown>> = Map< keyof Events | '*', // EventHandlerList<Events[keyof Events]> 表示一个处理 Events[keyof Events] 类型事件的处理函数列表，也就是说，事件类型为 Events 中所有属性值的联合类型。 // WildCardEventHandlerList<Events> 表示一个处理所有事件类型的处理函数列表 EventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events> >;\",\"事件管理对象:\",\"export interface Emitter<Events extends Record<EventType, unknown>> { all: EventHandlerMap<Events>; on<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void; // 通配符事件类型 '*' 的重载 on(type: '*', handler: WildcardHandler<Events>): void; off<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void; off(type: '*', handler: WildcardHandler<Events>): void; emit<Key extends keyof Events>(type: Key, event: Events[Key]): void; emit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void; }\",\"在 mitt 函数中使用上述定义的类型\",\"function mitt<Events extends Record<EventType, unknown>>(all?: EventHandlerMap<Events>): Emitter<Events> { // 两种事件处理器的联合类型 type GenericEventHandler =| Handler<Events[keyof Events]> | WildcardHandler<Events>; return { on<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {/*...*/}, off<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {/*...*/}, emit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {/*...*/} }; }\"]},\"148\":{\"h\":\"构建\",\"t\":[\"项目构建从 scripts 命令定义看起。\",\"{ \\\"scripts\\\": { // 运行 \\\"typecheck\\\", \\\"lint\\\", \\\"mocha\\\" 和 \\\"test-types\\\" 命令 \\\"test\\\": \\\"npm-run-all --silent typecheck lint mocha test-types\\\", // 运行 \\\"test\\\" 目录下的 mocha 测试 \\\"mocha\\\": \\\"mocha test\\\", // 运行 TypeScript 编译器，检查 test/test-types-compilation.ts 文件的类型，但不生成任何输出 \\\"test-types\\\": \\\"tsc test/test-types-compilation.ts --noEmit --strict\\\", // 运行 ESLint 检查 src 和 test 目录下的 .ts 和 .js 文件 \\\"lint\\\": \\\"eslint src test --ext ts --ext js\\\", // 运行 TypeScript 编译器，检查 TypeScript 代码的类型，但不生成任何输出 \\\"typecheck\\\": \\\"tsc --noEmit\\\", // 使用 microbundle 将模块打包成 ES、CommonJS 和 UMD 格式 \\\"bundle\\\": \\\"microbundle -f es,cjs,umd\\\", // 运行 \\\"clean\\\", \\\"bundle\\\" 和 \\\"docs\\\" 命令 \\\"build\\\": \\\"npm-run-all --silent clean -p bundle -s docs\\\", // 删除 dist 目录 \\\"clean\\\": \\\"rimraf dist\\\", // 使用 documentation 工具生成 API 文档 \\\"docs\\\": \\\"documentation readme src/index.ts --section API -q --parse-extension ts\\\", // 运行 \\\"build\\\", \\\"test\\\" 命令，提交代码，打标签，推送到 Git 仓库，发布到 npm \\\"release\\\": \\\"npm run -s build -s && npm t && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish\\\" } }\"]},\"149\":{\"h\":\"常用工具和命令\",\"t\":[\"npm-run-all：提供简单的方式来运行多个 npm scripts 命令。如上面的 npm-run-all --silent typecheck lint mocha test-types 命令，将按照定义的顺序依次运行。\",\"其它参数：\",\"--silent：禁止输出额外的信息，使输出更简洁\",\"-p：并行运行多个命令\",\"-s：指定一组任务按照顺序依次执行\",\"rimraf：跨平台的 Node.js 模块，提供简单的方式来删除文件和目录。它的作用类似于 Unix/Linux 系统中的 rm -rf 命令，但也可以在 Windows 系统中使用。\",\"npm t：npm test 的别名\"]},\"150\":{\"h\":\"测试\",\"t\":[\"本库使用 Mocha 写测试，mocha test 命令会运行 mocha 测试，它会查找 test 目录下的测试文件，并执行这些测试。\",\"其配置在 package.json 中，将会被 mocha 命令读取并应用到测试运行中:\",\"{ \\\"mocha\\\": { // 指定测试文件的扩展名为 \\\".ts\\\" \\\"extension\\\": [ \\\"ts\\\" ], // 指定需要在测试运行前加载的模块。这里指定了 \\\"ts-node/register\\\" 和 \\\"esm\\\" 模块，它们分别用于支持 TypeScript 和 ES modules \\\"require\\\": [ \\\"ts-node/register\\\", \\\"esm\\\" ], // 指定测试文件的位置，这里表示所有以 \\\"_test.ts\\\" 结尾的文件都会被作为测试文件运行 \\\"spec\\\": [ \\\"test/*_test.ts\\\" ] }, }\",\"并使用 Chai 和 Sinon 库来进行单元测试。其中，Chai 提供了一组断言函数，用于判断测试结果是否符合预期，而 Sinon 则提供了一组用于创建测试所需的测试桩和测试桩验证函数等工具函数。\",\"Mocha\",\"测试框架，可编写和运行代码测试。提供了简单灵活的语法来定义测试用例，并且可以与各种断言库一起使用，以对代码的行为进行断言。 Mocha 可以在浏览器和 Node.js 环境中运行测试，并通过使用回调、Promises 和 async/await 实现异步测试。\",\"Mocha 还具有丰富的功能，例如测试分组、测试跳过和测试覆盖报告等。总的来说，Mocha 是一个确保 JavaScript 代码质量和正确性的好工具。\"]},\"151\":{\"h\":\"类型检测\",\"t\":[\"tsc 是 TypeScript 的编译器命令，用于将 TypeScript 代码编译为 JavaScript 代码。--noEmit 是 tsc 命令的一个选项，表示编译器不会将编译后的 JavaScript 代码写入到文件中，而只会对代码进行类型检查和语法分析等操作。\",\"这个选项通常用于在开发过程中进行类型检查，而不生成任何实际的输出文件。这可在开发过程中尽早地发现类型错误，从而减少调试时间和代码错误。\",\"注意\",\"--noEmit 选项并不会完全禁止 tsc 编译器的输出，它仍然会向终端输出类型检查和语法分析的结果。可以使用 --pretty false 选项完全禁止 tsc 编译器的输出。\"]},\"152\":{\"h\":\"eslint\",\"t\":[\"eslint 采用在 package.json 内配置的方式（也可使用独立的 .eslintrc 配置文件）。\",\"{ \\\"eslintConfig\\\": { // 指定一个或多个已有的ESLint配置文件，以便继承其中的规则和选项 \\\"extends\\\": [ \\\"developit\\\", // plugin: 表示对 @typescript-eslint 插件下的某一类配置对象的引用 \\\"plugin:@typescript-eslint/eslint-recommended\\\", \\\"plugin:@typescript-eslint/recommended\\\" ], // 专门用于解析 TypeScript 代码的解析器 \\\"parser\\\": \\\"@typescript-eslint/parser\\\", \\\"parserOptions\\\": { // 要解析的代码是 ES6 模块 \\\"sourceType\\\": \\\"module\\\" }, \\\"env\\\": { \\\"browser\\\": true, \\\"mocha\\\": true, \\\"jest\\\": false, \\\"es6\\\": true }, // 指定了 expect 变量为全局变量，用于在测试中使用断言库 \\\"globals\\\": { \\\"expect\\\": true }, \\\"rules\\\": { // ... } }, // 指定ESLint应该忽略的文件或目 \\\"eslintIgnore\\\": [ \\\"dist\\\", \\\"index.d.ts\\\" ] }\",\"extends：指定要使用的ESLint配置。\",\"parser：指定解析器。\",\"parserOptions：指定解析器的选项。\",\"env：指定代码运行的环境。\",\"globals：指定全局变量。\",\"rules：指定要应用的规则。\"]},\"153\":{\"h\":\"其他 package.json 配置\",\"t\":[\"以下属性都是为了让模块可以在不同的环境下被正确地导入和使用，以提高模块的可移植性和兼容性。同时，microbundle 打包时也可能用到其中的配置。\",\"{ // 定义了 ES6 模块规范的入口文件。当使用现代打包工具（如 webpack、Rollup 等）构建项目时，会自动使用这个属性指定的文件作为入口，以支持 ES6 模块的导入和导出。 \\\"module\\\": \\\"dist/mitt.mjs\\\", // 定义了 CommonJS 规范的入口文件。当使用 Node.js 运行时或者其他支持 CommonJS 规范的环境时，会自动使用这个属性指定的文件作为入口。 \\\"main\\\": \\\"dist/mitt.js\\\", // 定义了 ES6 模块规范的入口文件。这个属性主要是为了向老版本的打包工具提供兼容性支持，因为老版本的打包工具不支持 module 属性。 \\\"jsnext:main\\\": \\\"dist/mitt.mjs\\\", // 定义了 UMD 规范的入口文件。当使用不支持 ES6 模块或 CommonJS 规范的环境时，会自动使用这个属性指定的文件作为入口。 \\\"umd:main\\\": \\\"dist/mitt.umd.js\\\", // 定义了源代码文件的入口。这个属性通常用于调试和开发环境，因为它可以让开发者在调试时直接跳转到源代码文件，而不是跳转到编译后的文件。 \\\"source\\\": \\\"src/index.ts\\\", // 定义了 TypeScript 类型定义文件的路径。这个属性通常用于 TypeScript 项目，它告诉 TypeScript 编译器在编译时需要将这个文件作为类型定义文件使用。 \\\"typings\\\": \\\"index.d.ts\\\", // 定义了模块的导出方式。是可以指定多个导出方式的对象，包括 import、require、types 和 default。以便在不同的环境下使用不同的导出方式，以适应不同的场景。 \\\"exports\\\": { \\\"types\\\": \\\"./index.d.ts\\\", \\\"import\\\": \\\"./dist/mitt.mjs\\\", \\\"require\\\": \\\"./dist/mitt.js\\\", \\\"default\\\": \\\"./dist/mitt.mjs\\\" }, // 用于指定哪些文件是该模块的一部分，这些文件将会被打包到该模块中，以便在其他项目中使用。 // 默认情况下，所有文件都会被打包到该模块中，包括 node_modules 目录和测试文件等。 \\\"files\\\": [ \\\"dist\\\", \\\"index.d.ts\\\" ], }\"]},\"154\":{\"h\":\"打包\",\"t\":[\"本项目使用 microbundle 打包。microbundle 是一个零配置的 JavaScript 模块打包工具，可以将 JavaScript 模块打包成 CommonJS、ES modules 和 UMD 格式，从而可以在 Node.js 和浏览器环境中使用。\",\"其特点是简单易用，无需配置，只需要在命令行中运行 microbundle 命令即可进行打包。另外，它还支持一些常用的特性，比如压缩、代码分离等等。\",\"在 microbundle -f es,cjs,umd 命令中，-f 参数用于指定打包的格式，可以同时指定多个格式，用逗号隔开。 在这个命令中，es 表示打包成 ES modules 格式，cjs 表示打包成 CommonJS 格式，umd 表示打包成 UMD 格式。\",\"如果不指定 -f 参数，默认情况下 microbundle 会打包成 CommonJS 和 ES modules 格式。\"]},\"155\":{\"h\":\"提交/发布\",\"t\":[\"release 上提供了提交代码，打标签，推送到 Git 仓库，发布到 npm 等操作。\",\"git commit -am $npm_package_version：提交代码，并使用当前版本号作为提交信息。\",\"git tag $npm_package_version：打标签，并使用当前版本号作为标签名\",\"git push: 推送代码到 Git 仓库\",\"git push --tags: 推送标签到 Git 仓库\",\"npm publish：发布包到 npm\",\"$npm_package_version\",\"是一个环境变量，它包含了当前项目的版本号。在 npm scripts 命令中，可以使用 $npm_package_version 来引用当前项目的版本号。这个环境变量是由 npm 在运行命令时自动设置的，无需手动设置。\"]},\"156\":{\"h\":\"Github 工作流\",\"t\":[\"工作流用于在 GitHub 上进行持续集成（CI），配置文件放在 .github 目录下。\",\".github/main.yml 文件在项目的 pull request 和 push 事件中触发自动化构建和测试，配置如下：\",\"# 定义名为 CI 的工作流 name: CI on: # 当有新的 pull request 提交时，且提交的分支名符合 ** 通配符模式时； pull_request: branches: - \\\"**\\\" # 当在 main 分支上进行 push 操作时。 push: branches: - main jobs: # 定义名为 build 作业（job） build: # 指定运行环境为 ubuntu-latest runs-on: ubuntu-latest # 定义步骤 steps: # 使用 actions/checkout@v2 动作来检出代码库 - uses: actions/checkout@v2 # 使用 actions/setup-node@v2 动作来安装 Node.js 运行环境，指定版本为 14 - uses: actions/setup-node@v2 with: node-version: 14 # 定义一个名为 npm install, build, and test 的步骤 - name: npm install, build, and test # 包含以下命令 run: | npm install npm run build --if-present # 如果有定义 build 命令，则运行该命令，用于打包构建项目； npm test # 定义一个名为 CI 的环境变量，将其值设为 true env: CI: true\",\"compressed-size.yml 工作流文件定义了一个名为 Compressed Size 的工作流，主要使用 preactjs/compressed-size-action@v2 动作来计算代码库中指定文件的压缩大小，pattern 参数用于指定要计算压缩大小的文件路径模式。\"]},\"157\":{\"h\":\"文档\",\"t\":[\"本库的 API 文件使用 documentation 自动生成。\",\"documentation 是一个 JavaScript 文档生成工具，它可以根据代码中的注释自动生成文档。它支持多种文档格式，包括 HTML、Markdown、JSON 和 DocPad 等。\",\"如上文定义的 docs 命令，\\\"docs\\\": \\\"documentation readme src/index.ts --section API -q --parse-extension ts\\\"。该命令的作用在 src/index.ts 文件中查找 API 部分的注释（使用 --section API 参数），并将其转换为 Markdown 格式的文档输出到控制台（readme 参数）。其中，-q 参数表示以安静模式运行，不输出冗余信息，--parse-extension ts 参数表示解析 TypeScript 文件。\"]},\"158\":{\"h\":\"总结\",\"t\":[\"mitt 是一个非常小巧、灵活的 JavaScript 事件管理库，它的源码非常简洁。通过分析 mitt 的源码，可以了解了它是如何实现事件管理的。\"]},\"159\":{\"c\":[\"读源码\"]},\"160\":{\"c\":[\"event-bus\"]},\"161\":{\"h\":\"TypeScript 概述\",\"t\":[\"TypeScript 能让代码更好地弹性伸缩，它开发的程序更安全（类型安全）。\",\"类型安全：借助类型避免程序做无效的事情。\",\"TypeScript 除了消除与类型有关的一整类问题之外，还彻底改变了编写代码的方式，先在类型层面规划整个程序，再深入到值层面。 在设计过程中考虑边缘情况，使程序更简单、运行更快，且更易于理解和维护。\"]},\"162\":{\"h\":\"编译器\",\"t\":[\"程序由一些文件构成，并由编译器解析，转换成抽象句法树（abstract syntax tree，AST）。编译器把 AST 转换成一种称为字节码（bytecode）的低层表示。\",\"AST 是去掉了空白、注释和缩进用的制表符或空格之后的数据结构。\",\"运行程序：就是让运行时计算由编译器从源码解析得来的 AST 生成的字节码。步骤如下：\",\"把程序解析为 AST\",\"把 AST 编译成字节码\",\"运行时计算字节码\",\"TypeScript 特殊之处：不直接编译成字节码，而是编译成 JavaScript 代码。\",\"TypeScript 是如何让代码更安全呢？\",\"TypeScript 编译器生成 AST 之后，真正运行代码前，会对代码做类型检查。\",\"类型检查器：检查代码是否符合类型安全要求的特殊程序。\",\"使用 TypeScript，会在原来的编译流程上前置以下流程：\",\"TypeScript 源码 -> TypeScript AST\",\"类型检查器检查 AST\",\"TypeScript AST -> JavaScript 源码\",\"注意\",\"程序中的类型对程序生成的输出没有任何影响，类型只在类型检查（第 2 步）这一步使用。意味着，可以随时更新类型，而不会破坏应用功能。\"]},\"163\":{\"h\":\"类型系统\",\"t\":[\"类型系统：类型检查器为程序分配类型时使用的一系列规则。\",\"类型系统有两种：\",\"显式注解（形式：value: type，仅在必要时使用）\",\"自动推导（推荐）\"]},\"164\":{\"h\":\"TypeScript VS. JavaScript\",\"t\":[\"类型系统特性\",\"JavaScript\",\"TypeScript\",\"类型是如何绑定的？\",\"动态\",\"静态\",\"是否自动转换类型\",\"是\",\"否（多数时候）\",\"何时检查类型？\",\"运行时\",\"编译时\",\"何时报告错误\",\"运行时\",\"编译时（多数时候）\",\"JavaScript 是动态绑定的，在程序运行时才知道类型。\",\"TypeScript 是渐进式类型语言，在编译时可以知道类型（即使没有类型，也能部分推导）。\",\"JavaScript 是弱类型语言，执行无效操作也会进行隐式转换。\",\"TypeScript 会在编译时对代码做类型检查，会对代码做静态分析。如时输入代码有错，会在编辑器内输入代码时显示，极大缩短了反馈时间。\"]},\"165\":{\"h\":\"代码编辑器设置\",\"t\":[\"初始化 TypeScript 项目：\",\"mkdir hello-ts cd hello-ts npm init npm install --save-dev typescript tslint @types/node\"]},\"166\":{\"h\":\"tsconfg.json\",\"t\":[\"放在 TypeScript 项目根目录，用于定义要编译的源文件、目标目录、运行时版本等。\",\"在根目录新建 tsconfig.json 文件（也可通过 tsc --init 生成），写入：\",\"{ \\\"compilerOptions\\\": { \\\"lib\\\": [\\\"es2015\\\"], \\\"module\\\": \\\"commonjs\\\", \\\"outDir\\\": \\\"./dist\\\", \\\"sourceMap\\\": true, \\\"strict\\\": true, \\\"target\\\": \\\"es2015\\\", }, \\\"include\\\": [ \\\"src\\\" ] }\",\"简要介绍一下部分选项的作用：\",\"选项\",\"说明\",\"include\",\"指定要编译的文件或目录的路径，支持通配符。默认为 [\\\"**/*\\\"]。\",\"lib\",\"指定要包含的库文件的列表。默认为 [\\\"dom\\\", \\\"es5\\\", \\\"es2015.promise\\\"]。\",\"module\",\"指定要使用的模块系统。可选值为 \\\"CommonJS\\\"、\\\"SystemJs\\\"、\\\"umd\\\"、\\\"ES2015\\\" 等。默认为 \\\"commonjs\\\"。\",\"outDir\",\"指定编译输出目录的路径。默认为 \\\"./dist\\\"。\",\"strict\",\"开启所有严格类型检查选项。可选值为 true 或 false。默认为 false。\",\"target\",\"指定编译后的 JavaScript 代码目标版本。可选值为 \\\"ES3\\\"、\\\"ES5\\\"、\\\"ES2015\\\"、\\\"ES2016\\\" 等。\",\"这些选项很少改动，偶尔需切换打包工具时修改 module 和 target 设置，需在浏览器中运行时在 lib 中添加 \\\"dom\\\"。\",\"使用 tsconfig.json 可把配置纳入源码控制。可通过 tsc --help 命令查看更多选项。\"]},\"167\":{\"h\":\"eslint.json\",\"t\":[\"原文使用的是 TSLint，其官方维护已于 2019 年停止，会与 ESLint 合并，因此推荐使用 ESLint 代替 TSLint。\",\"生成默认配置的 .eslintrc.js 文件：\",\"# 根据提示操作 npx eslint --init\",\"内容如下：\",\"module.exports = { env: { browser: true, commonjs: true, es2021: true, }, extends: ['eslint:recommended', 'plugin:@typescript-eslint/recommended'], overrides: [], parser: '@typescript-eslint/parser', parserOptions: { ecmaVersion: 'latest', }, plugins: ['@typescript-eslint'], rules: {}, }\",\"完整的规则列表参见 ESLint 文档。\"]},\"168\":{\"h\":\"index.ts\",\"t\":[\"创建第一个 TypeScript 文件：\",\"mkdir src hello-ts touch src/index.ts\",\"在 index.ts 中输入代码：\",\"console.log('Hello TypeScript!')\",\"编译并运行 TypeScript 代码：\",\"tsc node ./dist/index.js\",\"控制台将看到一条日志：Hello TypeScript!\"]},\"169\":{\"c\":[\"TypeScript\"]},\"170\":{\"c\":[\"读书笔记\"]},\"171\":{\"h\":\"前端框架原理概览\"},\"172\":{\"h\":\"始识前端框架\",\"t\":[\"确定两个问题：\",\"React 是库（library）还是框架（framework）?\",\"Vue 号称是“构建用户界面的渐进式框架”，怎么样理解“渐进式”？\",\"React 和 Vue 的核心：构建UI的库。由两部分组成：\",\"基于状态的声明式渲染\",\"组件化的层次结构\",\"除此之外，还有其它功能：\",\"状态管理方案：应对复杂应用的状态管理（如 Redux、Pinia）\",\"客户端路由方案：SPA（如 React-Router、Vue-Router）\",\"SSR：首屏渲染提速、SEO 优化\",\"除此之外，还有许多功能是 React/Vue 不包含的，如构建工具、数据流方案、文档工具等。React/Vue 仅仅是库，而不是框架。\",\"可以称 “包含库本身以及附加功能”的解决方案为框架，例如：\",\"UmiJS：基于 React，内置路由、构建、部署等功能的前端框架\",\"AngularJS: 内置多种功能的前端框架\",\"所有现代前端框架的实现原理，可以概括为以下公式：\",\"$$UI = f(state)$$\",\"其中：\",\"state 代表：当前视图状态\",\"$f$ 代表：框架内部运行机制\",\"UI 代表：宿主环境的视图\",\"即：框架内部运行机制根据当前状态渲染视图。\",\"据此公式定义一个前端框架的分类标准，分析它们的技术特点与实现原理。\"]},\"173\":{\"h\":\"描述 UI\",\"t\":[\"两种主流方案：JSX、模板语言。\",\"JSX 是 Meta 提出的一种 “类 XML 语法” 的 ECMAScript 语法糖。如下语句：\",\"const element = <h1>Hello world</h1>\",\"由编译工具（babel）编译后为：\",\"// React v17 之后 import { jsx as _jsx } from \\\"react/jsx-runtime\\\"; const element = /*#__PURE__*/_jsx(\\\"h1\\\", { children: \\\"Hello world\\\" }); // React v17 之前 const element = /*#__PURE__*/React.createElement(\\\"h1\\\", null, \\\"Hello world\\\"); //\",\"在线查看 JSX 编译后结果。\",\"框架运行时执行后会得到如下数据，该数据会作用渲染 UI 的依据：\",\"{ type: 'h1', key: null, ref: null, props: { children: 'Hello, world!' }, _owner: null, _store: {} }\",\"React 团队认为 “UI 本质上与逻辑存在耦合的部分”。如：\",\"在 UI 上绑定事件\",\"在状态变化后改变 UI 的样式或结构\",\"用 ES 同时编辑逻辑和描述 UI，可例 UI 与逻辑配合更密切。由于 JSX 是 ES 代码的语法糖，因此它可以更灵活地与其他 ES 语法组合使用。\",\"JSX的 灵活性 可轻松描述 “复杂的 UI”，如与逻辑配合，即可描述 “复杂的 UI 变化”。\",\"注\",\"注：高灵活性意味着 JSX 需要牺牲 “潜在的编译优化空间”\",\"模板语言能够简练、直观地表达 U，但 缺失逻辑的表达能力（如 Mustache）。\",\"随着前端与 Node.js 的发展，应用复杂度不断提高，以及前后端分离开始普及，“状态驱动 UI” 的前端框架应运而生。\",\"JSX 与 模板语法都可以描述逻辑与 UI，但出发点不同。\",\"模板语法：从 UI 出发，扩展 UI，描述逻辑\",\"JSX: 从逻辑出发，扩展逻辑，描述 UI\"]},\"174\":{\"h\":\"组织 UI 与逻辑\",\"t\":[\"为了实现 UI 与逻辑的关注点分离，需要一种存放 UI 与逻辑的 松散耦合单元，即 组件。\",\"需解释两个问题：\",\"组件如何组织逻辑与 UI？\",\"如何在组件间传输数据？\",\"可借助数学中 “自变量与因变量” 的知识回答上述问题。考虑如下等式\",\"$2x + 1 = y$\",\"$x$ 的变化会导致 $y$ 的变化，其中 $x$ 被称为自变量，$y$ 被称为因变量。\",\"在 React Hooks 中定义自变量：\",\"const [x, setX] = useState(0) // 初始值为 0 的自变量 x console.log(x) // 取值 setX(1) // 赋值\",\"自变量普遍由 getter（取值）与 setter（赋值）两部分组成。自变量变化会导致 “依赖它的因变量” 变化。\",\"因变量有两种：有副作用 和 无副作用的因变量。\",\"注\",\"副作用: 函数式编程概念，指 “在函数执行过程中产生对外部环境的影响”。\",\"除修改函数外部变量外，调用 DOM API、I/O 操作、控制台打印信息等 “函数调用过程中产生的，外部可观察的变化” 都属于副作用。\",\"因变量不需要赋值。“无副作用因变量” 应设计为纯函数，以减少业务开发过程中的潜在bug。\",\"“自变量变化导致的副作用” 可以交由 “有副作用因变量” 处理，React Hooks 如下定义：\",\"// 当依赖的 x 变化，修改页面标题（副作用） useEffect(() => document.title = x, [x])\",\"回看第一个问题，即组件如何织织逻辑与 UI？\",\"组件通过三种方式组织逻辑与 UI:\",\"逻辑中的自变量变化，导致 UI 变化;\",\"自变量变化，导致 “无副作用因变量” 变化，导致 UI 变化\",\"自变量变化，导致 “有副作用因变量” 变化，导致副作用\"]},\"175\":{\"h\":\"组件间传输数据\",\"t\":[\"组件的自变量或因变量通过 UI 传递给另一个组件，作为其自变量。\",\"自变量分类\",\"为区分不同方式产生的自变量，“组件内部定义的自变量”通常被称为 state(状态)，“其他组件传递而来的自变量” 被称为 props（属性）。\",\"当自变量需要 跨层级传递时，可通过 store 将自变量直接从 A 传到 C（假设有三个层级的组件，A > B > C）。store 本质上也是自变量，相比 state 它能实现跨层级传递。当项目需要大量使用 store 时，就需要管理 store 的方案（Redux、Pinia）。\",\"ClassComponent 与 Hooks 谁的开发体验更好？\",\"使用 ClassComponent，需要了解各种生命周期的执行时机，甚至不同版本的 React 生命周期执行时机都有所区别；\",\"使用 Hooks，仅需掌握 “自变量与因变量” 即可。\"]},\"176\":{\"h\":\"前端框架分类依据\",\"t\":[\"state 的本质是自变量，自变量通过直接或间接的方式改变 UI。“被改变的 UI” 仅仅是 “对实际宿主环境 UI 的 描述”，并不是实际宿主环境的 UI。\",\"例如，JSX 语句仅是对 UI 的描述，需经前端框架处理才能在浏览器中显示真实 UI。\",\"$UI = f(state)$ 中的 $f$ 的工作原理：\",\"根据 state 变化计算出 UI 变化；\",\"根据 UI 变化执行具体宿主环境 API。\",\"前端框架需要关注 “自变量与 x 的对应关系”。随着 x 抽象层级不断下降，“自变量到 UI 变化” 的路径增多。路径越多，意味着前端框架在运行时消耗在寻找 “自变量与 UI 的对应关系” 上的时间越少。\",\"所以，前端框架中 “与自变量建立对应关系的抽象层级” 可用为其分类依据，可分为三类：\",\"应用级框架（React）\",\"组件级框架（Vue）\",\"元素级框架（Svelte）\"]},\"177\":{\"h\":\"React 中的自变量与因变理\",\"t\":[\"根据 “自变量与因变量” 理论为常见的 React Hooks 分类：\",\"useState: 定义组件内部的自变量（本质是“内置 reducer 的 useReducer”）\",\"useReducer: 同上，可以看作 “借鉴 Redux 理念的 useState”\",\"useContext: store 的实现，跨层级传递自变量\",\"useMemo: 采用 “缓存的方式” 定义组件内部 “无副作用因变量”\",\"useCallback: 同上，但缓存的值为函数式形\",\"useEffect: 定义组件内部 “有副作用因变量”\",\"除此之外，useRef 可在定义 UI 与逻辑时能够跳出组件的限制，执行一些 “有副作用的操作”（如：自行操作 DOM）。\",\"useRef 的用处\",\"是 reference（引用）的缩写，用于在组件多次 render 之间缓存一个 “引用类型的值”（在多次 render 间共享），可提供操作的灵活性。\"]},\"178\":{\"h\":\"前端框架使用的技术\"},\"179\":{\"h\":\"细粒度更新\",\"t\":[\"在 React 中定义因变量时需要显示指明 “因变量依赖的自变量”，而在 Vue 中并不需要显示指明参数。 Vue 中使用的 “能自动追踪依赖的技术” 被称为 “细粒度更新”（Fine Grained Reactivity），它是 Vue 建立 “自变量变化到 UI 变化” 的底层原理。\",\"实现简单的 “细粒度更新”：\",\"// 保存 effect 调用栈 const effectStack = [] function subscribe(effect, subs) { // 订阅关系建立 subs.add(effect) // 依赖关系建立 effect.deps.add(subs) } function cleanup(effect) { // 从该 effect 订阅的所有 state 对应的 subs 中移除该 effect for(const subs of effect.deps) { subs.delete(effect) } // 将该 effect 依赖的所有 state 对的应 subs 移除 effect.deps.clear() } function useState(value) { // 保存订阅该 state 变化的 effect const subs = new Set() // 获取当前上下文的 effect const getter = () => { const effect = effectStack[effectStack.length - 1] if (effect) { // 建立订阅发布关系 subscribe(effect, subs) } return value } const setter = (nextValue) => { value = nextValue // 通知所有订阅该 state 变化的 effect 执行 for (const effect of [...subs]) { effect.execute() } } return [getter, setter] } function useEffect(callback) { const execute = () => { // 重置依赖 cleanup(effect) // 将当前 effect 推入栈顶 effectStack.push(effect) try { // 执行回调 callback() } finally { // effect 出栈 effectStack.pop() } } const effect = { execute, deps: new Set() } // 立刻执行一次 execute() } function useMemo(callback) { const [s, setter] = useState // 首次执行 callback，次始化 value useEffect(() => set(callback())) return s }\",\"上面的 “细粒度更新” 版本的 Hooks 相比 React Hooks 有两个优点：\",\"无需显示指明依赖\",\"由于可自动跟踪依赖，因此不受 React Hooks “不能在条件语句中声明 Hooks” 的限制\",\"React Hooks 为何未使用细粒度更新呢？\",\"因为 React 属于应用级框架，从关注 “自变量与应用的对应关系” 角度看，其更新粒度不需要很细。\",\"上述实现与 React 有一个区别，即 getValue 是函数，而不是自变量的值。Sold.js 使用了这种方式，Vue2/3 中分别使用对象的存取描述符和 Proxy 封装了 getValue，隐藏了其实际是函数的细节。\"]},\"180\":{\"h\":\"AOT\",\"t\":[\"现在前端框架需要 “编译” 这一步，用于：\",\"将 jsx 转为浏览器可识别代码\",\"代码转换、实现 polyfill等\",\"编译时优化\",\"代码打包、压缩、混淆\",\"“编译” 可选择两个执行时机：\",\"代码构建时，称为 AOT（Ahead Of Time，预编译）\",\"在宿主环境执行时，称为 JIT（Just In Time， 即时编译）\",\"AOT 和 JIT 的区别\",\"Angular 同时提供这两种编译方案，此处以其举例以说明两者区别。\",\"在模板中使用未定义的方法，如果使用 AOT，代码在编译后就会立刻报错。如果使用 JIT，则代码在编译后不会报错，而是在浏览器中执行时报错。\",\"原因是：使用 JIT时，构建阶段仅使用 tsc 将 TS 编译为 JS 并将代码打包，在浏览器执行到 Decorator 时，Angular 的模板编译器才开始编译 template 字段包含的模板语法，并报错。\",\"当使用 AOT 时，tsc、Angular 的模板编译器会在构建阶段进行编译，立刻能发现错误。\",\"除此之外，使用 JIT 还有以下区别：\",\"首次加载时慢于 AOT 应用，因为需先编译代码；\",\"代码体积可能大于使用 AOT 应用，因为在运行时会增加编译器代码。\",\"综上，Angular 一般在开发环境中使用 JIT，生产环境中使用 AOT。\",\"借助 AOT 对模板语法编译时的优化，可以减少 “根据自变量变化计算出 UI 变化” 的开销， “采用模板语法描述 UI” 的前端框架都会进行此优化（如 Vue3、Angular、Svelte）。\",\"基本质原因：模板语法是固定的，意味着 “可分析”，在编译时可标记模板语法中的静态部分与动态部分，在寻找 “变化的 UI” 时可跳过静态部分。\",\"Svelte、Solid.js 甚至利用 AOT 在编译时直接建立 “自变量与 UI 中动态部分的关系 ”，在运行时，自变量发生变化后，可以直接根据 UI 变化执行具体的宿主环境 API。\",\"“采用 JSX 描述 UI” 的前端框架则难以从 AOT 中受益。原因：ES 语句的灵活性使用其很难进行静态分析。\",\"有两个思路实现上述框架在 AOT 中受益：\",\"使用新的 AOT 实现\",\"约束 JSX 的灵活性\",\"第一种思路 React 尝试过，于 2019 年暂停的 prepack 项目，用于实现 AOT 优化。其思路：在保持运行结果一致下，改变源代码运行逻辑，输出性能更高的代码。即 “代码在编译时将计算结果保留在编译后的代码中”。\",\"Solid.js 同样使用 JSX，它基于第二种思路，实现了几个内置控制流工具，用于 “在 UI 中描述逻辑”，从而减少 JSX 的灵活性。如 <For />、<Show />、<Switch>/<Match>\",\"综上可知，对框架工作原理影响较大的是：减少 “根据自变量变化计算出 UI 变化” 这一步骤的工作量。\"]},\"181\":{\"h\":\"Virtual DOM\",\"t\":[\"虚拟 DOM（简称 VDOM）是实现 “根据自变量变化计算出 UI 变化” 的主流技术，其工作原理可概括为两个步骤：\",\"将 “元素描述的 UI” 转化为 “VDOM 描述的 UI”；\",\"对比变化前后 “VDOM 描述的 UI”，计算出 UI 中发生变化\",\"使用 VDOM 的框架大体遵循以上步骤，仅细节上有区别。比如：\",\"Vue 使用模板语法描述 UI，模板语法编译为 render 函数\",\"React 使用 JSX 描述 UI, JSX 编译为 createElement 方法\",\"VDOM 的本质是 对 UI 的描述。\",\"其优点如下：\",\"相较于 DOM 的体积优势（DOM 包含大量冗余的属性）；\",\"相较于 AOT 更强的描述能力；\",\"跨平台渲染的抽象能力。\",\"相比于 AOT，“采用 VDOM 的前端框架” 在运行时也能拥有极好的性能。可用 krausest/krausejs-framework-benchmark 测试不同前端框架在不同场景下的性能基准。\",\"可见，对于粒度越细的更新，AOT 的优势越大。\"]},\"182\":{\"h\":\"前端框架的实现原理\"},\"183\":{\"h\":\"Svelte\",\"t\":[\"Svelte 的 API 设计继承自 Ractive（与 Vue 类似），但与 Vue 在框架实现上有极大不同。原因在于：Svelte 是重度依赖 AOT 的元素及框架。\",\"借由模板语法的约束，经过 AOT 的编译优化，Svelte 可以直接建立 “自变量与元素的对应关系”。在运行时省略了 “根据自变量计算出 UI 变化” 这一步骤，使用其在执行 “细粒度的更新”（比如更新大列表中的某一行）时比 “使用 VDOM 的框架” 的整体更新路径更短。\"]},\"184\":{\"h\":\"Vue3\",\"t\":[\"组件级前端框架，会建立 “自变量与组件的以应关系”，并在此基础上通过 VDOM 寻找 “自变量变化到 UI 变化的关系”。使用模板主语法描述 UI 使用其可从 AOT 中受益。\",\"示例如下：\",\"<script setup> import { ref } from 'vue' let count = ref(0) </script> <template> <h1 @click=count++>{{ count }}</h1> </template>\",\"Vue3 会为每个组件都建立 watchEffect，watchEffect 的回调函数会在 “watchEffect 首次执行时” 以及 “watchEffect 依赖的自变量变化后” 执行如下步骤：\",\"(1). 调用组件的 render 函数，生成组件对应的 VNode;\",\"上面的示例编译生成的 render 函数如下：\",\"let count = ref(0) return render(_ctx, _cache) => { return (_openBlock(), _createElementBlock(\\\"h1\\\", { onClick: _cache[0] || (_cache[0] = $event => (_isRef(count) ? count.value++ : count++)) }, _toDisplayString(_unref(count)), 1 /* TEXT */)) }\",\"可在 Vue SFC playground 查看完整的编译结果。\",\"当自变量发生变化后，effect 会重新执行，render 函数执行后，内部的自变量变化（count 的变化）会被该 effect 订阅。\",\"(2). 步骤（1）完成后， render 函数的返回值为本次更新的 VNode，它会与上次更新的 VNode 同时传入 patch 方法，执行 VDOM 相关操作，找到 “本次自变量变化导致的元素变化”，并最终执行对应的 DOM 操作。\",\"点击事件导致 count 发生变化时，Vue3 将执行 “订阅 count 变化的 effect 回调函数”，重复以上两个步骤，完成 UI 渲染。完整的对应关系：\",\"“自变量变化” 对应 “effect 回调函数执行”；\",\"“effect 回调函数执行” 对应 “组件 UI 更新”；\",\"所以 Vue3 被称为组件级框架。\",\"Vue3 如何从 AOT 中受益？\",\"模板代码如下：\",\"<div> <h3>hello</h3> <p>{{ name }}</p> </div>\",\"模板代码对应的 VNode 会在 patch 方法中一一进行比较。\",\"上述模板中只的 P 元素是可变的，其余的比较无意义。其编译后的代码如下所示：\",\"let name = ref('world') return (_ctx, _cache) => { return (_openBlock(), _createElementBlock(\\\"div\\\", null, [ _hoisted_1, _createElementVNode(\\\"p\\\", null, _toDisplayString(_unref(name)), 1 /* TEXT */) ])) }\",\"P 元素所对应的 _createElementVNode 函数第 4 个传参（PatchFlags）为 1，代码该 VNode 是可变的（不同值代表不同类型）。\",\"通过减少运行时 VDOM 需要对比的节点，运行时性能将得到提高。\"]},\"185\":{\"h\":\"React\",\"t\":[\"实现步骤：\",\"触发事件，改变自变量，开启更新流程；\",\"执行 VDOM 相关操作，在 React 中被称为 reconcile；\",\"根据步骤 2 计算出的 “需要变化的 UI” 执行对应的 UI 操作，在 React 中被称为 commit。\",\"React 被称为应用级框架的原因：其每次更新流程都是从应用的根节点开始，遍历整个应用。对比其他框架：\",\"Vue3 的更新流程开始于组件\",\"Svelte 的更新流程开始于元素\",\"React 中任何自变量的变化都会开启一次遍历应用的更新流程。\",\"每次更新都遍历应用，性能会差吗？\",\"不会。原因有两点：\",\"React 内部有优化机制\",\"为开发者提供了相关 API 用于 “减少无意义的遍历过程”，如 shouldComponentUpdate、React.memo 等\",\"Vue 中为何没有这些性能优化 API？\",\"组件级框架的定位和 AOT 优化已减少了大部分无意义的遍历过程。\",\"由于 React 没有完成这部分性能优化的任务，因此这部分工作交到了开发者手中。\",\"React 还拓展了许多新功能：\",\"优先级调度\",\"Time Slice (时间切片)\",\"Hooks\",\"Suspense\"]},\"186\":{\"c\":[\"React\"]},\"187\":{\"c\":[\"读书笔记\"]},\"188\":{\"h\":\"React 理念\"},\"189\":{\"h\":\"问题与解决思路\"},\"190\":{\"h\":\"底层架构的演进\"},\"191\":{\"h\":\"Fiber 架构\"},\"192\":{\"h\":\"调试 React 源码\"},\"193\":{\"c\":[\"React\"]},\"194\":{\"c\":[\"读书笔记\"]},\"195\":{\"h\":\"框架设计的核心要素\",\"t\":[\"TODO\"]},\"196\":{\"c\":[\"Vue\"]},\"197\":{\"c\":[\"读书笔记\"]},\"198\":{\"h\":\"权衡的艺术\",\"t\":[\"当设计一个框架时，其各模块间是相互关联和制约的。框架设计者需对框架的定位和方向拥有全局的把控，以便后续的模块设计和拆分。而作为学习者，学习框架时需要全局认知，否则会被细节困住。\",\"设计框架时需要考虑的多个方面，包括范式的选择（命令式或声明式）、运行时和编译时的选择（纯运行时、纯编译时或运行时+编译时）以及权衡不同选择带来的优缺点。\"]},\"199\":{\"h\":\"命令式和声明式\",\"t\":[\"从范式上看，视图层框架通常分为命令式和声明式，它们各有优缺点。框架设计者应该了解两种范式并尝试将它们结合起来，以做出正确的选择。\",\"命令式框架一大特点就是关注过程（如 jQuery 是典型的命令式框架）。即自然语言描述能够与代码产生一一对应的关系，代码本身描述的是“做事的过程”，符合逻辑直觉。\",\"声明式框架更加关注结果。如使用 Vue.js 实现功能，仅需要声明一个“结果”，至于其内部实现过程，则由 Vue.js 完成（即 Vue.js 封装了过程，其内部实现是命令式的，以更声明式暴露给用户）。\"]},\"200\":{\"h\":\"性能与可维护性的权衡\",\"t\":[\"结论：声明式代码的性能不如命令式代码。\",\"命令式代码通常更容易进行性能优化，因为可以直接控制每一个操作的执行顺序和细节。而声明式代码不一定能做到，因为它描述的是结果。\",\"框架为了实现最优的更新性能，它需要找到前后的差异并只更新变化的地方。\",\"公式：声明式代码的更新性能消耗 = 找出差异的性能消耗 + 直接修改的性能消耗\",\"声明式代码会比命令式代码多出找出差异的性能消耗，当找出差异的性能消耗为0时（最理想时），两者的性能相同，但无法超越，毕竟框架封装了命令式代码，就是为了提供面向用户的声明式接口。\",\"Vue.js 选择声明式的设计方案，是因为声明式代码的可维护性更强，更直观。\",\"框架设计者需要在保持可维护性的前提下最小化性能损失，因为采用声明式代码可能会导致一定的性能损失。\"]},\"201\":{\"h\":\"虚拟DOM的性能如何\",\"t\":[\"最小化找出差异的性能消耗可以让声明式代码性能无限接近命令式代码。\",\"而虚拟DOM，旨在最小化查找差异所带来的性能消耗。\",\"编写绝对优化的命令式代码，代价高，但投入产出比可能并不高。\",\"虚拟DOM的目的：在使用声明式代码的情况下最大限度地接近命令式代码的性能，以确保应用程序的性能不会太差。\",\"使用 innerHTML 和虚拟DOM在创建页面时的性能差距不大，两者都需要新建所有 DOM 元素。\",\"使用 innerHTML 会销毁所有旧的 DOM 元素，再全量创建新的 DOM 元素。虚拟 DOM 会比较新旧虚拟 DOM 找到变化的元素并更新它。\",\"即，虚拟 DOM 在更新页面时只会更新必要元素，但 innerHTML 需全量更新。\",\"虚拟DOM 和 innerHTML 在更新页面时的性能：\",\"虚拟DOM\",\"innerHTML\",\"纯JavaScript运算\",\"创建新的 JavaScript 对象 + Diff\",\"渲染 HTML 字符串\",\"DOM 运算\",\"必要的 DOM 更新\",\"销毁所有旧DOM新建所有新 DOM\",\"性能因素\",\"与数据变化量相关\",\"与模板大小相关\",\"虚拟DOM 是声明式的，心智负担小，可维护性强。\"]},\"202\":{\"h\":\"运行时和编译时\",\"t\":[\"设计框架时有三种选择：纯运行时、运行时 + 编译时 或 纯编译时。\",\"纯运行时框架在浏览器中动态地生成和处理应用程序的代码。例如，通过一个 Render 函数，提供描述树型结构的数据对象，然后递归地将数据渲染成 DOM 元素。\",\"手写树型结构麻烦且不直观，可引入编译手段，把 HTML 标签编译成树型结构的数据对象。例如，写一个 Compiler 程序编译 HTML 字符串，此时就变成了运行时 + 编译时框架。代码运行的时候才开始编译，会产生一定性能开销。也可以在构建时执行 Compiler 程序将用户提供内容编译好，运行时无须编译，对性能很友好。\",\"纯编译时框架则连 Render 都不需要，只需要 Compiler 函数即可。不支持任何运行时内容，代码需通过编译器编译后才能运行。\",\"纯运行时没办法分析用户提供内容，加入编译步骤则可以分析用户提供内容并进行优化，纯编译时性能可能更好，但有损灵活性。\",\"Vue.js 3 是一个运行时 + 编译时的框架，它在保持灵活性基础上，还能通过编译手段分析用户提供的内容，以进一步提升更新性能。\"]},\"203\":{\"c\":[\"Vue\"]},\"204\":{\"c\":[\"读书笔记\"]},\"205\":{\"h\":\"面试题\",\"t\":[\"浏览大量前端面试题可以了解前端技术的广度和深度、熟悉常见的面试题类型和难度、发现自己的不足\"]},\"206\":{\"h\":\"综合\",\"t\":[\"haizlin/fe-interview - 前端面试每日 3+1\",\"一名【合格】前端工程师的自检清单\",\"【前端进阶】优质博文/面试题\",\"2万5千字大厂面经 | 掘金技术征文 - 掘金\",\"关于浏览器方向的大厂面试题\",\"【1 月最新】前端 100 问：能搞懂 80% 的请把简历给我 - 掘金 👍\",\"Advanced-Frontend/Daily-Interview-Question 前端「壹题」\",\"coffe1891/frontend-hard-mode-interview 前端内参\",\"CyC2018/CS-Notes 技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计、Java、Python、C++\",\"🔥 连八股文都不懂还指望在前端混下去么 - 掘金 👍\"]},\"207\":{\"h\":\"Vue\",\"t\":[\"vsudheerj/vuejs-interview-questionsue List of 300 VueJS Interview Questions And Answers\",\"30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）\"]},\"208\":{\"h\":\"React\",\"t\":[\"sudheerj/reactjs-interview-questions React Interview Questions & Answers 👍\"]},\"209\":{\"h\":\"CSS 面试题\"},\"210\":{\"h\":\"关键点\",\"t\":[\"盒模型、选择器、伪类和伪元素\",\"BFC、居中布局、Flex/Grid、清除浮动、CSS画图、Retina 1px\",\"三栏布局（圣杯、双飞翼）、响应式布局、rem自适应\"]},\"211\":{\"h\":\"面试题\"},\"212\":{\"h\":\"布局\",\"t\":[\"什么是BFC？BFC的布局规则是什么？如何创建BFC（触发条件）？\",\"水平垂直居中元素有哪些方案？\",\"浮动布局的优缺点是什么？清除浮动有哪些方式？\",\"两个display：inline-block元素放一起会产生空白间隙？为什么？如何解决？\"]},\"213\":{\"h\":\"应用\",\"t\":[\"实现 div 垂直居中，左右10px，高度始终为宽度的一半\",\"创建三角形的原理是什么？\",\"实现 loading 加载动效\",\"多列等高如何实现？\",\"实现常用布局（三栏、圣杯、双飞翼、吸顶），可以说出多种方式并理解其优缺点\",\"Retina 屏幕的 1px 像素，如何实现？\"]},\"214\":{\"h\":\"高级\",\"t\":[\"图片瀑布流布局实现原理\",\"CSS 优化、提高性能的方式有哪些？\"]},\"215\":{\"h\":\"参考\",\"t\":[\"CSS 面试知识点总结\",\"剖析一些经典的CSS布局问题，为前端开发+面试保驾护航\",\"10 个 CSS 高频面试题，你都会吗？\"]},\"216\":{\"h\":\"JavaScript 面试题\"},\"217\":{\"h\":\"关键点\",\"t\":[\"语法： \",\"数据类型、作用域、原型链、继承、事件循环、闭包、this 指向\",\"ES6: 箭头函数、Promise、async/await、Proxy、Set/Map、Symbol、生成器\",\"应用：节流与防抖、深拷贝、跨域、并发控制、尾递归优化\",\"打包构建：模块化、Webpack、babel、rollup、vite\",\"性能优化：首屏速度、大数据渲染、懒加载、代码优化、构建优化\"]},\"218\":{\"h\":\"面试题\"},\"219\":{\"h\":\"变量和类型\",\"t\":[\"如何理解值类型和引用类型？\",\"有哪些判断类型的方式？以及它们的优缺点\",\"可能发生隐式类型转换的场景以及转换原则\"]},\"220\":{\"h\":\"原型和原型链\",\"t\":[\"New 的实现原理？\",\"有哪些方式可以实现继承？分别有哪些优缺点？\",\"call/apply/bind 实现原理是什么？\",\"instanceof 的底层实现原理，如何实现一个 instanceof？\",\"理解 ES6 class 构造以及继承的底层实现原理\"]},\"221\":{\"h\":\"作用域和闭包\",\"t\":[\"理解词法作用域和动态作用域\",\"对 JS 执行上下文栈和作用域链的理解？\",\"什么是闭包？闭包的使用场景？\",\"this 的原理？如何正确判断 this 指向？\",\"如何处理循环的异步操作？\",\"理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理\"]},\"222\":{\"h\":\"执行机制\",\"t\":[\"为何 try 里面放 return，finally 还会执行，理解其内部机制\",\"什么是异步编程？JS 是如何实现的？\",\"详述事件循环（Even Loop）机制\",\"什么是宏任务（MacroTask）和微任务（MicroTask）？以及它们的区别及应用？\",\"DOM 事件和事件循环的关系？\"]},\"223\":{\"h\":\"语法和API\",\"t\":[\"async/await 和 Promise 有什么关系？\",\"熟练应用 map、reduce、filter 等高阶函数解决问题\",\"常用正则表达式（邮箱校验、URL解析、去重等）\",\"介绍下 Map、Set、WeakMap 和 WeakSet 的区别？\",\"异常处理的方式，统一的异常处理方案\"]},\"224\":{\"h\":\"Web API\",\"t\":[\"DOM 节点操作有哪些方式？\",\"如何优化 DOM 操作的性能？\",\"事件传播的三个阶段是什么？描述事件绑定和冒泡的过程？\",\"什么是事件代理？\",\"如何理解 cookie？\",\"localStorage、SessionStorage 和 cookie 的区别？\",\"如何实现网页多标签 tab 通讯\",\"如何实现网页和 iframe 之间的通讯\"]},\"225\":{\"h\":\"应用\",\"t\":[\"防抖函数的作用是什么？如何实现？\",\"节流函数的作用是什么？有哪些应用场景？\",\"如何把嵌套的数组扁平化？\",\"如何生成一个递增数列的数组？\",\"如何解析 url 参数?\",\"JS 闭包会导致内存泄漏吗 ？JS 内存泄漏的场景有哪些？\",\"小数精度丢失问题如何解决？\",\"深拷贝和浅拷贝的区别？如何实现深拷贝？\",\"柯里化函数实现\",\"手写 Promise（then的链式调用、all、race、finally）\",\"手写 call、apply、bind\",\"手写 EventEmitter 事件发布/订阅\",\"手写模版引擎，并解释其中原理\"]},\"226\":{\"h\":\"参考\",\"t\":[\"lydiahallie/javascript-questions - JavaScript 进阶问题列表 👍\",\"每个 JavaScript 工程师都应懂的33个概念 👍\",\"(建议精读)原生JS灵魂之问(中)，检验自己是否真的熟悉JavaScript？\"]},\"227\":{\"h\":\"响应式基础\",\"t\":[\"TODO\"]},\"228\":{\"h\":\"深入响应式系统\",\"t\":[\"TODO\"]},\"229\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"230\":{\"h\":\"Posts\"},\"231\":{\"h\":\"Algorithm\"},\"232\":{\"h\":\"Code\"},\"233\":{\"h\":\"Basic\"},\"234\":{\"h\":\"Utils\"},\"235\":{\"h\":\"Reactivity\"},\"236\":{\"h\":\"Vue\"}},\"dirtCount\":0,\"index\":[[\"柯里化函数实现\",{\"1\":{\"225\":1}}],[\"小数精度丢失问题如何解决\",{\"1\":{\"225\":1}}],[\"小胡子哥的博客\",{\"1\":{\"69\":1}}],[\"防抖函数的作用是什么\",{\"1\":{\"225\":1}}],[\"防止陷入\",{\"1\":{\"13\":1}}],[\"防止根目录被发布\",{\"1\":{\"11\":1}}],[\"异常处理的方式\",{\"1\":{\"223\":1}}],[\"去重等\",{\"1\":{\"223\":1}}],[\"邮箱校验\",{\"1\":{\"223\":1}}],[\"熟练应用\",{\"1\":{\"223\":1}}],[\"熟悉常见的面试题类型和难度\",{\"1\":{\"205\":1}}],[\"详述事件循环\",{\"1\":{\"222\":1}}],[\"里面放\",{\"1\":{\"222\":1}}],[\"构造以及继承的底层实现原理\",{\"1\":{\"220\":1}}],[\"构建优化\",{\"1\":{\"217\":1}}],[\"构建阶段仅使用\",{\"1\":{\"180\":1}}],[\"构建ui的库\",{\"1\":{\"172\":1}}],[\"构建用户界面的渐进式框架\",{\"1\":{\"172\":1}}],[\"构建项目时\",{\"1\":{\"153\":1}}],[\"构建\",{\"0\":{\"148\":1},\"1\":{\"47\":1,\"172\":1}}],[\"构建相关的配置选项\",{\"1\":{\"44\":1}}],[\"构建打包\",{\"1\":{\"25\":1}}],[\"构建你的\",{\"1\":{\"17\":1}}],[\"构建后产物发布\",{\"1\":{\"14\":1}}],[\"懒加载\",{\"1\":{\"217\":1}}],[\"尾递归优化\",{\"1\":{\"217\":1}}],[\"深入响应式系统\",{\"0\":{\"228\":1}}],[\"深入理解es6\",{\"1\":{\"64\":1}}],[\"深拷贝和浅拷贝的区别\",{\"1\":{\"225\":1}}],[\"深拷贝\",{\"1\":{\"217\":1}}],[\"节流函数的作用是什么\",{\"1\":{\"225\":1}}],[\"节流与防抖\",{\"1\":{\"217\":1}}],[\"节点操作有哪些方式\",{\"1\":{\"224\":1}}],[\"节省磁盘空间的包管理工具\",{\"1\":{\"1\":1}}],[\"箭头函数\",{\"1\":{\"217\":1}}],[\"闭包会导致内存泄漏吗\",{\"1\":{\"225\":1}}],[\"闭包的使用场景\",{\"1\":{\"221\":1}}],[\"闭包\",{\"1\":{\"217\":1}}],[\"继承\",{\"1\":{\"217\":1}}],[\"你都会吗\",{\"1\":{\"215\":1}}],[\"剖析一些经典的css布局问题\",{\"1\":{\"215\":1}}],[\"屏幕的\",{\"1\":{\"213\":1}}],[\"吸顶\",{\"1\":{\"213\":1}}],[\"三栏\",{\"1\":{\"213\":1}}],[\"三栏布局\",{\"1\":{\"210\":1}}],[\"垂直居中\",{\"1\":{\"213\":1}}],[\"浮动布局的优缺点是什么\",{\"1\":{\"212\":1}}],[\"水平垂直居中元素有哪些方案\",{\"1\":{\"212\":1}}],[\"双飞翼\",{\"1\":{\"210\":1,\"213\":1}}],[\"圣杯\",{\"1\":{\"210\":1,\"213\":1}}],[\"居中布局\",{\"1\":{\"210\":1}}],[\"伪类和伪元素\",{\"1\":{\"210\":1}}],[\"盒模型\",{\"1\":{\"210\":1}}],[\"掌握程度\",{\"1\":{\"207\":1}}],[\"道\",{\"1\":{\"207\":1}}],[\"连八股文都不懂还指望在前端混下去么\",{\"1\":{\"206\":1}}],[\"🔥\",{\"1\":{\"206\":1}}],[\"👍\",{\"1\":{\"206\":2,\"208\":1,\"226\":2}}],[\"系统设计\",{\"1\":{\"206\":1}}],[\"系统中使用\",{\"1\":{\"149\":1}}],[\"系统中的\",{\"1\":{\"149\":1}}],[\"壹题\",{\"1\":{\"206\":1}}],[\"问\",{\"1\":{\"206\":1}}],[\"问题与解决思路\",{\"0\":{\"189\":1}}],[\"问题驱动\",{\"1\":{\"61\":1}}],[\"问题\",{\"0\":{\"56\":1}}],[\"月最新\",{\"1\":{\"206\":1}}],[\"合格\",{\"1\":{\"206\":1}}],[\"合并\",{\"1\":{\"167\":1}}],[\"综合\",{\"0\":{\"206\":1}}],[\"综上可知\",{\"1\":{\"180\":1}}],[\"综上\",{\"1\":{\"180\":1}}],[\"浏览大量前端面试题可以了解前端技术的广度和深度\",{\"1\":{\"205\":1}}],[\"浏览器提供的原始\",{\"1\":{\"135\":1}}],[\"浏览器提供的一种缓存机制\",{\"1\":{\"91\":1}}],[\"浏览器存储型缓存方案\",{\"0\":{\"135\":1}}],[\"浏览器可以在页面加载时提前下载一些资源\",{\"1\":{\"129\":1}}],[\"浏览器内存缓存生效的前提下\",{\"1\":{\"128\":1}}],[\"浏览器刷新按钮上右键鼠标可显示\",{\"1\":{\"118\":1}}],[\"浏览器读取缓存\",{\"1\":{\"115\":1}}],[\"浏览器率先加载的是\",{\"1\":{\"115\":1}}],[\"浏览器就会使用启发式算法来估算资源的过期时间\",{\"1\":{\"109\":1}}],[\"浏览器向服务器发送带有\",{\"1\":{\"106\":1}}],[\"浏览器向服务器发送请求\",{\"1\":{\"106\":1}}],[\"浏览器\",{\"0\":{\"136\":1},\"1\":{\"106\":8}}],[\"浏览器启用协商缓存的前提是强缓存失效\",{\"1\":{\"105\":1}}],[\"浏览器携带缓存标识向服务器发起请求\",{\"1\":{\"105\":1}}],[\"浏览器将其存储到缓存中\",{\"1\":{\"100\":1}}],[\"浏览器会自动将网站的\",{\"1\":{\"134\":1}}],[\"浏览器会下载\",{\"1\":{\"132\":1}}],[\"浏览器会率先查找内存缓存\",{\"1\":{\"127\":1}}],[\"浏览器会根据其三级缓存原理进行判断\",{\"1\":{\"127\":1}}],[\"浏览器会向服务器发起请求\",{\"1\":{\"100\":1}}],[\"浏览器会将资源的响应数据存储到浏览器缓存中\",{\"1\":{\"99\":1}}],[\"浏览器收到资源后会更新缓存的\",{\"1\":{\"97\":1,\"98\":1}}],[\"浏览器缓\",{\"1\":{\"92\":1}}],[\"浏览器缓存机制\",{\"0\":{\"126\":1}}],[\"浏览器缓存收到响应的本地时间\",{\"1\":{\"104\":1}}],[\"浏览器缓存发起请求的本地时间\",{\"1\":{\"104\":1}}],[\"浏览器缓存\",{\"1\":{\"91\":1,\"106\":5}}],[\"浏览器兼容性查询\",{\"1\":{\"70\":1}}],[\"面试知识点总结\",{\"1\":{\"215\":1}}],[\"面试题\",{\"0\":{\"205\":1,\"209\":1,\"211\":1,\"216\":1,\"218\":1},\"1\":{\"206\":1,\"207\":1}}],[\"面板集成了对浏览器存储数据的一系列操作功能\",{\"1\":{\"136\":1}}],[\"面板\",{\"0\":{\"136\":1}}],[\"面板勾选\",{\"1\":{\"120\":1}}],[\"面板勾选了\",{\"1\":{\"118\":1}}],[\"面板中常见的\",{\"1\":{\"93\":1}}],[\"加入编译步骤则可以分析用户提供内容并进行优化\",{\"1\":{\"202\":1}}],[\"加载动效\",{\"1\":{\"213\":1}}],[\"加载的资源\",{\"1\":{\"129\":1}}],[\"加载\",{\"1\":{\"55\":1}}],[\"加载窗口函数\",{\"1\":{\"51\":1}}],[\"加载主窗口\",{\"1\":{\"51\":1}}],[\"加载模块时\",{\"1\":{\"25\":1}}],[\"手写模版引擎\",{\"1\":{\"225\":1}}],[\"手写\",{\"1\":{\"225\":3}}],[\"手写树型结构麻烦且不直观\",{\"1\":{\"202\":1}}],[\"手写一个基于\",{\"1\":{\"110\":1,\"137\":1}}],[\"心智负担小\",{\"1\":{\"201\":1}}],[\"销毁所有旧dom新建所有新\",{\"1\":{\"201\":1}}],[\"销毁loading窗口\",{\"1\":{\"51\":1}}],[\"必要的\",{\"1\":{\"201\":1}}],[\"必须是\",{\"1\":{\"147\":2}}],[\"运算\",{\"1\":{\"201\":1}}],[\"运行时无须编译\",{\"1\":{\"202\":1}}],[\"运行时和编译时\",{\"0\":{\"202\":1}}],[\"运行时和编译时的选择\",{\"1\":{\"198\":1}}],[\"运行时性能将得到提高\",{\"1\":{\"184\":1}}],[\"运行时版本等\",{\"1\":{\"166\":1}}],[\"运行时\",{\"1\":{\"164\":2,\"202\":1}}],[\"运行时计算字节码\",{\"1\":{\"162\":1}}],[\"运行时或者其他支持\",{\"1\":{\"153\":1}}],[\"运行程序\",{\"1\":{\"162\":1}}],[\"运行更快\",{\"1\":{\"161\":1}}],[\"运行环境\",{\"1\":{\"156\":1}}],[\"运行阶段是一个长期运行的过程\",{\"1\":{\"132\":1}}],[\"运行阶段向客户端推送消息\",{\"1\":{\"132\":1}}],[\"运行阶段拦截客户端发送的请求\",{\"1\":{\"132\":1}}],[\"运行阶段缓存一些网络请求\",{\"1\":{\"132\":1}}],[\"运行阶段\",{\"1\":{\"132\":1}}],[\"运行\",{\"1\":{\"48\":1,\"132\":2,\"148\":7}}],[\"运行模式\",{\"1\":{\"44\":1}}],[\"字符串\",{\"1\":{\"201\":1,\"202\":1}}],[\"字段包含的模板语法\",{\"1\":{\"180\":1}}],[\"字段显示被勾选时\",{\"1\":{\"136\":1}}],[\"字段的值返回给浏览器\",{\"1\":{\"107\":2}}],[\"字段指定的时间之后资源都未更新\",{\"1\":{\"97\":1}}],[\"字段指定的时间之后资源发生了更新\",{\"1\":{\"97\":1}}],[\"字段来控制哪些文件会被打包进模块中发布\",{\"1\":{\"34\":1}}],[\"字段为项目名称\",{\"1\":{\"27\":2}}],[\"字段中声明的可执行文件链接到全局\",{\"1\":{\"25\":1}}],[\"字段用于声明一些可执行文件的路径\",{\"1\":{\"25\":1}}],[\"字段\",{\"1\":{\"17\":1,\"26\":1,\"107\":2}}],[\"旨在最小化查找差异所带来的性能消耗\",{\"1\":{\"201\":1}}],[\"毕竟框架封装了命令式代码\",{\"1\":{\"200\":1}}],[\"至于其内部实现过程\",{\"1\":{\"199\":1}}],[\"至此\",{\"1\":{\"27\":1}}],[\"符合逻辑直觉\",{\"1\":{\"199\":1}}],[\"符号链接依赖项\",{\"1\":{\"7\":1}}],[\"做事的过程\",{\"1\":{\"199\":1}}],[\"视图层框架通常分为命令式和声明式\",{\"1\":{\"199\":1}}],[\"视频\",{\"1\":{\"93\":1}}],[\"视频和示例\",{\"1\":{\"67\":1}}],[\"纯编译时性能可能更好\",{\"1\":{\"202\":1}}],[\"纯编译时框架则连\",{\"1\":{\"202\":1}}],[\"纯编译时\",{\"1\":{\"202\":1}}],[\"纯编译时或运行时+编译时\",{\"1\":{\"198\":1}}],[\"纯javascript运算\",{\"1\":{\"201\":1}}],[\"纯运行时没办法分析用户提供内容\",{\"1\":{\"202\":1}}],[\"纯运行时框架在浏览器中动态地生成和处理应用程序的代码\",{\"1\":{\"202\":1}}],[\"纯运行时\",{\"1\":{\"198\":1,\"202\":1}}],[\"权衡的艺术\",{\"0\":{\"198\":1}}],[\"权限\",{\"1\":{\"22\":1}}],[\"架构\",{\"0\":{\"191\":1}}],[\"底层架构的演进\",{\"0\":{\"190\":1}}],[\"渲染\",{\"1\":{\"184\":1,\"201\":1}}],[\"渲染进程负责呈现用户界面\",{\"1\":{\"55\":1}}],[\"渲染进程中约定以\",{\"1\":{\"44\":1}}],[\"渲染进程可以与主进程进行通信\",{\"1\":{\"42\":1}}],[\"渲染进程\",{\"0\":{\"42\":1,\"55\":1}}],[\"回调函数执行\",{\"1\":{\"184\":2}}],[\"回调函数\",{\"1\":{\"184\":1}}],[\"回看第一个问题\",{\"1\":{\"174\":1}}],[\"点击事件导致\",{\"1\":{\"184\":1}}],[\"寻找\",{\"1\":{\"184\":1}}],[\"细粒度的更新\",{\"1\":{\"183\":1}}],[\"细粒度更新\",{\"0\":{\"179\":1},\"1\":{\"179\":3}}],[\"经过\",{\"1\":{\"183\":1}}],[\"经典实例\",{\"1\":{\"64\":1}}],[\"元素\",{\"1\":{\"201\":3,\"202\":1}}],[\"元素所对应的\",{\"1\":{\"184\":1}}],[\"元素是可变的\",{\"1\":{\"184\":1}}],[\"元素描述的\",{\"1\":{\"181\":1}}],[\"元素级框架\",{\"1\":{\"176\":1}}],[\"虚拟dom\",{\"1\":{\"201\":3}}],[\"虚拟dom的目的\",{\"1\":{\"201\":1}}],[\"虚拟dom的性能如何\",{\"0\":{\"201\":1}}],[\"虚拟\",{\"1\":{\"181\":1,\"201\":2}}],[\"虚拟文件系统\",{\"1\":{\"7\":1}}],[\"改变自变量\",{\"1\":{\"185\":1}}],[\"改变源代码运行逻辑\",{\"1\":{\"180\":1}}],[\"改善既有代码的设计\",{\"1\":{\"64\":1}}],[\"于\",{\"1\":{\"180\":1}}],[\"尝试过\",{\"1\":{\"180\":1}}],[\"约束\",{\"1\":{\"180\":1}}],[\"立刻能发现错误\",{\"1\":{\"180\":1}}],[\"立刻执行一次\",{\"1\":{\"179\":1}}],[\"称为\",{\"1\":{\"180\":2}}],[\"称之为首部字段\",{\"1\":{\"93\":1}}],[\"压缩\",{\"1\":{\"180\":1}}],[\"隐藏了其实际是函数的细节\",{\"1\":{\"179\":1}}],[\"封装了过程\",{\"1\":{\"199\":1}}],[\"封装了\",{\"1\":{\"179\":1}}],[\"封装方法\",{\"1\":{\"135\":1}}],[\"角度看\",{\"1\":{\"179\":1}}],[\"次始化\",{\"1\":{\"179\":1}}],[\"建立订阅发布关系\",{\"1\":{\"179\":1}}],[\"建立\",{\"1\":{\"179\":1}}],[\"建议精读\",{\"1\":{\"226\":1}}],[\"建议在服务器端尽可能提供明确的缓存过期时间或者缓存标识\",{\"1\":{\"109\":1}}],[\"建议使用\",{\"1\":{\"85\":1}}],[\"建议采用类似\",{\"1\":{\"32\":1}}],[\"建议采用集成式或独立仓库式的模板\",{\"1\":{\"32\":1}}],[\"间共享\",{\"1\":{\"177\":1}}],[\"间的相互依赖\",{\"1\":{\"11\":1}}],[\"引用类型的值\",{\"1\":{\"177\":1}}],[\"引用\",{\"1\":{\"177\":1}}],[\"借由模板语法的约束\",{\"1\":{\"183\":1}}],[\"借助\",{\"1\":{\"180\":1}}],[\"借助类型避免程序做无效的事情\",{\"1\":{\"161\":1}}],[\"借鉴\",{\"1\":{\"177\":1}}],[\"理念\",{\"0\":{\"188\":1}}],[\"理念的\",{\"1\":{\"177\":1}}],[\"理论为常见的\",{\"1\":{\"177\":1}}],[\"理解其内部机制\",{\"1\":{\"222\":1}}],[\"理解模块化解决的实际问题\",{\"1\":{\"221\":1}}],[\"理解词法作用域和动态作用域\",{\"1\":{\"221\":1}}],[\"理解\",{\"1\":{\"61\":1,\"220\":1}}],[\"抽象层级不断下降\",{\"1\":{\"176\":1}}],[\"随着\",{\"1\":{\"176\":1}}],[\"随着前端与\",{\"1\":{\"173\":1}}],[\"甚至利用\",{\"1\":{\"180\":1}}],[\"甚至不同版本的\",{\"1\":{\"175\":1}}],[\"甚至单元测试等\",{\"1\":{\"22\":1}}],[\"谁的开发体验更好\",{\"1\":{\"175\":1}}],[\"假设有三个层级的组件\",{\"1\":{\"175\":1}}],[\"假设安装了依赖于\",{\"1\":{\"7\":1}}],[\"导致副作用\",{\"1\":{\"174\":1}}],[\"导致\",{\"1\":{\"174\":4}}],[\"导航站\",{\"0\":{\"68\":1}}],[\"导航\",{\"0\":{\"65\":1}}],[\"逻辑中的自变量变化\",{\"1\":{\"174\":1}}],[\"外部可观察的变化\",{\"1\":{\"174\":1}}],[\"副作用\",{\"1\":{\"174\":2}}],[\"赋值\",{\"1\":{\"174\":2}}],[\"赋予其过期时间和自动序列化反序列化的能力\",{\"1\":{\"135\":1}}],[\"取值\",{\"1\":{\"174\":2}}],[\"取的都是客户端本地时间\",{\"1\":{\"104\":1}}],[\"考虑如下等式\",{\"1\":{\"174\":1}}],[\"松散耦合单元\",{\"1\":{\"174\":1}}],[\"组织\",{\"0\":{\"174\":1}}],[\"组件级前端框架\",{\"1\":{\"184\":1}}],[\"组件级框架的定位和\",{\"1\":{\"185\":1}}],[\"组件级框架\",{\"1\":{\"176\":1}}],[\"组件内部定义的自变量\",{\"1\":{\"175\":1}}],[\"组件的自变量或因变量通过\",{\"1\":{\"175\":1}}],[\"组件间传输数据\",{\"0\":{\"175\":1}}],[\"组件通过三种方式组织逻辑与\",{\"1\":{\"174\":1}}],[\"组件如何组织逻辑与\",{\"1\":{\"174\":1}}],[\"组件\",{\"1\":{\"174\":1,\"184\":1}}],[\"组件化的层次结构\",{\"1\":{\"172\":1}}],[\"组件之间的通信和跨页面的通信等\",{\"1\":{\"141\":1}}],[\"组件引入图标\",{\"1\":{\"57\":1}}],[\"扩展逻辑\",{\"1\":{\"173\":1}}],[\"扩展\",{\"1\":{\"173\":1}}],[\"缺失逻辑的表达能力\",{\"1\":{\"173\":1}}],[\"直接修改的性能消耗\",{\"1\":{\"200\":1}}],[\"直观地表达\",{\"1\":{\"173\":1}}],[\"直到\",{\"1\":{\"132\":1}}],[\"直到处理完整个数据集\",{\"1\":{\"76\":1}}],[\"潜在的编译优化空间\",{\"1\":{\"173\":1}}],[\"灵活性\",{\"1\":{\"173\":1}}],[\"灵活的\",{\"1\":{\"158\":1}}],[\"团队认为\",{\"1\":{\"173\":1}}],[\"团队协作更容易\",{\"1\":{\"29\":1}}],[\"描述事件绑定和冒泡的过程\",{\"1\":{\"224\":1}}],[\"描述的\",{\"1\":{\"181\":2}}],[\"描述逻辑\",{\"1\":{\"173\":1}}],[\"描述\",{\"0\":{\"173\":1},\"1\":{\"173\":1,\"176\":1,\"180\":1,\"181\":1}}],[\"据此公式定义一个前端框架的分类标准\",{\"1\":{\"172\":1}}],[\"宿主环境的视图\",{\"1\":{\"172\":1}}],[\"框架为了实现最优的更新性能\",{\"1\":{\"200\":1}}],[\"框架设计者需要在保持可维护性的前提下最小化性能损失\",{\"1\":{\"200\":1}}],[\"框架设计者需对框架的定位和方向拥有全局的把控\",{\"1\":{\"198\":1}}],[\"框架设计者应该了解两种范式并尝试将它们结合起来\",{\"1\":{\"199\":1}}],[\"框架设计的核心要素\",{\"0\":{\"195\":1}}],[\"框架运行时执行后会得到如下数据\",{\"1\":{\"173\":1}}],[\"框架内部运行机制根据当前状态渲染视图\",{\"1\":{\"172\":1}}],[\"框架内部运行机制\",{\"1\":{\"172\":1}}],[\"框架基础模板的工具\",{\"1\":{\"30\":1}}],[\"渐进式\",{\"1\":{\"172\":1}}],[\"怎么样理解\",{\"1\":{\"172\":1}}],[\"号称是\",{\"1\":{\"172\":1}}],[\"始识前端框架\",{\"0\":{\"172\":1}}],[\"年暂停的\",{\"1\":{\"180\":1}}],[\"年停止\",{\"1\":{\"167\":1}}],[\"年了\",{\"1\":{\"17\":1}}],[\"偶尔需切换打包工具时修改\",{\"1\":{\"166\":1}}],[\"简称\",{\"1\":{\"181\":1}}],[\"简要介绍一下部分选项的作用\",{\"1\":{\"166\":1}}],[\"简化\",{\"1\":{\"29\":1}}],[\"写一个\",{\"1\":{\"202\":1}}],[\"写入\",{\"1\":{\"166\":1}}],[\"写测试\",{\"1\":{\"150\":1}}],[\"放在\",{\"1\":{\"166\":1}}],[\"放在同一个node\",{\"1\":{\"6\":1}}],[\"极大缩短了反馈时间\",{\"1\":{\"164\":1}}],[\"何时报告错误\",{\"1\":{\"164\":1}}],[\"何时检查类型\",{\"1\":{\"164\":1}}],[\"否\",{\"1\":{\"164\":1}}],[\"否则会被细节困住\",{\"1\":{\"198\":1}}],[\"否则会出现新版本发布后\",{\"1\":{\"115\":1}}],[\"否则其一直存在\",{\"1\":{\"135\":1}}],[\"否则便是生效流程\",{\"1\":{\"125\":1}}],[\"静态\",{\"1\":{\"164\":1}}],[\"动态\",{\"1\":{\"164\":1}}],[\"动作来计算代码库中指定文件的压缩大小\",{\"1\":{\"156\":1}}],[\"动作来安装\",{\"1\":{\"156\":1}}],[\"动作来检出代码库\",{\"1\":{\"156\":1}}],[\"形式\",{\"1\":{\"163\":1}}],[\"显式注解\",{\"1\":{\"163\":1}}],[\"显示具有标题和消息的错误框\",{\"1\":{\"52\":1}}],[\"显示具有自定义选项的消息框\",{\"1\":{\"52\":1}}],[\"步骤\",{\"1\":{\"184\":1}}],[\"步骤如下\",{\"1\":{\"162\":1}}],[\"步\",{\"1\":{\"162\":1}}],[\"程序将用户提供内容编译好\",{\"1\":{\"202\":1}}],[\"程序编译\",{\"1\":{\"202\":1}}],[\"程序中的类型对程序生成的输出没有任何影响\",{\"1\":{\"162\":1}}],[\"程序由一些文件构成\",{\"1\":{\"162\":1}}],[\"真正运行代码前\",{\"1\":{\"162\":1}}],[\"把\",{\"1\":{\"162\":1,\"202\":1}}],[\"把程序解析为\",{\"1\":{\"162\":1}}],[\"概述\",{\"0\":{\"161\":1}}],[\"作用域和闭包\",{\"0\":{\"221\":1}}],[\"作用域\",{\"1\":{\"217\":1}}],[\"作业\",{\"1\":{\"156\":1}}],[\"作为其自变量\",{\"1\":{\"175\":1}}],[\"作为临时性的本地存储\",{\"1\":{\"135\":1}}],[\"作为\",{\"1\":{\"135\":1}}],[\"作为包的入口文件\",{\"1\":{\"25\":1}}],[\"作为默认的\",{\"1\":{\"13\":1}}],[\"规范的环境时\",{\"1\":{\"153\":2}}],[\"规范的入口文件\",{\"1\":{\"153\":2}}],[\"规避非法访问未声明依赖的风险\",{\"1\":{\"2\":1}}],[\"变量和类型\",{\"0\":{\"219\":1}}],[\"变量为全局变量\",{\"1\":{\"152\":1}}],[\"变化执行具体的宿主环境\",{\"1\":{\"180\":1}}],[\"变化执行具体宿主环境\",{\"1\":{\"176\":1}}],[\"变化的关系\",{\"1\":{\"184\":1}}],[\"变化的\",{\"1\":{\"179\":2,\"180\":1,\"184\":1}}],[\"变化计算出\",{\"1\":{\"176\":1}}],[\"变化\",{\"1\":{\"173\":1,\"174\":6,\"176\":2,\"179\":1,\"180\":2,\"181\":1,\"183\":1}}],[\"变动时一定无理由\",{\"1\":{\"13\":1}}],[\"专门用于解析\",{\"1\":{\"152\":1}}],[\"跨域\",{\"1\":{\"217\":1}}],[\"跨域问题是由于浏览器的同源策略导致的\",{\"1\":{\"121\":1}}],[\"跨平台渲染的抽象能力\",{\"1\":{\"181\":1}}],[\"跨平台的\",{\"1\":{\"149\":1}}],[\"跨层级传递自变量\",{\"1\":{\"177\":1}}],[\"跨层级传递时\",{\"1\":{\"175\":1}}],[\"禁止输出额外的信息\",{\"1\":{\"149\":1}}],[\"禁用\",{\"1\":{\"50\":1}}],[\"打包构建\",{\"1\":{\"217\":1}}],[\"打包\",{\"0\":{\"154\":1},\"1\":{\"154\":1}}],[\"打包时也可能用到其中的配置\",{\"1\":{\"153\":1}}],[\"打包后的文件实际使用\",{\"1\":{\"25\":1}}],[\"打标签\",{\"1\":{\"148\":1,\"155\":2}}],[\"格式的文档输出到控制台\",{\"1\":{\"157\":1}}],[\"格式的图片几乎永远都是\",{\"1\":{\"120\":1}}],[\"格式\",{\"1\":{\"148\":1,\"154\":5}}],[\"测试不同前端框架在不同场景下的性能基准\",{\"1\":{\"181\":1}}],[\"测试跳过和测试覆盖报告等\",{\"1\":{\"150\":1}}],[\"测试框架\",{\"1\":{\"150\":1}}],[\"测试\",{\"0\":{\"150\":1},\"1\":{\"148\":1,\"150\":1}}],[\"展开运算符\",{\"1\":{\"146\":1}}],[\"得到的结果仍为\",{\"1\":{\"145\":1}}],[\"位\",{\"1\":{\"145\":1}}],[\"位整数\",{\"1\":{\"145\":1}}],[\"远大于\",{\"1\":{\"145\":1}}],[\"巧用位运算符\",{\"0\":{\"145\":1}}],[\"技巧\",{\"0\":{\"144\":1}}],[\"技术面试必备基础知识\",{\"1\":{\"206\":1}}],[\"技术的出现\",{\"1\":{\"131\":1}}],[\"技术和\",{\"1\":{\"131\":1}}],[\"技术与实战\",{\"1\":{\"64\":1}}],[\"依次调用处理函数并传入参数\",{\"1\":{\"142\":1}}],[\"依赖的自变量变化后\",{\"1\":{\"184\":1}}],[\"依赖的所有\",{\"1\":{\"179\":1}}],[\"依赖关系建立\",{\"1\":{\"179\":1}}],[\"依赖它的因变量\",{\"1\":{\"174\":1}}],[\"依赖项等\",{\"1\":{\"22\":1}}],[\"依赖项创建不同的解析\",{\"1\":{\"8\":1}}],[\"依赖项\",{\"1\":{\"8\":2}}],[\"依赖以及需要依赖的包被放置在一个文件夹下\",{\"1\":{\"7\":1}}],[\"依赖\",{\"1\":{\"6\":1,\"8\":1,\"11\":1,\"132\":1}}],[\"依赖结构的不确定性\",{\"1\":{\"5\":1}}],[\"依赖层级太深\",{\"1\":{\"5\":1}}],[\"依赖层层嵌套存在的问题\",{\"1\":{\"5\":1}}],[\"依赖在\",{\"1\":{\"5\":1}}],[\"依赖管理\",{\"0\":{\"4\":1,\"6\":1}}],[\"调用组件的\",{\"1\":{\"184\":1}}],[\"调用栈\",{\"1\":{\"179\":1}}],[\"调用\",{\"1\":{\"174\":1}}],[\"调用指定类型的所有处理程序\",{\"1\":{\"142\":1}}],[\"调试\",{\"0\":{\"192\":1},\"1\":{\"136\":1}}],[\"触发条件\",{\"1\":{\"212\":1}}],[\"触发一个事件\",{\"1\":{\"143\":1}}],[\"触发事件\",{\"1\":{\"142\":1,\"185\":1}}],[\"触发该模式在控制台可以看到大多数资源会命中强缓存\",{\"1\":{\"118\":1}}],[\"移除\",{\"1\":{\"179\":1}}],[\"移除监听\",{\"1\":{\"143\":1}}],[\"移除和触发事件\",{\"1\":{\"142\":1}}],[\"移除一个字符\",{\"1\":{\"85\":1}}],[\"订阅的所有\",{\"1\":{\"179\":1}}],[\"订阅关系建立\",{\"1\":{\"179\":1}}],[\"订阅模式通常用于处理解耦逻辑\",{\"1\":{\"141\":1}}],[\"订阅模式\",{\"1\":{\"141\":1}}],[\"订阅模式的实现\",{\"1\":{\"141\":1}}],[\"订阅\",{\"1\":{\"141\":1,\"184\":2,\"225\":1}}],[\"了解\",{\"0\":{\"141\":1}}],[\"了解其实现原理\",{\"1\":{\"140\":1}}],[\"转化为\",{\"1\":{\"181\":1}}],[\"转化为字符串对象\",{\"1\":{\"135\":1}}],[\"转为浏览器可识别代码\",{\"1\":{\"180\":1}}],[\"转换成一种称为字节码\",{\"1\":{\"162\":1}}],[\"转换成抽象句法树\",{\"1\":{\"162\":1}}],[\"转换后的代码目标版本\",{\"1\":{\"47\":1}}],[\"转换\",{\"1\":{\"47\":1}}],[\"各家浏览器不同\",{\"1\":{\"135\":1}}],[\"各个模板源码放置于\",{\"1\":{\"27\":1}}],[\"传到\",{\"1\":{\"175\":1}}],[\"传递给另一个组件\",{\"1\":{\"175\":1}}],[\"传递给每个事件处理函数的参数\",{\"1\":{\"142\":1}}],[\"传递给服务端\",{\"1\":{\"134\":1}}],[\"传输延迟时间\",{\"1\":{\"104\":4}}],[\"传输延迟时间和停留缓存时间有关\",{\"1\":{\"104\":1}}],[\"域名上进行优化\",{\"1\":{\"135\":1}}],[\"域名\",{\"1\":{\"134\":1}}],[\"路径越多\",{\"1\":{\"176\":1}}],[\"路径\",{\"1\":{\"134\":1}}],[\"信息植入浏览器\",{\"1\":{\"134\":1}}],[\"信息在客户端的存储及传输\",{\"1\":{\"134\":1}}],[\"信息\",{\"1\":{\"134\":2}}],[\"网络请求和定时器等\",{\"1\":{\"141\":1}}],[\"网络请求代理\",{\"1\":{\"132\":1}}],[\"网站登录背后的存储逻辑\",{\"0\":{\"134\":1}}],[\"出栈\",{\"1\":{\"179\":1}}],[\"出发\",{\"1\":{\"173\":1}}],[\"出于安全考虑\",{\"1\":{\"132\":1}}],[\"出现了错误\",{\"1\":{\"132\":1}}],[\"性能优化\",{\"1\":{\"217\":1}}],[\"性能优化等\",{\"1\":{\"132\":1}}],[\"性能因素\",{\"1\":{\"201\":1}}],[\"性能与可维护性的权衡\",{\"0\":{\"200\":1}}],[\"性能会差吗\",{\"1\":{\"185\":1}}],[\"性能高\",{\"1\":{\"90\":1}}],[\"推入栈顶\",{\"1\":{\"179\":1}}],[\"推送标签到\",{\"1\":{\"155\":1}}],[\"推送代码到\",{\"1\":{\"155\":1}}],[\"推送到\",{\"1\":{\"148\":1,\"155\":1}}],[\"推送消息\",{\"1\":{\"132\":1}}],[\"推出的浏览器存储机制\",{\"1\":{\"135\":1}}],[\"推荐对象\",{\"1\":{\"142\":1}}],[\"推荐\",{\"0\":{\"62\":1},\"1\":{\"163\":1}}],[\"拦截请求\",{\"1\":{\"132\":1}}],[\"告知用户\",{\"1\":{\"132\":1}}],[\"告知服务器客户端希望接收一个存在时间\",{\"1\":{\"96\":1}}],[\"激活阶段只有在\",{\"1\":{\"132\":1}}],[\"激活阶段\",{\"1\":{\"132\":1}}],[\"激活\",{\"1\":{\"132\":2}}],[\"成为一种非常有用的技术\",{\"1\":{\"132\":1}}],[\"成员函数\",{\"1\":{\"77\":1}}],[\"仍然可以继续运行\",{\"1\":{\"132\":1}}],[\"仍然受到本地时间影响的原因\",{\"1\":{\"104\":1}}],[\"消息推送等功能\",{\"1\":{\"132\":1}}],[\"交互体验\",{\"1\":{\"131\":1}}],[\"交互式路线图\",{\"1\":{\"74\":1}}],[\"具有类似原生应用的\",{\"1\":{\"131\":1}}],[\"具有快速的加载速度\",{\"1\":{\"131\":1}}],[\"具有快速的加载速度和可靠的性能\",{\"1\":{\"131\":1}}],[\"具体来说\",{\"1\":{\"106\":1}}],[\"全称为\",{\"1\":{\"131\":1}}],[\"全局变量\",{\"1\":{\"44\":1}}],[\"全局依赖\",{\"1\":{\"11\":1}}],[\"另外\",{\"1\":{\"129\":1,\"132\":1,\"154\":1}}],[\"预编译\",{\"1\":{\"180\":1}}],[\"预加载资源也可能会对服务器造成额外的负担\",{\"1\":{\"129\":1}}],[\"预加载资源并不一定会被浏览器缓存\",{\"1\":{\"129\":1}}],[\"预发布版本\",{\"1\":{\"17\":1}}],[\"磁盘缓存会将命中强缓存的\",{\"1\":{\"128\":1}}],[\"除修改函数外部变量外\",{\"1\":{\"174\":1}}],[\"除此之外\",{\"1\":{\"146\":1,\"172\":2,\"177\":1,\"180\":1}}],[\"除非手动删除或过期\",{\"1\":{\"135\":1}}],[\"除非手动启动了重启操作\",{\"1\":{\"48\":1}}],[\"除了消除与类型有关的一整类问题之外\",{\"1\":{\"161\":1}}],[\"除了\",{\"1\":{\"128\":1}}],[\"天为例\",{\"1\":{\"122\":1}}],[\"天然支持使用\",{\"1\":{\"16\":1}}],[\"希望浏览器命中强缓存\",{\"1\":{\"122\":1}}],[\"希望其走协商缓存\",{\"1\":{\"122\":1}}],[\"服务端登录接口通过设置响应报头中的\",{\"1\":{\"134\":1}}],[\"服务端自动植入\",{\"1\":{\"134\":1}}],[\"服务端会返回有效的\",{\"1\":{\"134\":1}}],[\"服务端需配置\",{\"1\":{\"121\":1}}],[\"服务器可以使用资源的最后修改时间作为\",{\"1\":{\"108\":1}}],[\"服务器可以使用哈希算法\",{\"1\":{\"108\":1}}],[\"服务器可以在资源的文件名或路径中加入版本号信息\",{\"1\":{\"108\":1}}],[\"服务器会根据该值来判断客户端缓存的版本是否过期\",{\"1\":{\"108\":1}}],[\"服务器会将资源的\",{\"1\":{\"107\":2}}],[\"服务器会将资源的最后修改时间与\",{\"1\":{\"107\":1}}],[\"服务器会将资源的最后修改时间作为\",{\"1\":{\"107\":1}}],[\"服务器会按照指定的规则生成资源的标识\",{\"1\":{\"98\":1}}],[\"服务器返回资源数据\",{\"1\":{\"100\":1}}],[\"服务器接收请求后将资源返回给浏览器\",{\"1\":{\"99\":1}}],[\"服务器不直接使用缓存\",{\"1\":{\"96\":1,\"118\":1}}],[\"服务器\",{\"1\":{\"43\":1,\"106\":4}}],[\"允许携带\",{\"1\":{\"121\":1}}],[\"允许包自行导入自已\",{\"1\":{\"7\":1}}],[\"原生js灵魂之问\",{\"1\":{\"226\":1}}],[\"原型和原型链\",{\"0\":{\"220\":1}}],[\"原型链\",{\"1\":{\"217\":1}}],[\"原因有两点\",{\"1\":{\"185\":1}}],[\"原因在于\",{\"1\":{\"183\":1}}],[\"原因\",{\"1\":{\"180\":1}}],[\"原因是\",{\"1\":{\"180\":1}}],[\"原因是缓存被提前禁用了\",{\"1\":{\"120\":1}}],[\"原文使用的是\",{\"1\":{\"167\":1}}],[\"原理及实现\",{\"0\":{\"108\":1}}],[\"原理和存在的问题\",{\"1\":{\"17\":1}}],[\"原理\",{\"0\":{\"5\":1},\"1\":{\"64\":1}}],[\"比硬性重新加载多了清空缓存的操作\",{\"1\":{\"119\":1}}],[\"比如更新大列表中的某一行\",{\"1\":{\"183\":1}}],[\"比如压缩\",{\"1\":{\"154\":1}}],[\"比如清空存储数据\",{\"1\":{\"136\":1}}],[\"比如不想\",{\"1\":{\"122\":1}}],[\"比如前端使用\",{\"1\":{\"121\":1}}],[\"比如部署代码后仍然访问的是\",{\"1\":{\"118\":1}}],[\"比如\",{\"1\":{\"115\":1,\"116\":1,\"121\":1,\"181\":1}}],[\"比如资源从源服务器发出后又被中间的代理服务器接收并缓存\",{\"1\":{\"96\":1}}],[\"比如两个不同包引入react版本不一致\",{\"1\":{\"5\":1}}],[\"清除浮动有哪些方式\",{\"1\":{\"212\":1}}],[\"清除浮动\",{\"1\":{\"210\":1}}],[\"清除所有事件\",{\"1\":{\"143\":1}}],[\"清理旧版本缓存\",{\"1\":{\"132\":1}}],[\"清理构建产物和\",{\"1\":{\"14\":1}}],[\"清空缓存并硬性重新加载\",{\"0\":{\"119\":1}}],[\"页面\",{\"1\":{\"118\":1}}],[\"旧\",{\"1\":{\"118\":1}}],[\"旧资源被删除\",{\"1\":{\"115\":1}}],[\"常说的\",{\"1\":{\"118\":1}}],[\"常用正则表达式\",{\"1\":{\"223\":1}}],[\"常用工具和命令\",{\"0\":{\"149\":1}}],[\"常用指令有\",{\"1\":{\"96\":1}}],[\"常用命令\",{\"1\":{\"9\":1}}],[\"硬性重新加载\",{\"1\":{\"118\":1}}],[\"硬链接节省磁盘\",{\"1\":{\"17\":1}}],[\"正常重新加载\",{\"1\":{\"118\":1}}],[\"正则表达式工具\",{\"1\":{\"70\":1}}],[\"后台服务等原生应用所具备的功能\",{\"1\":{\"131\":1}}],[\"后\",{\"1\":{\"116\":1,\"118\":1}}],[\"后续\",{\"1\":{\"134\":1}}],[\"后续客户端请求需要携带该\",{\"1\":{\"134\":1}}],[\"后续再按需加载其它公共资源\",{\"1\":{\"115\":1}}],[\"后续可基于此做模板定制开发\",{\"1\":{\"33\":1}}],[\"针对\",{\"1\":{\"116\":1}}],[\"针对请求报头和响应报头实体部分使用\",{\"1\":{\"93\":1}}],[\"级别的\",{\"1\":{\"116\":1}}],[\"入口文件\",{\"1\":{\"116\":1}}],[\"入参签名\",{\"1\":{\"26\":1}}],[\"整个项目生成一个唯一的哈希值\",{\"1\":{\"116\":1}}],[\"整体上更清晰规范\",{\"1\":{\"6\":1}}],[\"采用模板语法描述\",{\"1\":{\"180\":1}}],[\"采用\",{\"1\":{\"177\":1,\"180\":1,\"181\":1}}],[\"采用在\",{\"1\":{\"152\":1}}],[\"采用协商缓存\",{\"1\":{\"115\":1}}],[\"采用的是\",{\"1\":{\"28\":1}}],[\"频繁变动的资源\",{\"1\":{\"115\":1}}],[\"名更新\",{\"1\":{\"115\":1}}],[\"资源和主站采用了相同的域名\",{\"1\":{\"135\":1}}],[\"资源比较与众不同\",{\"1\":{\"128\":1}}],[\"资源同样的现象\",{\"1\":{\"128\":1}}],[\"资源的执行加载时间会影响其是否被内存缓存\",{\"1\":{\"128\":1}}],[\"资源在硬性重新加载后还是命中缓存\",{\"1\":{\"120\":1}}],[\"资源就会确保是最新的\",{\"1\":{\"115\":1}}],[\"资源变化会导致\",{\"1\":{\"115\":1}}],[\"资源是走的协商缓存\",{\"1\":{\"115\":1}}],[\"刷新页面时大概率会从磁盘缓存中读取\",{\"1\":{\"129\":1}}],[\"刷新页面\",{\"1\":{\"115\":1}}],[\"彻底理解浏览器的缓存机制\",{\"1\":{\"110\":1,\"137\":1}}],[\"劳卜\",{\"1\":{\"110\":1,\"137\":1}}],[\"弱\",{\"1\":{\"108\":2}}],[\"才表示两个资源内容完全一致\",{\"1\":{\"108\":1}}],[\"才是真正的不进行任何缓存\",{\"1\":{\"96\":1}}],[\"强制刷新网页\",{\"1\":{\"118\":1}}],[\"强\",{\"1\":{\"108\":1}}],[\"强缓存失效\",{\"1\":{\"104\":1}}],[\"强缓存是否新鲜取决于两个关键词\",{\"1\":{\"102\":1}}],[\"强缓存是否新鲜\",{\"1\":{\"102\":1}}],[\"强缓存也有\",{\"1\":{\"102\":1}}],[\"强缓存不仅限于\",{\"1\":{\"100\":1}}],[\"强缓存的生成过程\",{\"1\":{\"99\":1,\"100\":1}}],[\"强缓存\",{\"0\":{\"99\":1},\"1\":{\"92\":1,\"94\":2}}],[\"精度问题\",{\"1\":{\"107\":1}}],[\"都不需要\",{\"1\":{\"202\":1}}],[\"都属于副作用\",{\"1\":{\"174\":1}}],[\"都是用于标识缓存的标识符\",{\"1\":{\"107\":1}}],[\"都可以用来获取字符串\",{\"1\":{\"85\":1}}],[\"头部信息是由服务器生成的\",{\"1\":{\"107\":1}}],[\"头部的请求\",{\"1\":{\"106\":1}}],[\"头部\",{\"1\":{\"106\":5}}],[\"发现自己的不足\",{\"1\":{\"205\":1}}],[\"发生变化时\",{\"1\":{\"184\":1}}],[\"发送通知等\",{\"1\":{\"132\":1}}],[\"发送通知\",{\"1\":{\"132\":1}}],[\"发送请求\",{\"1\":{\"106\":3}}],[\"发布包到\",{\"1\":{\"155\":1}}],[\"发布\",{\"0\":{\"155\":1},\"1\":{\"141\":2}}],[\"发布到\",{\"0\":{\"34\":1},\"1\":{\"148\":1,\"155\":1}}],[\"发布带\",{\"1\":{\"15\":1}}],[\"由编译工具\",{\"1\":{\"173\":1}}],[\"由两部分组成\",{\"1\":{\"172\":1}}],[\"由服务器根据缓存标识决定是否使用缓存的过程\",{\"1\":{\"105\":1}}],[\"由于可自动跟踪依赖\",{\"1\":{\"179\":1}}],[\"由于该模块发生了改变\",{\"1\":{\"116\":1}}],[\"由于\",{\"1\":{\"107\":2,\"135\":1,\"173\":1,\"185\":1}}],[\"由于框架特殊性开发环境下无法使用\",{\"1\":{\"50\":1}}],[\"由于9\",{\"1\":{\"50\":1}}],[\"客户端路由方案\",{\"1\":{\"172\":1}}],[\"客户端当前时间\",{\"1\":{\"104\":1}}],[\"客户端与服务器之间通信产生的一种缓存\",{\"1\":{\"91\":1}}],[\"停留缓存时间\",{\"1\":{\"104\":4}}],[\"停止本地服务器并返回其状态\",{\"1\":{\"52\":1}}],[\"绝对时间\",{\"1\":{\"103\":1}}],[\"判断强缓存是否新鲜的公式则为\",{\"1\":{\"102\":1}}],[\"保存订阅该\",{\"1\":{\"179\":1}}],[\"保存\",{\"1\":{\"179\":1}}],[\"保证页面正常运行\",{\"1\":{\"132\":1}}],[\"保质期\",{\"1\":{\"102\":1}}],[\"保留\",{\"1\":{\"26\":1}}],[\"保留未更新文件的hardlink\",{\"1\":{\"2\":1}}],[\"起始时间从浏览器获取并缓存该资源的时间算\",{\"1\":{\"101\":1}}],[\"仅需要声明一个\",{\"1\":{\"199\":1}}],[\"仅需掌握\",{\"1\":{\"175\":1}}],[\"仅细节上有区别\",{\"1\":{\"181\":1}}],[\"仅仅是\",{\"1\":{\"176\":1}}],[\"仅仅是库\",{\"1\":{\"172\":1}}],[\"仅在必要时使用\",{\"1\":{\"163\":1}}],[\"仅在代理服务器中生效\",{\"1\":{\"100\":1}}],[\"仅是一个软链接\",{\"1\":{\"6\":1}}],[\"被改变的\",{\"1\":{\"176\":1}}],[\"被称为应用级框架的原因\",{\"1\":{\"185\":1}}],[\"被称为组件级框架\",{\"1\":{\"184\":1}}],[\"被称为\",{\"1\":{\"175\":1,\"179\":1}}],[\"被称为因变量\",{\"1\":{\"174\":1}}],[\"被称为自变量\",{\"1\":{\"174\":1}}],[\"被注册后\",{\"1\":{\"132\":1}}],[\"被注销或者浏览器关闭\",{\"1\":{\"132\":1}}],[\"被设置成\",{\"1\":{\"121\":1}}],[\"被浏览器强缓存的问题\",{\"1\":{\"115\":1}}],[\"被浏览器缓存的资源\",{\"1\":{\"100\":1}}],[\"被依赖项是被解析到其实际位置\",{\"1\":{\"7\":1}}],[\"同上\",{\"1\":{\"177\":2}}],[\"同样使用\",{\"1\":{\"180\":1}}],[\"同样会导致\",{\"1\":{\"116\":1}}],[\"同样的\",{\"1\":{\"98\":1}}],[\"同时传入\",{\"1\":{\"184\":1}}],[\"同时提供这两种编译方案\",{\"1\":{\"180\":1}}],[\"同时提供了访问本地文件系统和操作系统资源的能力\",{\"1\":{\"45\":1}}],[\"同时编辑逻辑和描述\",{\"1\":{\"173\":1}}],[\"同时还包括了可选项\",{\"1\":{\"134\":1}}],[\"同时当前端配置了\",{\"1\":{\"121\":1}}],[\"同时当设置了\",{\"1\":{\"96\":1}}],[\"同时出现时\",{\"1\":{\"96\":1}}],[\"同时减去该元素的值\",{\"1\":{\"79\":1}}],[\"同时\",{\"1\":{\"51\":1,\"153\":1}}],[\"同时可以综合参考其他模式\",{\"1\":{\"32\":1}}],[\"同时使用\",{\"1\":{\"26\":1}}],[\"同时运行多个子包命令脚本\",{\"1\":{\"17\":1}}],[\"状态\",{\"1\":{\"175\":1}}],[\"状态驱动\",{\"1\":{\"173\":1}}],[\"状态管理方案\",{\"1\":{\"172\":1}}],[\"状态码200\",{\"1\":{\"97\":1}}],[\"状态行\",{\"1\":{\"93\":1}}],[\"值为数字类型的\",{\"1\":{\"147\":1}}],[\"值附加在请求头中传给后端进行校验\",{\"1\":{\"134\":1}}],[\"值和名的形式\",{\"1\":{\"134\":1}}],[\"值和弱\",{\"1\":{\"108\":1}}],[\"值来命名输出的文件\",{\"1\":{\"116\":1}}],[\"值会在字段值最开始处附加\",{\"1\":{\"108\":1}}],[\"值不完全相同\",{\"1\":{\"108\":1}}],[\"值完全相同\",{\"1\":{\"108\":1}}],[\"值两种类型\",{\"1\":{\"108\":1}}],[\"值又分为强\",{\"1\":{\"108\":1}}],[\"值都应该是唯一的\",{\"1\":{\"108\":1}}],[\"值的生成方式并没有统一的规定\",{\"1\":{\"108\":1}}],[\"值的改变\",{\"1\":{\"108\":1}}],[\"值也会随之改变\",{\"1\":{\"108\":2}}],[\"值作为\",{\"1\":{\"107\":1}}],[\"值与\",{\"1\":{\"98\":1,\"107\":1}}],[\"值\",{\"1\":{\"97\":1,\"98\":1,\"104\":2,\"107\":2,\"108\":7}}],[\"值后\",{\"1\":{\"97\":1,\"98\":1}}],[\"值时询问器会跳过当前问题\",{\"1\":{\"26\":2}}],[\"标签编译成树型结构的数据对象\",{\"1\":{\"202\":1}}],[\"标签的方式来修改资源的请求首部\",{\"1\":{\"96\":1}}],[\"标识\",{\"1\":{\"115\":1}}],[\"标志为\",{\"1\":{\"48\":1}}],[\"标志重置为false\",{\"1\":{\"46\":1}}],[\"标志被设置为\",{\"1\":{\"46\":1}}],[\"标志将命令限定于子集\",{\"1\":{\"11\":1}}],[\"秒就失效的情况下\",{\"1\":{\"115\":1}}],[\"秒\",{\"1\":{\"96\":1}}],[\"命中缓存的资源都是随着页面渲染而加载的\",{\"1\":{\"120\":1}}],[\"命名\",{\"1\":{\"115\":1}}],[\"命即中了强缓存\",{\"1\":{\"95\":1}}],[\"命令式代码通常更容易进行性能优化\",{\"1\":{\"200\":1}}],[\"命令式框架一大特点就是关注过程\",{\"1\":{\"199\":1}}],[\"命令式和声明式\",{\"0\":{\"199\":1}}],[\"命令式或声明式\",{\"1\":{\"198\":1}}],[\"命令查看更多选项\",{\"1\":{\"166\":1}}],[\"命令中\",{\"1\":{\"154\":1,\"155\":1}}],[\"命令即可进行打包\",{\"1\":{\"154\":1}}],[\"命令的一个选项\",{\"1\":{\"151\":1}}],[\"命令读取并应用到测试运行中\",{\"1\":{\"150\":1}}],[\"命令定义看起\",{\"1\":{\"148\":1}}],[\"命令进行选择\",{\"1\":{\"26\":1}}],[\"命令进入先进入\",{\"1\":{\"15\":1}}],[\"命令了\",{\"1\":{\"25\":1}}],[\"命令会运行\",{\"1\":{\"150\":1}}],[\"命令会在全局\",{\"1\":{\"25\":1}}],[\"命令会用以下形式交由\",{\"1\":{\"24\":1}}],[\"命令会将包安装在项目根目录下的\",{\"1\":{\"3\":1}}],[\"命令启动项目\",{\"1\":{\"24\":1}}],[\"命令创建一个新项目\",{\"1\":{\"24\":1}}],[\"命令\",{\"0\":{\"24\":1},\"1\":{\"24\":1,\"25\":1,\"148\":3,\"149\":3,\"156\":1,\"157\":1}}],[\"命令行交互会提示用户输入项目名\",{\"1\":{\"26\":1}}],[\"命令行\",{\"1\":{\"24\":1}}],[\"命令行参数解析\",{\"1\":{\"23\":1}}],[\"命令行打包并指定格式\",{\"1\":{\"17\":1}}],[\"命令可以过滤出符合条件的包\",{\"1\":{\"10\":1}}],[\"命令使用方法很相似\",{\"1\":{\"3\":1}}],[\"过期前浏览器可以直接从浏览器缓中读取数据\",{\"1\":{\"95\":1}}],[\"过滤指定格式的警告\",{\"1\":{\"48\":1}}],[\"过滤\",{\"1\":{\"48\":1}}],[\"部署等功能的前端框架\",{\"1\":{\"172\":1}}],[\"部署在\",{\"1\":{\"17\":1}}],[\"部分的注释\",{\"1\":{\"157\":1}}],[\"部分\",{\"1\":{\"93\":1}}],[\"响应式基础\",{\"0\":{\"227\":1}}],[\"响应式布局\",{\"1\":{\"210\":1}}],[\"响应指定事件时要调用的函数\",{\"1\":{\"142\":1}}],[\"响应首部\",{\"1\":{\"104\":2}}],[\"响应使用期\",{\"1\":{\"104\":4}}],[\"响应资源过期\",{\"1\":{\"95\":1}}],[\"响应\",{\"1\":{\"93\":1}}],[\"响应报头中都包含了与强缓存有关的首部字段\",{\"1\":{\"100\":1}}],[\"响应报头用到\",{\"1\":{\"93\":1}}],[\"响应报头\",{\"1\":{\"93\":1}}],[\"响应报头和响应正文\",{\"1\":{\"93\":1}}],[\"响应部分的响应报文也由三部分组成\",{\"1\":{\"93\":1}}],[\"图片瀑布流布局实现原理\",{\"1\":{\"214\":1}}],[\"图片等资源保存下来\",{\"1\":{\"128\":1}}],[\"图片缓存\",{\"1\":{\"120\":1}}],[\"图片资源等采用强缓存\",{\"1\":{\"115\":1}}],[\"图片\",{\"1\":{\"93\":1}}],[\"图生图的ai工具\",{\"1\":{\"73\":1}}],[\"一名\",{\"1\":{\"206\":1}}],[\"一般在开发环境中使用\",{\"1\":{\"180\":1}}],[\"一般为\",{\"1\":{\"135\":1}}],[\"一般称其为\",{\"1\":{\"102\":1}}],[\"一种缓存机制\",{\"1\":{\"124\":1}}],[\"一个包含当前已注册的某种类型事件处理程序的数组\",{\"1\":{\"147\":1}}],[\"一个\",{\"1\":{\"116\":1,\"147\":1}}],[\"一个完整的\",{\"1\":{\"93\":1}}],[\"一直监听文件构建\",{\"1\":{\"25\":1}}],[\"本次自变量变化导致的元素变化\",{\"1\":{\"184\":1}}],[\"本质是\",{\"1\":{\"177\":1}}],[\"本质上也是自变量\",{\"1\":{\"175\":1}}],[\"本质上与逻辑存在耦合的部分\",{\"1\":{\"173\":1}}],[\"本质上属于服务端缓存\",{\"1\":{\"92\":1}}],[\"本库的\",{\"1\":{\"157\":1}}],[\"本库使用\",{\"1\":{\"150\":1}}],[\"本项目使用\",{\"1\":{\"154\":1}}],[\"本文将探索\",{\"1\":{\"140\":1}}],[\"本地开发服务器由\",{\"1\":{\"44\":1}}],[\"本地开发服务器\",{\"0\":{\"43\":1}}],[\"等高阶函数解决问题\",{\"1\":{\"223\":1}}],[\"等操作\",{\"1\":{\"155\":1}}],[\"等同于直接按\",{\"1\":{\"118\":2}}],[\"等资源经过像\",{\"1\":{\"115\":1}}],[\"等\",{\"1\":{\"92\":1,\"96\":1,\"108\":1,\"109\":1,\"134\":1,\"136\":1,\"153\":1,\"157\":1,\"166\":2,\"185\":1}}],[\"协商缓存的生效流程\",{\"0\":{\"106\":1}}],[\"协商缓存可以看作是强制缓存失效后\",{\"1\":{\"105\":1}}],[\"协商缓存有关的首部字段名\",{\"1\":{\"94\":1}}],[\"协商缓存\",{\"1\":{\"92\":1,\"94\":2}}],[\"协议进行通信\",{\"1\":{\"131\":1}}],[\"协议的默认客户端\",{\"1\":{\"50\":1}}],[\"协议\",{\"1\":{\"11\":1,\"93\":1}}],[\"减少无意义的遍历过程\",{\"1\":{\"185\":1}}],[\"减少\",{\"1\":{\"180\":1}}],[\"减少服务器压力\",{\"1\":{\"91\":1}}],[\"减少对原始数据源的访问次数\",{\"1\":{\"90\":1}}],[\"两部分组成\",{\"1\":{\"174\":1}}],[\"两种主流方案\",{\"1\":{\"173\":1}}],[\"两种事件处理器的联合类型\",{\"1\":{\"147\":1}}],[\"两者都需要新建所有\",{\"1\":{\"201\":1}}],[\"两者都会经常出现在响应首部中\",{\"1\":{\"96\":1}}],[\"两者的性能相同\",{\"1\":{\"200\":1}}],[\"两者的作用都表示告知\",{\"1\":{\"118\":1}}],[\"两者看上去都代表不缓存\",{\"1\":{\"96\":1}}],[\"两者相辅相成\",{\"1\":{\"91\":1,\"135\":1}}],[\"两个display\",{\"1\":{\"212\":1}}],[\"两个\",{\"1\":{\"116\":1}}],[\"两个指令在请求和响应中都可以使用\",{\"1\":{\"96\":1}}],[\"两个数组中\",{\"1\":{\"80\":1}}],[\"两个包都硬链接到一个\",{\"1\":{\"7\":1}}],[\"缓存策略\",{\"1\":{\"132\":1}}],[\"缓存网络请求\",{\"1\":{\"132\":1}}],[\"缓存静态资源\",{\"1\":{\"132\":2}}],[\"缓存是一个非常重要的概念\",{\"1\":{\"132\":1}}],[\"缓存是持久的\",{\"1\":{\"132\":1}}],[\"缓存是计算机系统中的一种技术\",{\"1\":{\"90\":1}}],[\"缓存存储优先级\",{\"0\":{\"128\":1}}],[\"缓存获取顺序\",{\"0\":{\"127\":1}}],[\"缓存中的强缓存优势\",{\"1\":{\"116\":1}}],[\"缓存方案\",{\"0\":{\"114\":1,\"115\":1}}],[\"缓存标识\",{\"0\":{\"107\":1}}],[\"缓存已更新\",{\"1\":{\"106\":2}}],[\"缓存未更新\",{\"1\":{\"106\":1}}],[\"缓存未命中\",{\"1\":{\"106\":1}}],[\"缓存命中\",{\"1\":{\"106\":1}}],[\"缓存使用期的计算便会受到影响\",{\"1\":{\"104\":1}}],[\"缓存使用期\",{\"1\":{\"102\":1,\"104\":2}}],[\"缓存新鲜度等于\",{\"1\":{\"103\":2}}],[\"缓存新鲜度和缓存使用期\",{\"1\":{\"102\":1}}],[\"缓存新鲜度\",{\"0\":{\"103\":1},\"1\":{\"102\":1,\"103\":1}}],[\"缓存新鲜度与使用期算法\",{\"0\":{\"102\":1}}],[\"缓存也会失效\",{\"1\":{\"101\":1}}],[\"缓存可以拆解为\",{\"1\":{\"94\":1}}],[\"缓存可以是硬件或软件实现的\",{\"1\":{\"90\":1}}],[\"缓存加速静态文件\",{\"1\":{\"92\":1}}],[\"缓存\",{\"0\":{\"93\":1,\"117\":1},\"1\":{\"91\":1,\"92\":1},\"2\":{\"112\":1,\"139\":1}}],[\"缓存和浏览器缓存的结合\",{\"1\":{\"91\":1}}],[\"缓存的方式\",{\"1\":{\"177\":1}}],[\"缓存的资源是有时效性的\",{\"1\":{\"132\":1}}],[\"缓存的规则可使用以下缓存方案\",{\"1\":{\"115\":1}}],[\"缓存的新鲜度公式如下\",{\"1\":{\"103\":1}}],[\"缓存的重点在于访问速度快\",{\"1\":{\"90\":1}}],[\"缓存的使用可以显著提高系统性能\",{\"1\":{\"90\":1}}],[\"缓存的合理使用可提升网页性能\",{\"1\":{\"89\":1}}],[\"缓存等\",{\"1\":{\"90\":1}}],[\"缓存通常位于数据访问路径的中间\",{\"1\":{\"90\":1}}],[\"前提\",{\"1\":{\"115\":1}}],[\"前言\",{\"0\":{\"89\":1}}],[\"前端内参\",{\"1\":{\"206\":1}}],[\"前端进阶\",{\"1\":{\"206\":1}}],[\"前端工程师的自检清单\",{\"1\":{\"206\":1}}],[\"前端面试每日\",{\"1\":{\"206\":1}}],[\"前端框架的实现原理\",{\"0\":{\"182\":1}}],[\"前端框架使用的技术\",{\"0\":{\"178\":1}}],[\"前端框架中\",{\"1\":{\"176\":1}}],[\"前端框架需要关注\",{\"1\":{\"176\":1}}],[\"前端框架分类依据\",{\"0\":{\"176\":1}}],[\"前端框架原理概览\",{\"0\":{\"171\":1}}],[\"前端获取到服务端登录接口返回的\",{\"1\":{\"134\":1}}],[\"前端存储的方式不受限于浏览器环境\",{\"1\":{\"134\":1}}],[\"前端手动存储\",{\"1\":{\"134\":1}}],[\"前端则不需要关心\",{\"1\":{\"134\":1}}],[\"前端将数据发送给服务端进行验证\",{\"1\":{\"134\":1}}],[\"前端应用中的\",{\"0\":{\"115\":1}}],[\"前端接触到的为\",{\"1\":{\"93\":1}}],[\"前端会使用\",{\"1\":{\"92\":1}}],[\"前端有哪此缓存\",{\"0\":{\"92\":1}}],[\"前端缓存技术与方案解析\",{\"1\":{\"110\":1,\"137\":1}}],[\"前端缓存可以直接看作是\",{\"1\":{\"91\":1}}],[\"前端缓存与技术方案\",{\"0\":{\"88\":1,\"113\":1}}],[\"前端\",{\"1\":{\"74\":1,\"206\":2}}],[\"前端精读周刊\",{\"1\":{\"69\":1}}],[\"前端编程导航\",{\"1\":{\"68\":1}}],[\"前端站点\",{\"0\":{\"67\":1}}],[\"前端架开发核心知识进阶\",{\"1\":{\"64\":1}}],[\"前端架构师\",{\"1\":{\"64\":1}}],[\"前端跨界开发指南\",{\"1\":{\"64\":1}}],[\"前端脚手架\",{\"0\":{\"20\":1}}],[\"算法\",{\"2\":{\"87\":1}}],[\"算法简介\",{\"0\":{\"76\":1}}],[\"力扣\",{\"1\":{\"86\":1}}],[\"滑动窗口详解\",{\"1\":{\"86\":1}}],[\"滑动窗口算法\",{\"1\":{\"76\":1}}],[\"滑动窗口算法及应用\",{\"0\":{\"75\":1}}],[\"到\",{\"1\":{\"85\":1}}],[\"到底把哪个c包版本扁平化到node\",{\"1\":{\"5\":1}}],[\"且更易于理解和维护\",{\"1\":{\"161\":1}}],[\"且提交的分支名符合\",{\"1\":{\"156\":1}}],[\"且当前字符\",{\"1\":{\"85\":1}}],[\"且只更新变化的文件\",{\"1\":{\"2\":1}}],[\"左右10px\",{\"1\":{\"213\":1}}],[\"左指针向右移动一格\",{\"1\":{\"85\":1}}],[\"左端固定\",{\"1\":{\"76\":1}}],[\"左端滑动\",{\"1\":{\"76\":1}}],[\"初始值为\",{\"1\":{\"85\":1,\"174\":1}}],[\"初始化队列\",{\"1\":{\"79\":1}}],[\"初始化对象\",{\"1\":{\"77\":1}}],[\"初始化窗口函数\",{\"1\":{\"51\":1}}],[\"初始化窗口\",{\"0\":{\"51\":1},\"1\":{\"50\":1}}],[\"初始化\",{\"1\":{\"13\":1,\"165\":1}}],[\"右指针\",{\"1\":{\"85\":2}}],[\"右端滑动\",{\"1\":{\"76\":1}}],[\"右端固定\",{\"1\":{\"76\":1}}],[\"表示打包成\",{\"1\":{\"154\":3}}],[\"表示对\",{\"1\":{\"152\":1}}],[\"表示编译器不会将编译后的\",{\"1\":{\"151\":1}}],[\"表示一个处理所有事件类型的处理函数列表\",{\"1\":{\"147\":1}}],[\"表示一个处理\",{\"1\":{\"147\":1}}],[\"表示一个键为字符串类型\",{\"1\":{\"147\":1}}],[\"表示为二进制数\",{\"1\":{\"145\":1}}],[\"表示所有事件\",{\"1\":{\"142\":1}}],[\"表示该\",{\"1\":{\"136\":1}}],[\"表示该资源将在指定时间之后过期\",{\"1\":{\"95\":1}}],[\"表示资源的唯一标识符\",{\"1\":{\"107\":1}}],[\"表示资源的最后修改时间\",{\"1\":{\"107\":1}}],[\"表示资源在浏览器上已经缓存的时间\",{\"1\":{\"104\":1}}],[\"表示资源在缓存代理服务器中存贮的时长\",{\"1\":{\"104\":1}}],[\"表示创建报文的日期时间\",{\"1\":{\"103\":1}}],[\"表示的时间单位长度\",{\"1\":{\"103\":1}}],[\"表示客户端可以缓存资源\",{\"1\":{\"96\":1}}],[\"表示告知\",{\"1\":{\"96\":1}}],[\"表示报文主体的对象类型\",{\"1\":{\"93\":1}}],[\"表示\",{\"1\":{\"84\":1}}],[\"表示校验通过\",{\"1\":{\"26\":1}}],[\"找出差异的性能消耗\",{\"1\":{\"200\":1}}],[\"找出其中不含有重复字符的\",{\"1\":{\"83\":1}}],[\"找到变化的元素并更新它\",{\"1\":{\"201\":1}}],[\"找到\",{\"1\":{\"184\":1}}],[\"找到便从磁盘中获取\",{\"1\":{\"127\":1}}],[\"找到的最长的子串的长度即为答案\",{\"1\":{\"84\":1}}],[\"找自已了解或感兴趣的领域\",{\"1\":{\"61\":1}}],[\"数组长度\",{\"1\":{\"145\":1}}],[\"数组中当前位置的元素相等\",{\"1\":{\"82\":1}}],[\"数据类型\",{\"1\":{\"217\":1}}],[\"数据流方案\",{\"1\":{\"172\":1}}],[\"数据中对应的\",{\"1\":{\"136\":1}}],[\"数据结构与算法\",{\"1\":{\"64\":1}}],[\"长度为\",{\"1\":{\"82\":1}}],[\"长度最长的子数组的长度\",{\"1\":{\"80\":1}}],[\"遍历整个应用\",{\"1\":{\"185\":1}}],[\"遍历\",{\"1\":{\"82\":2}}],[\"计算机网络\",{\"1\":{\"206\":1}}],[\"计算机操作系统\",{\"1\":{\"206\":1}}],[\"计算出的\",{\"1\":{\"185\":1}}],[\"计算出\",{\"1\":{\"181\":1}}],[\"计算公式如下\",{\"1\":{\"104\":1}}],[\"计算以\",{\"1\":{\"82\":1}}],[\"计算以该位置开始的最长重复子数组的长度\",{\"1\":{\"82\":2}}],[\"计算它们相对位置相同的重复子数组即可\",{\"1\":{\"81\":1}}],[\"计算滑动窗口里所有数字的平均值\",{\"1\":{\"77\":1}}],[\"第一种思路\",{\"1\":{\"180\":1}}],[\"第一类为\",{\"1\":{\"81\":1}}],[\"第\",{\"1\":{\"85\":1,\"162\":1}}],[\"第二类为\",{\"1\":{\"81\":1}}],[\"第2版\",{\"1\":{\"64\":2}}],[\"枚举结束后\",{\"1\":{\"84\":1}}],[\"枚举子串的起始位置\",{\"1\":{\"84\":1}}],[\"枚举\",{\"1\":{\"81\":1}}],[\"公式\",{\"1\":{\"200\":1}}],[\"公共缓存服务器将直接忽略\",{\"1\":{\"96\":1}}],[\"公共的\",{\"1\":{\"80\":1}}],[\"公私有安全设定\",{\"1\":{\"13\":1}}],[\"声明式代码会比命令式代码多出找出差异的性能消耗\",{\"1\":{\"200\":1}}],[\"声明式代码的更新性能消耗\",{\"1\":{\"200\":1}}],[\"声明式代码的性能不如命令式代码\",{\"1\":{\"200\":1}}],[\"声明式框架更加关注结果\",{\"1\":{\"199\":1}}],[\"声明了窗口的长度为\",{\"1\":{\"79\":1}}],[\"声明的依赖基本保持一致\",{\"1\":{\"6\":1}}],[\"3+1\",{\"1\":{\"206\":1}}],[\"32\",{\"1\":{\"145\":1}}],[\"34\",{\"1\":{\"110\":1,\"137\":1}}],[\"3600\",{\"1\":{\"96\":1}}],[\"3\",{\"1\":{\"79\":7,\"179\":1,\"202\":1}}],[\"300\",{\"1\":{\"207\":1}}],[\"304\",{\"1\":{\"97\":1,\"106\":1}}],[\"30\",{\"1\":{\"71\":1,\"207\":1}}],[\"队列长度和当前和\",{\"1\":{\"79\":1}}],[\"思路\",{\"0\":{\"78\":1,\"81\":1,\"84\":1}}],[\"请求处理\",{\"1\":{\"132\":2}}],[\"请求重定向等\",{\"1\":{\"132\":1}}],[\"请求库时如果开启了以下配置\",{\"1\":{\"121\":1}}],[\"请求缓存\",{\"1\":{\"106\":2}}],[\"请求时\",{\"1\":{\"99\":1,\"100\":1}}],[\"请求首部发送给服务器验证该资源有没有过期\",{\"1\":{\"97\":1,\"98\":1}}],[\"请求\",{\"1\":{\"93\":1,\"121\":1}}],[\"请求报头用到\",{\"1\":{\"93\":1}}],[\"请求报头和响应报头都会用到\",{\"1\":{\"93\":1}}],[\"请求报头和\",{\"1\":{\"93\":1}}],[\"请求报头和请求正文\",{\"1\":{\"93\":1}}],[\"请求报文由三部分组成\",{\"1\":{\"93\":1}}],[\"请求行\",{\"1\":{\"93\":1}}],[\"请求是由\",{\"1\":{\"93\":1}}],[\"请求部分\",{\"1\":{\"93\":1}}],[\"请求通常是由像浏览器这样的接受方发起的\",{\"1\":{\"93\":1}}],[\"请计算并返回数据流中最后\",{\"1\":{\"77\":1}}],[\"请从下方选择\",{\"1\":{\"26\":1}}],[\"个\",{\"1\":{\"215\":1}}],[\"个传参\",{\"1\":{\"184\":1}}],[\"个字符是一个极长的无重复字符子串\",{\"1\":{\"85\":1}}],[\"个值的移动平均值\",{\"1\":{\"77\":1}}],[\"个优质\",{\"1\":{\"74\":1}}],[\"个人博客\",{\"0\":{\"69\":1}}],[\"花裤衩\",{\"1\":{\"74\":1}}],[\"收藏夹\",{\"1\":{\"74\":2}}],[\"收益是\",{\"1\":{\"29\":1}}],[\"创作平台\",{\"1\":{\"73\":1}}],[\"创建三角形的原理是什么\",{\"1\":{\"213\":1}}],[\"创建新的\",{\"1\":{\"201\":1}}],[\"创建第一个\",{\"1\":{\"168\":1}}],[\"创建数组副本\",{\"0\":{\"146\":1}}],[\"创建事件发射器\",{\"1\":{\"142\":1}}],[\"创建一个无边框窗口\",{\"1\":{\"51\":1}}],[\"创建别名\",{\"1\":{\"47\":1}}],[\"创建\",{\"1\":{\"44\":1}}],[\"创建项目模板\",{\"0\":{\"33\":1}}],[\"创建项目文件夹\",{\"1\":{\"27\":2}}],[\"创建项目的主要代码\",{\"1\":{\"27\":1}}],[\"创建项目\",{\"0\":{\"27\":1}}],[\"创建的项目目录名称\",{\"1\":{\"26\":1}}],[\"创建符号链接来构建嵌套的依赖关系图结构\",{\"1\":{\"7\":1}}],[\"贝塞尔曲线生成器\",{\"1\":{\"72\":1}}],[\"阴影\",{\"1\":{\"72\":1}}],[\"应设计为纯函数\",{\"1\":{\"174\":1}}],[\"应对复杂应用的状态管理\",{\"1\":{\"172\":1}}],[\"应该掌握css\",{\"1\":{\"72\":1}}],[\"应用级框架\",{\"1\":{\"176\":1}}],[\"应用复杂度不断提高\",{\"1\":{\"173\":1}}],[\"应用在移动端能够更好地满足用户对于快速\",{\"1\":{\"131\":1}}],[\"应用\",{\"0\":{\"213\":1,\"225\":1},\"1\":{\"131\":1,\"180\":2,\"217\":1}}],[\"应用一致\",{\"1\":{\"55\":1}}],[\"应用准备就绪时\",{\"1\":{\"50\":1}}],[\"应用程序自动更新的库\",{\"1\":{\"53\":1}}],[\"应用程序的主进程和渲染器进程之间进行通信\",{\"1\":{\"52\":1}}],[\"应用程序的主进程\",{\"1\":{\"51\":1}}],[\"应用程序的开发环境\",{\"1\":{\"42\":1}}],[\"应用程序中运行的\",{\"1\":{\"42\":1}}],[\"多列等高如何实现\",{\"1\":{\"213\":1}}],[\"多数时候\",{\"1\":{\"164\":2}}],[\"多语言代码转换器\",{\"1\":{\"70\":1}}],[\"多包相同编译\",{\"1\":{\"17\":1}}],[\"朴灵的博客\",{\"1\":{\"69\":1}}],[\"张鑫旭的个人主页\",{\"1\":{\"69\":1}}],[\"帮你理解最前沿\",{\"1\":{\"69\":1}}],[\"菜鸟工具\",{\"1\":{\"68\":1}}],[\"菜单\",{\"1\":{\"51\":1}}],[\"涵盖入门到精通\",{\"1\":{\"207\":1}}],[\"涵盖\",{\"1\":{\"67\":1}}],[\"教程\",{\"1\":{\"67\":1}}],[\"阮一峰的网络日志\",{\"1\":{\"69\":1}}],[\"阮一峰\",{\"1\":{\"66\":1}}],[\"曾探\",{\"1\":{\"64\":1}}],[\"学习框架时需要全局认知\",{\"1\":{\"198\":1}}],[\"学习\",{\"1\":{\"64\":1}}],[\"学习源码整体架构系列\",{\"1\":{\"63\":1}}],[\"福勒\",{\"1\":{\"64\":1}}],[\"马丁\",{\"1\":{\"64\":1}}],[\"阿拉文思\",{\"1\":{\"64\":1}}],[\"史文强\",{\"1\":{\"64\":1}}],[\"侯策\",{\"1\":{\"64\":3}}],[\"颜海镜\",{\"1\":{\"64\":1}}],[\"库来进行单元测试\",{\"1\":{\"150\":1}}],[\"库提供了一个强大的发布\",{\"1\":{\"141\":1}}],[\"库\",{\"1\":{\"135\":1}}],[\"库开发\",{\"1\":{\"64\":1}}],[\"库作为\",{\"1\":{\"25\":1}}],[\"周爱民\",{\"1\":{\"64\":1}}],[\"语句的灵活性使用其很难进行静态分析\",{\"1\":{\"180\":1}}],[\"语句仅是对\",{\"1\":{\"176\":1}}],[\"语言精髓与编程实践\",{\"1\":{\"64\":1}}],[\"语法和api\",{\"0\":{\"223\":1}}],[\"语法和编译\",{\"1\":{\"44\":1}}],[\"语法组合使用\",{\"1\":{\"173\":1}}],[\"语法糖\",{\"1\":{\"173\":1}}],[\"语法\",{\"1\":{\"173\":1,\"217\":1}}],[\"语法支持\",{\"1\":{\"47\":1}}],[\"李杨韬\",{\"1\":{\"64\":1}}],[\"斯科特\",{\"1\":{\"64\":1}}],[\"亚当\",{\"1\":{\"64\":1}}],[\"范德卡姆\",{\"1\":{\"64\":1}}],[\"丹\",{\"1\":{\"64\":1}}],[\"编写绝对优化的命令式代码\",{\"1\":{\"201\":1}}],[\"编写者设计的工具\",{\"1\":{\"73\":1}}],[\"编译为\",{\"1\":{\"180\":1,\"181\":1}}],[\"编译\",{\"1\":{\"180\":2}}],[\"编译后结果\",{\"1\":{\"173\":1}}],[\"编译后为\",{\"1\":{\"173\":1}}],[\"编译并运行\",{\"1\":{\"168\":1}}],[\"编译时的框架\",{\"1\":{\"202\":1}}],[\"编译时框架\",{\"1\":{\"202\":1}}],[\"编译时优化\",{\"1\":{\"180\":1}}],[\"编译时\",{\"1\":{\"164\":2,\"202\":1}}],[\"编译成字节码\",{\"1\":{\"162\":1}}],[\"编译器生成\",{\"1\":{\"162\":1}}],[\"编译器把\",{\"1\":{\"162\":1}}],[\"编译器在编译时需要将这个文件作为类型定义文件使用\",{\"1\":{\"153\":1}}],[\"编译器的输出\",{\"1\":{\"151\":2}}],[\"编译器\",{\"0\":{\"162\":1},\"1\":{\"148\":2}}],[\"编译阶段\",{\"1\":{\"14\":1}}],[\"编程自学之路\",{\"1\":{\"74\":1}}],[\"编程\",{\"1\":{\"64\":1}}],[\"霍春阳\",{\"1\":{\"64\":1}}],[\"卡颂\",{\"1\":{\"64\":1}}],[\"流程包括以下步骤\",{\"1\":{\"106\":1}}],[\"流行框架与库的源码分析与最简实现\",{\"1\":{\"63\":1}}],[\"流畅的命令行工具能快速启动脚手架\",{\"1\":{\"23\":1}}],[\"7k\",{\"1\":{\"63\":1}}],[\"查看完整的编译结果\",{\"1\":{\"184\":1}}],[\"查看删除\",{\"1\":{\"136\":1}}],[\"查看详细文档\",{\"1\":{\"24\":1}}],[\"查找两个数组中的最长重复子数组\",{\"1\":{\"82\":1}}],[\"查文档的方式理解源码\",{\"1\":{\"61\":1}}],[\"画思维导图\",{\"1\":{\"61\":1}}],[\"树立好的心理认知\",{\"1\":{\"61\":1}}],[\"读书笔记\",{\"0\":{\"64\":1},\"2\":{\"170\":1,\"187\":1,\"194\":1,\"197\":1,\"204\":1}}],[\"读源码\",{\"0\":{\"60\":1},\"2\":{\"159\":1}}],[\"读取速度快\",{\"1\":{\"124\":1}}],[\"读取了旧资源\",{\"1\":{\"115\":1}}],[\"读取\",{\"1\":{\"47\":1}}],[\"控制台打印信息等\",{\"1\":{\"174\":1}}],[\"控制台将看到一条日志\",{\"1\":{\"168\":1}}],[\"控制台报\",{\"1\":{\"57\":1}}],[\"控制台输出项目启动引导指示\",{\"1\":{\"27\":1}}],[\"删除\",{\"1\":{\"148\":1}}],[\"删除通配符处理程序\",{\"1\":{\"142\":1}}],[\"删除旧应用程序文件\",{\"1\":{\"54\":1}}],[\"删除目录\",{\"1\":{\"26\":1}}],[\"哈希验证其完整性\",{\"1\":{\"54\":1}}],[\"事件发布\",{\"1\":{\"225\":1}}],[\"事件发射器对象维护一个事件列表\",{\"1\":{\"141\":1}}],[\"事件发射器模式通常用于处理异步事件\",{\"1\":{\"141\":1}}],[\"事件发射器模式\",{\"1\":{\"141\":1}}],[\"事件发射器\",{\"1\":{\"141\":1}}],[\"事件传播的三个阶段是什么\",{\"1\":{\"224\":1}}],[\"事件和事件循环的关系\",{\"1\":{\"222\":1}}],[\"事件循环\",{\"1\":{\"217\":1}}],[\"事件管理库\",{\"1\":{\"158\":1}}],[\"事件管理对象\",{\"1\":{\"147\":1}}],[\"事件中触发自动化构建和测试\",{\"1\":{\"156\":1}}],[\"事件类型为\",{\"1\":{\"147\":1}}],[\"事件处理器\",{\"1\":{\"147\":1}}],[\"事件名称与已注册的处理函数之间的映射表\",{\"1\":{\"142\":1}}],[\"事件总线库\",{\"1\":{\"140\":1}}],[\"事件\",{\"1\":{\"54\":1}}],[\"热更新\",{\"0\":{\"54\":1}}],[\"向主窗口的渲染进程发送消息\",{\"1\":{\"53\":1}}],[\"每次更新都遍历应用\",{\"1\":{\"185\":1}}],[\"每次更新版本号时\",{\"1\":{\"108\":1}}],[\"每次调用\",{\"1\":{\"78\":1}}],[\"每次调用的时候都会往滑动窗口增加一个整数\",{\"1\":{\"77\":1}}],[\"每周为你提供高质量的关于小程序\",{\"1\":{\"69\":1}}],[\"每当一个渲染进程调用\",{\"1\":{\"52\":1}}],[\"每个\",{\"1\":{\"42\":1,\"226\":1}}],[\"每个项目都有一个名为\",{\"1\":{\"7\":1}}],[\"关键点\",{\"0\":{\"210\":1,\"217\":1}}],[\"关键与缓存有关的\",{\"1\":{\"93\":1}}],[\"关于浏览器方向的大厂面试题\",{\"1\":{\"206\":1}}],[\"关于\",{\"1\":{\"67\":1}}],[\"关于现代包管理器的深度思考\",{\"1\":{\"17\":1}}],[\"关闭发送消息的窗口\",{\"1\":{\"52\":1}}],[\"指向\",{\"1\":{\"217\":1,\"221\":1}}],[\"指\",{\"1\":{\"174\":1}}],[\"指在已经注册并激活的\",{\"1\":{\"132\":1}}],[\"指的是不完全匹配资源内容的\",{\"1\":{\"108\":1}}],[\"指的是完全匹配资源内容的\",{\"1\":{\"108\":1}}],[\"指令值包含了必选项\",{\"1\":{\"134\":1}}],[\"指令将被忽略\",{\"1\":{\"96\":1}}],[\"指令表示该资源只提供给客户端缓存\",{\"1\":{\"96\":1}}],[\"指令表示该资源可以被任何节点缓存\",{\"1\":{\"96\":1}}],[\"指令的值\",{\"1\":{\"96\":1}}],[\"指令后\",{\"1\":{\"96\":2}}],[\"指令给出了缓存过期的相对时间\",{\"1\":{\"96\":1}}],[\"指令间通过\",{\"1\":{\"96\":1}}],[\"指南和其他教育内容\",{\"1\":{\"74\":1}}],[\"指示应用程序是否应该使用系统标题栏\",{\"1\":{\"52\":1}}],[\"指定编译后的\",{\"1\":{\"166\":1}}],[\"指定编译输出目录的路径\",{\"1\":{\"166\":1}}],[\"指定版本为\",{\"1\":{\"156\":1}}],[\"指定运行环境为\",{\"1\":{\"156\":1}}],[\"指定要使用的模块系统\",{\"1\":{\"166\":1}}],[\"指定要使用的eslint配置\",{\"1\":{\"152\":1}}],[\"指定要包含的库文件的列表\",{\"1\":{\"166\":1}}],[\"指定要编译的文件或目录的路径\",{\"1\":{\"166\":1}}],[\"指定要应用的规则\",{\"1\":{\"152\":1}}],[\"指定全局变量\",{\"1\":{\"152\":1}}],[\"指定代码运行的环境\",{\"1\":{\"152\":1}}],[\"指定解析器的选项\",{\"1\":{\"152\":1}}],[\"指定解析器\",{\"1\":{\"152\":1}}],[\"指定eslint应该忽略的文件或目\",{\"1\":{\"152\":1}}],[\"指定了\",{\"1\":{\"152\":1}}],[\"指定一个或多个已有的eslint配置文件\",{\"1\":{\"152\":1}}],[\"指定一组任务按照顺序依次执行\",{\"1\":{\"149\":1}}],[\"指定测试文件的位置\",{\"1\":{\"150\":1}}],[\"指定测试文件的扩展名为\",{\"1\":{\"150\":1}}],[\"指定需要在测试运行前加载的模块\",{\"1\":{\"150\":1}}],[\"指定时间之后\",{\"1\":{\"101\":1}}],[\"指定位置超出了字符串的范围\",{\"1\":{\"85\":1}}],[\"指定哪些模块应该被视为外部依赖\",{\"1\":{\"47\":1}}],[\"指定\",{\"1\":{\"44\":1}}],[\"指定使用的插件\",{\"1\":{\"44\":1}}],[\"指定开发服务器的配置选项\",{\"1\":{\"44\":1}}],[\"指定构建相关的配置选项\",{\"1\":{\"44\":1}}],[\"指定项目的基础\",{\"1\":{\"44\":1}}],[\"指定项目的根目录路径\",{\"1\":{\"44\":2}}],[\"指定模块解析的配置选项\",{\"1\":{\"44\":1}}],[\"指定模板\",{\"1\":{\"27\":1}}],[\"指定当前的运行模式\",{\"1\":{\"44\":1}}],[\"指定的模板不在列表中\",{\"1\":{\"26\":1}}],[\"指定文件作为es模块语法加载\",{\"1\":{\"25\":1}}],[\"从范式上看\",{\"1\":{\"199\":1}}],[\"从关注\",{\"1\":{\"179\":1}}],[\"从该\",{\"1\":{\"179\":1}}],[\"从逻辑出发\",{\"1\":{\"173\":1}}],[\"从\",{\"1\":{\"173\":1}}],[\"从处理函数列表中移除它\",{\"1\":{\"142\":1}}],[\"从协商缓存到启发式缓存\",{\"0\":{\"105\":1}}],[\"从上文可总结出影响强缓存使用期的因素有\",{\"1\":{\"104\":1}}],[\"从夯实基础到突破瓶颈\",{\"1\":{\"64\":1}}],[\"从原理到实战\",{\"1\":{\"64\":1}}],[\"从同目录下的\",{\"1\":{\"52\":1}}],[\"从而可以在\",{\"1\":{\"154\":1}}],[\"从而可以实现离线缓存\",{\"1\":{\"132\":1}}],[\"从而减少\",{\"1\":{\"180\":1}}],[\"从而减少调试时间和代码错误\",{\"1\":{\"151\":1}}],[\"从而减少系统资源的占用和延迟\",{\"1\":{\"90\":1}}],[\"从而实现离线缓存和快速加载等功能\",{\"1\":{\"132\":1}}],[\"从而影响用户的体验\",{\"1\":{\"109\":1}}],[\"从而决定是否缓存该资源以及缓存多长时间\",{\"1\":{\"109\":1}}],[\"从而导致\",{\"1\":{\"108\":1}}],[\"从而导致缓存使用期超出缓存新鲜度范围\",{\"1\":{\"104\":1}}],[\"从而增加代码的安全性\",{\"1\":{\"47\":1}}],[\"从而提高页面加载速度和离线访问能力\",{\"1\":{\"132\":1}}],[\"从而提高页面加载速度\",{\"1\":{\"132\":1}}],[\"从而提高网页的性能和用户体验\",{\"1\":{\"132\":1}}],[\"从而提高了克隆速度和效率\",{\"1\":{\"31\":1}}],[\"从而提高应用程序的性能\",{\"1\":{\"25\":1}}],[\"从而提高项目的可维护性和可扩展性\",{\"1\":{\"22\":1}}],[\"从而确保项目结构和规范的一致性\",{\"1\":{\"22\":1}}],[\"从而节省时间和精力\",{\"1\":{\"22\":1}}],[\"从而加快项目启动的速度\",{\"1\":{\"22\":1}}],[\"从而进一步减少磁盘占用\",{\"1\":{\"3\":1}}],[\"就是为了提供面向用户的声明式接口\",{\"1\":{\"200\":1}}],[\"就是让运行时计算由编译器从源码解析得来的\",{\"1\":{\"162\":1}}],[\"就需要管理\",{\"1\":{\"175\":1}}],[\"就会开始接管网络请求\",{\"1\":{\"132\":1}}],[\"就会导致缓存失效的判断不准确\",{\"1\":{\"107\":2}}],[\"就会导致缓存判断不准确\",{\"1\":{\"107\":1}}],[\"就算\",{\"1\":{\"116\":1}}],[\"就可以认为这两个资源内容是一致的\",{\"1\":{\"108\":1}}],[\"就那种\",{\"1\":{\"51\":1}}],[\"就相当于个\",{\"1\":{\"51\":1}}],[\"就完成了一个脚手架的雏形\",{\"1\":{\"27\":1}}],[\"延迟两秒可以根据情况后续调快\",{\"1\":{\"51\":1}}],[\"启发式算法通常会根据资源的一些属性\",{\"1\":{\"109\":1}}],[\"启发式缓存并不是一种精确的缓存策略\",{\"1\":{\"109\":1}}],[\"启发式缓存\",{\"0\":{\"109\":1},\"1\":{\"109\":1}}],[\"启用\",{\"1\":{\"51\":1}}],[\"启动本地服务器并返回其状态\",{\"1\":{\"52\":1}}],[\"启动\",{\"0\":{\"40\":1}}],[\"启动命令行项目\",{\"0\":{\"25\":1}}],[\"透明\",{\"1\":{\"51\":1}}],[\"让用户选择重载或退出\",{\"1\":{\"51\":2}}],[\"让用户重新从列表选择\",{\"1\":{\"27\":1}}],[\"窗口会向右移动\",{\"1\":{\"76\":1}}],[\"窗口标题栏样式\",{\"1\":{\"51\":1}}],[\"窗口都有一个对应的渲染进程\",{\"1\":{\"42\":1}}],[\"还会执行\",{\"1\":{\"222\":1}}],[\"还能通过编译手段分析用户提供的内容\",{\"1\":{\"202\":1}}],[\"还拓展了许多新功能\",{\"1\":{\"185\":1}}],[\"还彻底改变了编写代码的方式\",{\"1\":{\"161\":1}}],[\"还具有丰富的功能\",{\"1\":{\"150\":1}}],[\"还有以下区别\",{\"1\":{\"180\":1}}],[\"还有以下几种方式可复制数组\",{\"1\":{\"146\":1}}],[\"还有许多功能是\",{\"1\":{\"172\":1}}],[\"还有其它功能\",{\"1\":{\"172\":1}}],[\"还有三个方法\",{\"1\":{\"53\":1}}],[\"还没有被激活\",{\"1\":{\"132\":1}}],[\"还没有开始移动\",{\"1\":{\"85\":1}}],[\"还包括\",{\"1\":{\"100\":1}}],[\"还可在请求首部中被使用\",{\"1\":{\"96\":1}}],[\"还设置了窗口菜单和\",{\"1\":{\"51\":1}}],[\"还是框架\",{\"1\":{\"172\":1}}],[\"还是命中了缓存\",{\"0\":{\"120\":1}}],[\"还是\",{\"1\":{\"48\":1}}],[\"类是一个事件发射器的实现\",{\"1\":{\"141\":1}}],[\"类型是如何绑定的\",{\"1\":{\"164\":1}}],[\"类型系统特性\",{\"1\":{\"164\":1}}],[\"类型系统有两种\",{\"1\":{\"163\":1}}],[\"类型系统\",{\"0\":{\"163\":1},\"1\":{\"163\":1}}],[\"类型只在类型检查\",{\"1\":{\"162\":1}}],[\"类型检查器为程序分配类型时使用的一系列规则\",{\"1\":{\"163\":1}}],[\"类型检查器检查\",{\"1\":{\"162\":1}}],[\"类型检查器\",{\"1\":{\"162\":1}}],[\"类型检测\",{\"0\":{\"151\":1}}],[\"类型安全\",{\"1\":{\"161\":2}}],[\"类型定义文件的路径\",{\"1\":{\"153\":1}}],[\"类型事件的处理函数列表\",{\"1\":{\"147\":1}}],[\"类型中所有属性值的联合类型\",{\"1\":{\"147\":1}}],[\"类型中的某个属性名称\",{\"1\":{\"147\":1}}],[\"类型\",{\"0\":{\"147\":1},\"1\":{\"109\":1,\"147\":1}}],[\"类比食品保质期\",{\"1\":{\"102\":1}}],[\"类\",{\"1\":{\"51\":1,\"77\":1,\"173\":1}}],[\"类似\",{\"1\":{\"47\":1,\"183\":1}}],[\"已有处理函数\",{\"1\":{\"142\":1}}],[\"已经更新\",{\"1\":{\"132\":1}}],[\"已安装\",{\"1\":{\"50\":1}}],[\"已存在则先删除其下非\",{\"1\":{\"27\":1}}],[\"属性\",{\"1\":{\"153\":1,\"175\":1}}],[\"属性由\",{\"1\":{\"48\":1}}],[\"属于应用级框架\",{\"1\":{\"179\":1}}],[\"属于持久性缓存\",{\"1\":{\"135\":1}}],[\"属于通用首部字段\",{\"1\":{\"96\":1}}],[\"属于实体首部字段\",{\"1\":{\"95\":1}}],[\"属于\",{\"1\":{\"29\":1}}],[\"确定两个问题\",{\"1\":{\"172\":1}}],[\"确定包含定位源码最小可运行代码需要的内容\",{\"1\":{\"61\":1}}],[\"确定应用程序是使用\",{\"1\":{\"48\":1}}],[\"确保更新过程的稳定性和可靠性\",{\"1\":{\"132\":1}}],[\"确保在\",{\"1\":{\"48\":1}}],[\"确保在重新启动之前正确终止\",{\"1\":{\"46\":1}}],[\"确保\",{\"1\":{\"46\":1,\"61\":1}}],[\"确保某包依赖的包发生\",{\"1\":{\"13\":1}}],[\"终止\",{\"1\":{\"48\":1}}],[\"日志信息\",{\"1\":{\"48\":1}}],[\"错误处理\",{\"1\":{\"132\":2}}],[\"错误\",{\"1\":{\"48\":1}}],[\"端口\",{\"1\":{\"48\":1}}],[\"参数表示解析\",{\"1\":{\"157\":1}}],[\"参数表示以安静模式运行\",{\"1\":{\"157\":1}}],[\"参数表示启用调试模式\",{\"1\":{\"48\":1}}],[\"参数用于指定要计算压缩大小的文件路径模式\",{\"1\":{\"156\":1}}],[\"参数用于指定打包的格式\",{\"1\":{\"154\":1}}],[\"参数\",{\"1\":{\"154\":1,\"157\":2,\"225\":1}}],[\"参数指定对应的作用域\",{\"1\":{\"132\":1}}],[\"参数是\",{\"1\":{\"132\":1}}],[\"参考\",{\"0\":{\"17\":1,\"36\":1,\"63\":1,\"74\":1,\"86\":1,\"110\":1,\"137\":1,\"215\":1,\"226\":1}}],[\"插件下的某一类配置对象的引用\",{\"1\":{\"152\":1}}],[\"插件打包成独立文件\",{\"1\":{\"116\":1}}],[\"插件进行公共模块的提取\",{\"1\":{\"116\":1}}],[\"插件\",{\"1\":{\"47\":1}}],[\"插件来将其转换为\",{\"1\":{\"47\":1}}],[\"自测\",{\"1\":{\"207\":1}}],[\"自行操作\",{\"1\":{\"177\":1}}],[\"自变量发生变化后\",{\"1\":{\"180\":1}}],[\"自变量到\",{\"1\":{\"176\":1}}],[\"自变量与组件的以应关系\",{\"1\":{\"184\":1}}],[\"自变量与元素的对应关系\",{\"1\":{\"183\":1}}],[\"自变量与应用的对应关系\",{\"1\":{\"179\":1}}],[\"自变量与\",{\"1\":{\"176\":2,\"180\":1}}],[\"自变量与因变量\",{\"1\":{\"174\":1,\"175\":1,\"177\":1}}],[\"自变量通过直接或间接的方式改变\",{\"1\":{\"176\":1}}],[\"自变量分类\",{\"1\":{\"175\":1}}],[\"自变量变化到\",{\"1\":{\"179\":1,\"184\":1}}],[\"自变量变化\",{\"1\":{\"174\":2,\"184\":1}}],[\"自变量变化导致的副作用\",{\"1\":{\"174\":1}}],[\"自变量变化会导致\",{\"1\":{\"174\":1}}],[\"自变量普遍由\",{\"1\":{\"174\":1}}],[\"自动推导\",{\"1\":{\"163\":1}}],[\"自动生成\",{\"1\":{\"157\":1}}],[\"自动检测哪些包不再被使用\",{\"1\":{\"3\":1}}],[\"自定义项目图标\",{\"0\":{\"57\":1}}],[\"自\",{\"1\":{\"47\":1}}],[\"混淆\",{\"1\":{\"180\":1}}],[\"混淆整个代码库\",{\"1\":{\"47\":1}}],[\"混淆代码\",{\"1\":{\"47\":1}}],[\"生产环境中使用\",{\"1\":{\"180\":1}}],[\"生产环境下用\",{\"1\":{\"47\":1}}],[\"生产环境下压缩代码\",{\"1\":{\"47\":1}}],[\"生命周期执行时机都有所区别\",{\"1\":{\"175\":1}}],[\"生命周期与缓存\",{\"1\":{\"132\":1}}],[\"生成组件对应的\",{\"1\":{\"184\":1}}],[\"生成默认配置的\",{\"1\":{\"167\":1}}],[\"生成\",{\"1\":{\"166\":1}}],[\"生成的字节码\",{\"1\":{\"162\":1}}],[\"生成一个唯一的字符串作为\",{\"1\":{\"108\":1}}],[\"生成器\",{\"1\":{\"72\":1,\"217\":1}}],[\"生成主流框架基础模板的工具\",{\"1\":{\"29\":1}}],[\"生成构建产物\",{\"1\":{\"14\":1}}],[\"生成方式\",{\"1\":{\"13\":1}}],[\"非\",{\"1\":{\"128\":1}}],[\"非生产环境下生成\",{\"1\":{\"47\":1}}],[\"非扁平的包结构\",{\"1\":{\"2\":1}}],[\"结论\",{\"1\":{\"200\":1}}],[\"结果\",{\"1\":{\"199\":1}}],[\"结尾的文件都会被作为测试文件运行\",{\"1\":{\"150\":1}}],[\"结尾的文件\",{\"1\":{\"47\":1}}],[\"结构跟传统\",{\"1\":{\"55\":1}}],[\"结构\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"进阶问题列表\",{\"1\":{\"226\":1}}],[\"进行代码转换和压缩\",{\"1\":{\"47\":2}}],[\"进程通信\",{\"0\":{\"52\":1}}],[\"进程崩溃或被杀死时警告\",{\"1\":{\"51\":1}}],[\"进程间通讯\",{\"1\":{\"51\":1}}],[\"进程关闭时完全关闭\",{\"1\":{\"48\":1}}],[\"进程关闭时终止\",{\"1\":{\"48\":1}}],[\"进程关闭时\",{\"1\":{\"48\":1}}],[\"进程关闭事件\",{\"1\":{\"48\":1}}],[\"进程输出中的无用信息\",{\"1\":{\"48\":1}}],[\"进程的标准输出和标准错误输出\",{\"1\":{\"48\":1}}],[\"进程在检测到文件更改事件时自动重启\",{\"1\":{\"46\":1}}],[\"进程对象已存在\",{\"1\":{\"46\":1}}],[\"进程\",{\"0\":{\"48\":1},\"1\":{\"46\":6,\"48\":2}}],[\"进程时\",{\"1\":{\"46\":1}}],[\"重复以上两个步骤\",{\"1\":{\"184\":1}}],[\"重置依赖\",{\"1\":{\"179\":1}}],[\"重置命令行文案\",{\"1\":{\"26\":1}}],[\"重构\",{\"1\":{\"64\":1}}],[\"重新构建过程中发生错误时\",{\"1\":{\"46\":1}}],[\"时间切片\",{\"1\":{\"185\":1}}],[\"时比\",{\"1\":{\"183\":1}}],[\"时可跳过静态部分\",{\"1\":{\"180\":1}}],[\"时需要进行充分的测试和验证\",{\"1\":{\"132\":1}}],[\"时需要注意错误处理的兼容性\",{\"1\":{\"132\":1}}],[\"时需要注意请求处理逻辑的兼容性\",{\"1\":{\"132\":1}}],[\"时需要注意缓存策略的兼容性\",{\"1\":{\"132\":1}}],[\"时就不能为\",{\"1\":{\"121\":1}}],[\"时钟不同步问题\",{\"1\":{\"107\":1}}],[\"时这个处理器就会被调用\",{\"1\":{\"52\":1}}],[\"时调用\",{\"1\":{\"48\":1}}],[\"时\",{\"1\":{\"46\":1,\"121\":1,\"175\":1,\"180\":2}}],[\"krausejs\",{\"1\":{\"181\":1}}],[\"krausest\",{\"1\":{\"181\":1}}],[\"key\",{\"1\":{\"147\":12,\"173\":1}}],[\"keyof\",{\"1\":{\"147\":14}}],[\"keys\",{\"1\":{\"47\":1}}],[\"kill\",{\"1\":{\"46\":1}}],[\"kolorist\",{\"1\":{\"23\":1,\"25\":1,\"26\":2}}],[\"默认为\",{\"1\":{\"166\":5}}],[\"默认使用\",{\"1\":{\"116\":1}}],[\"默认情况下\",{\"1\":{\"46\":1,\"132\":1,\"153\":1,\"154\":1}}],[\"默认值\",{\"1\":{\"26\":1}}],[\"检验自己是否真的熟悉javascript\",{\"1\":{\"226\":1}}],[\"检查代码是否符合类型安全要求的特殊程序\",{\"1\":{\"162\":1}}],[\"检查请求报头可以发现\",{\"1\":{\"118\":1}}],[\"检查是否有更新\",{\"1\":{\"53\":1}}],[\"检查更新\",{\"0\":{\"53\":1}}],[\"检查更新并显示对话框\",{\"1\":{\"52\":1}}],[\"检查\",{\"1\":{\"48\":1,\"148\":3}}],[\"检查项目名是否合法\",{\"1\":{\"26\":1}}],[\"检测到更改后完成重建代码时\",{\"1\":{\"46\":1}}],[\"输出性能更高的代码\",{\"1\":{\"180\":1}}],[\"输出变更的文件名日志信息\",{\"1\":{\"46\":1}}],[\"输出项目启动引导\",{\"1\":{\"27\":1}}],[\"监听\",{\"1\":{\"143\":1}}],[\"监听所有事件\",{\"1\":{\"143\":1}}],[\"监听一个事件\",{\"1\":{\"143\":1}}],[\"监听文件变更\",{\"1\":{\"46\":1}}],[\"监听文件变化\",{\"0\":{\"46\":1}}],[\"监视对主进程代码所做的更改\",{\"1\":{\"46\":1}}],[\"再全量创建新的\",{\"1\":{\"201\":1}}],[\"再深入到值层面\",{\"1\":{\"161\":1}}],[\"再通过前端存储方法将数据持久化缓存起来\",{\"1\":{\"134\":1}}],[\"再重新向服务器发送请求\",{\"1\":{\"119\":1}}],[\"再在最小\",{\"1\":{\"61\":1}}],[\"再启动一个新的\",{\"1\":{\"46\":1}}],[\"再次执行\",{\"1\":{\"40\":1}}],[\"再次校验用户输入的项目名\",{\"1\":{\"26\":1}}],[\"杀掉当前运行的\",{\"1\":{\"46\":1}}],[\"负责管理和协调应用程序的所有窗口和渲染进程\",{\"1\":{\"45\":1}}],[\"定义组件内部\",{\"1\":{\"177\":2}}],[\"定义组件内部的自变量\",{\"1\":{\"177\":1}}],[\"定义步骤\",{\"1\":{\"156\":1}}],[\"定义名为\",{\"1\":{\"156\":2}}],[\"定义了模块的导出方式\",{\"1\":{\"153\":1}}],[\"定义了源代码文件的入口\",{\"1\":{\"153\":1}}],[\"定义了\",{\"1\":{\"153\":5}}],[\"定义一个名为\",{\"1\":{\"156\":2}}],[\"定义一个通用的事件处理函数类型\",{\"1\":{\"147\":1}}],[\"定义一些全局变量\",{\"1\":{\"44\":1}}],[\"定义基础类型\",{\"1\":{\"147\":1}}],[\"定义在\",{\"1\":{\"24\":1}}],[\"分类\",{\"1\":{\"177\":1}}],[\"分类型进行告警操作\",{\"1\":{\"51\":1}}],[\"分析它们的技术特点与实现原理\",{\"1\":{\"172\":1}}],[\"分支上进行\",{\"1\":{\"156\":1}}],[\"分别有哪些优缺点\",{\"1\":{\"220\":1}}],[\"分别是\",{\"1\":{\"116\":1}}],[\"分别代表浏览器缓存收到响应和发起请求的本地时间\",{\"1\":{\"104\":1}}],[\"分别支持\",{\"1\":{\"44\":1}}],[\"分隔\",{\"1\":{\"96\":1}}],[\"分隔的键值对组成\",{\"1\":{\"93\":1}}],[\"分为两部分\",{\"1\":{\"5\":1}}],[\"目标目录\",{\"1\":{\"166\":1}}],[\"目标环境\",{\"1\":{\"44\":2}}],[\"目录和测试文件等\",{\"1\":{\"153\":1}}],[\"目录及\",{\"1\":{\"25\":1}}],[\"目录用于存储依赖的\",{\"1\":{\"17\":1}}],[\"目录\",{\"1\":{\"5\":1,\"13\":1,\"26\":1,\"148\":1}}],[\"目录中创建一个指向全局包的符号链接\",{\"1\":{\"25\":1}}],[\"目录中创建一个指向本地包的符号链接\",{\"1\":{\"25\":1}}],[\"目录中下载该包\",{\"1\":{\"7\":1}}],[\"目录中\",{\"1\":{\"3\":1,\"7\":3,\"24\":1}}],[\"目录下的测试文件\",{\"1\":{\"150\":1}}],[\"目录下的\",{\"1\":{\"47\":1,\"148\":2}}],[\"目录下\",{\"1\":{\"2\":1,\"25\":1,\"156\":1}}],[\"来引用当前项目的版本号\",{\"1\":{\"155\":1}}],[\"来实现离线缓存和网络请求拦截\",{\"1\":{\"132\":1}}],[\"来指定允许访问的域名\",{\"1\":{\"121\":1}}],[\"来估算过期时间\",{\"1\":{\"109\":1}}],[\"来代替\",{\"1\":{\"44\":1}}],[\"来获取\",{\"1\":{\"44\":1}}],[\"来作包的版本管理\",{\"1\":{\"12\":1}}],[\"存在协商缓存触发条件的\",{\"1\":{\"115\":1}}],[\"存在时\",{\"1\":{\"103\":1}}],[\"存在兼容问题\",{\"1\":{\"17\":1}}],[\"存储所有事件类型及其对应的处理函数的\",{\"1\":{\"142\":1}}],[\"存储系统\",{\"1\":{\"135\":1}}],[\"存储对象时如果没有提前采用序列化方法\",{\"1\":{\"135\":1}}],[\"存储的数据最终都会转化成字符串类型\",{\"1\":{\"135\":1}}],[\"存储的缓存数据在网页关闭后会自动释放\",{\"1\":{\"135\":1}}],[\"存储\",{\"1\":{\"135\":1}}],[\"存储方案web\",{\"1\":{\"135\":1}}],[\"存储方案\",{\"1\":{\"135\":2}}],[\"存储型缓存\",{\"0\":{\"133\":1},\"1\":{\"92\":1}}],[\"存储一些全局配置信息\",{\"1\":{\"44\":1}}],[\"艺术字体\",{\"1\":{\"41\":1}}],[\"带着具体的目标去看源码\",{\"1\":{\"61\":1}}],[\"带\",{\"1\":{\"40\":1}}],[\"报头为允许的值\",{\"1\":{\"121\":1}}],[\"报头是由一系列中间用冒号\",{\"1\":{\"93\":1}}],[\"报文\",{\"1\":{\"93\":1}}],[\"报\",{\"1\":{\"40\":1}}],[\"首屏速度\",{\"1\":{\"217\":1}}],[\"首屏渲染提速\",{\"1\":{\"172\":1}}],[\"首次加载时慢于\",{\"1\":{\"180\":1}}],[\"首次执行时\",{\"1\":{\"184\":1}}],[\"首次执行\",{\"1\":{\"40\":1,\"179\":1}}],[\"首部\",{\"1\":{\"104\":1}}],[\"首部字段来判断它们是否需要重新请求\",{\"1\":{\"125\":1}}],[\"首部字段\",{\"1\":{\"103\":1,\"134\":1}}],[\"首部字段用于代表资源的唯一性标识\",{\"1\":{\"98\":1}}],[\"首部字段又分为四种类型\",{\"1\":{\"93\":1}}],[\"首部字段值为\",{\"1\":{\"93\":1}}],[\"首先询问用户项目名称\",{\"1\":{\"27\":1}}],[\"首先\",{\"1\":{\"26\":1}}],[\"首先会构建依赖树\",{\"1\":{\"5\":1}}],[\"镜像\",{\"1\":{\"40\":1}}],[\"也能部分推导\",{\"1\":{\"164\":1}}],[\"也不需要从应用商店下载\",{\"1\":{\"131\":1}}],[\"也称为预加载\",{\"1\":{\"129\":1}}],[\"也称为启发式过期\",{\"1\":{\"109\":1}}],[\"也有和\",{\"1\":{\"128\":1}}],[\"也就是浏览器控制台经常会看到的\",{\"1\":{\"121\":1}}],[\"也就是说\",{\"1\":{\"93\":1,\"108\":1,\"147\":1}}],[\"也会导致所有的文件名都发生变化导致缓存失效\",{\"1\":{\"116\":1}}],[\"也会极大程度地复用之前版本的代码\",{\"1\":{\"2\":1}}],[\"也可通过\",{\"1\":{\"166\":1}}],[\"也可使用独立的\",{\"1\":{\"152\":1}}],[\"也可以在构建时执行\",{\"1\":{\"202\":1}}],[\"也可以在注册时使用\",{\"1\":{\"132\":1}}],[\"也可以在代码里加入\",{\"1\":{\"96\":1}}],[\"也可直接指定项目名称和模板\",{\"1\":{\"35\":1}}],[\"也是可以的\",{\"1\":{\"85\":1}}],[\"源码\",{\"0\":{\"192\":1},\"1\":{\"162\":2}}],[\"源码解析\",{\"0\":{\"142\":1}}],[\"源码阅读笔记\",{\"0\":{\"140\":1}}],[\"源码位于\",{\"1\":{\"51\":1}}],[\"源\",{\"1\":{\"34\":1}}],[\"钩子\",{\"1\":{\"34\":1}}],[\"相较于\",{\"1\":{\"181\":2}}],[\"相关操作\",{\"1\":{\"184\":1,\"185\":1}}],[\"相关内容\",{\"1\":{\"142\":1}}],[\"相关信息\",{\"1\":{\"108\":1}}],[\"相比\",{\"1\":{\"175\":1,\"179\":1}}],[\"相比存储大小得到了明显的提升\",{\"1\":{\"135\":1}}],[\"相比于\",{\"1\":{\"107\":1,\"181\":1}}],[\"相反\",{\"1\":{\"135\":1}}],[\"相当于我们在字符串的左边界的左侧\",{\"1\":{\"85\":1}}],[\"相互有关联的模板\",{\"1\":{\"32\":1}}],[\"相对选项式的粒度更粗\",{\"1\":{\"29\":1}}],[\"适合管理多个\",{\"1\":{\"32\":1}}],[\"主题对象维护一个消息列表\",{\"1\":{\"141\":1}}],[\"主要使用\",{\"1\":{\"156\":1}}],[\"主要修改缓存方式和过期时间的配置\",{\"1\":{\"122\":1}}],[\"主要是停留缓存时间会变大\",{\"1\":{\"104\":1}}],[\"主要与响应使用期\",{\"1\":{\"104\":1}}],[\"主要发生在客户端\",{\"1\":{\"93\":1}}],[\"主要在于模板代码的管理方式\",{\"1\":{\"31\":1}}],[\"主窗口未响应时提示\",{\"1\":{\"51\":1}}],[\"主窗口函数\",{\"1\":{\"51\":1}}],[\"主窗口加载完成前显示\",{\"1\":{\"51\":1}}],[\"主进程入口文件在\",{\"1\":{\"50\":1}}],[\"主进程代码基于\",{\"1\":{\"47\":1}}],[\"主进程并监听主进程文件的变化\",{\"1\":{\"46\":1}}],[\"主进程启动入口为\",{\"1\":{\"46\":1}}],[\"主进程\",{\"0\":{\"45\":1,\"50\":1},\"1\":{\"41\":1,\"46\":1}}],[\"主流的脚手架生成方案\",{\"1\":{\"28\":1}}],[\"跟集成式的区别\",{\"1\":{\"31\":1}}],[\"仓库\",{\"1\":{\"148\":1,\"155\":3}}],[\"仓库克隆\",{\"1\":{\"31\":1}}],[\"仓库来管理多个子项目\",{\"1\":{\"2\":1}}],[\"之前\",{\"1\":{\"173\":1}}],[\"之间的通讯\",{\"1\":{\"224\":1}}],[\"之间缓存一个\",{\"1\":{\"177\":1}}],[\"之间\",{\"1\":{\"135\":1}}],[\"之后\",{\"1\":{\"162\":1,\"173\":1}}],[\"之后前端调用同域下的接口时\",{\"1\":{\"134\":1}}],[\"之后在此模式下的\",{\"1\":{\"15\":1}}],[\"之类的工具搭建项目\",{\"1\":{\"31\":1}}],[\"集成诸如i18n\",{\"1\":{\"31\":1}}],[\"集成式的模板采用\",{\"1\":{\"32\":1}}],[\"集成式\",{\"0\":{\"29\":1}}],[\"独立于浏览器缓存或网络状态\",{\"1\":{\"132\":1}}],[\"独立于网页主线程\",{\"1\":{\"132\":1}}],[\"独立性\",{\"1\":{\"131\":1}}],[\"独立的\",{\"1\":{\"32\":1}}],[\"独立的的模板仓库\",{\"1\":{\"28\":1}}],[\"独立仓库式的模板更适合做一个大一统\",{\"1\":{\"32\":1}}],[\"独立仓库式的模板\",{\"1\":{\"31\":1}}],[\"独立仓库\",{\"0\":{\"31\":1}}],[\"根据步骤\",{\"1\":{\"185\":1}}],[\"根据自变量计算出\",{\"1\":{\"183\":1}}],[\"根据自变量变化计算出\",{\"1\":{\"180\":2,\"181\":1}}],[\"根据提示操作\",{\"1\":{\"167\":1}}],[\"根据\",{\"1\":{\"115\":1,\"176\":2,\"177\":1}}],[\"根据该滑动窗口的大小\",{\"1\":{\"77\":1}}],[\"根据选择创建模板\",{\"1\":{\"30\":1}}],[\"根目录下\",{\"1\":{\"5\":1}}],[\"询问是否使用某些特性\",{\"1\":{\"30\":1}}],[\"询问用户是否覆盖\",{\"1\":{\"26\":1,\"27\":1}}],[\"记录下这个子串的长度\",{\"1\":{\"84\":1}}],[\"记录\",{\"1\":{\"29\":1}}],[\"降低项目基建成本\",{\"1\":{\"29\":1}}],[\"版本的\",{\"1\":{\"179\":1}}],[\"版本依赖提升\",{\"1\":{\"29\":1}}],[\"版本规范\",{\"1\":{\"14\":1}}],[\"对性能很友好\",{\"1\":{\"202\":1}}],[\"对应\",{\"1\":{\"184\":2}}],[\"对应的\",{\"1\":{\"179\":1}}],[\"对应的哈希值才会变化\",{\"1\":{\"116\":1}}],[\"对应的是\",{\"1\":{\"29\":1}}],[\"对于粒度越细的更新\",{\"1\":{\"181\":1}}],[\"对于每一种对齐方式\",{\"1\":{\"81\":1}}],[\"对\",{\"1\":{\"181\":1,\"221\":1}}],[\"对比其他框架\",{\"1\":{\"185\":1}}],[\"对比变化前后\",{\"1\":{\"181\":1}}],[\"对比分析\",{\"0\":{\"28\":1}}],[\"对框架工作原理影响较大的是\",{\"1\":{\"180\":1}}],[\"对模板语法编译时的优化\",{\"1\":{\"180\":1}}],[\"对的应\",{\"1\":{\"179\":1}}],[\"对实际宿主环境\",{\"1\":{\"176\":1}}],[\"对请求进行处理\",{\"1\":{\"132\":1}}],[\"对资源内容进行计算\",{\"1\":{\"108\":1}}],[\"对数据进行处理\",{\"1\":{\"76\":1}}],[\"对象来管理消息和订阅者对象\",{\"1\":{\"141\":1}}],[\"对象和\",{\"1\":{\"135\":1}}],[\"对象调用\",{\"1\":{\"54\":1}}],[\"对象\",{\"1\":{\"48\":1,\"132\":1,\"135\":1,\"142\":1,\"147\":1,\"201\":1}}],[\"单位\",{\"1\":{\"96\":1}}],[\"单文件组件\",{\"1\":{\"44\":1}}],[\"单仓库管理多个项目\",{\"1\":{\"29\":1}}],[\"单独安装依赖\",{\"1\":{\"11\":1}}],[\"方法中一一进行比较\",{\"1\":{\"184\":1}}],[\"方法可以在不修改原始数组的情况下创建一个新的数组副本\",{\"1\":{\"146\":1}}],[\"方法的第一个参数大于或等于数组的长度时\",{\"1\":{\"145\":1}}],[\"方法的对象\",{\"1\":{\"142\":1}}],[\"方法用于注册\",{\"1\":{\"132\":1}}],[\"方法\",{\"1\":{\"85\":1,\"181\":1,\"184\":1}}],[\"方法时\",{\"1\":{\"78\":1}}],[\"方法返回一个\",{\"1\":{\"48\":1}}],[\"方法启动服务器\",{\"1\":{\"43\":1}}],[\"方便检索项目源码\",{\"1\":{\"29\":1}}],[\"方便共享和复用代码\",{\"1\":{\"29\":1}}],[\"方式\",{\"1\":{\"29\":1}}],[\"方式管理\",{\"1\":{\"29\":1}}],[\"方案探索\",{\"0\":{\"20\":1}}],[\"章节所写的\",{\"1\":{\"28\":1}}],[\"区别于上面的两种\",{\"1\":{\"28\":1}}],[\"功能集成度高\",{\"1\":{\"28\":1}}],[\"80\",{\"1\":{\"122\":3,\"206\":1}}],[\"8\",{\"1\":{\"27\":1}}],[\"拿到包含版本信息的用户代理字符串\",{\"1\":{\"27\":1}}],[\"复杂的\",{\"1\":{\"173\":2}}],[\"复杂的扁平算法\",{\"1\":{\"2\":1}}],[\"复制模板目录的文件到目标目录\",{\"1\":{\"27\":1}}],[\"复制目录\",{\"1\":{\"26\":1}}],[\"复制文件或文件夹\",{\"1\":{\"26\":1}}],[\"zakas\",{\"1\":{\"64\":1}}],[\"z\",{\"1\":{\"26\":5,\"47\":1}}],[\"^a\",{\"1\":{\"26\":1}}],[\"^\",{\"1\":{\"26\":2}}],[\"^react\",{\"1\":{\"10\":1}}],[\"选项完全禁止\",{\"1\":{\"151\":1}}],[\"选项并不会完全禁止\",{\"1\":{\"151\":1}}],[\"选项方式\",{\"1\":{\"120\":1}}],[\"选项\",{\"1\":{\"118\":1,\"166\":1}}],[\"选项式的脚手架适合简单的项目模板生成\",{\"1\":{\"32\":1}}],[\"选项式\",{\"0\":{\"30\":1}}],[\"选项用于创建一个轻量级的启动脚本\",{\"1\":{\"25\":1}}],[\"选择器\",{\"1\":{\"210\":1}}],[\"选择声明式的设计方案\",{\"1\":{\"200\":1}}],[\"选择最适合自己的模板管理方式\",{\"1\":{\"32\":1}}],[\"选择少\",{\"1\":{\"28\":1}}],[\"选择变体\",{\"1\":{\"26\":1}}],[\"选择平台下的变体\",{\"1\":{\"26\":1}}],[\"选择平台\",{\"1\":{\"26\":1}}],[\"返回指定处理函数在处理函数列表中的索引\",{\"1\":{\"145\":1}}],[\"返回更新后的缓存\",{\"1\":{\"106\":1}}],[\"返回缓存\",{\"1\":{\"106\":1}}],[\"返回响应\",{\"1\":{\"106\":2}}],[\"返回新资源的时间\",{\"1\":{\"103\":1}}],[\"返回空字符串\",{\"1\":{\"85\":1}}],[\"返回队列中所有元素的平均值\",{\"1\":{\"79\":1}}],[\"返回滑动窗口中所有元素的平均值\",{\"1\":{\"78\":1}}],[\"返回带有各种静态文件路径的对象\",{\"1\":{\"52\":1}}],[\"返回一个布尔值\",{\"1\":{\"52\":1}}],[\"返回字符串为用户自定义错误信息\",{\"1\":{\"26\":1}}],[\"返回\",{\"1\":{\"26\":1,\"46\":1,\"79\":4,\"80\":1,\"106\":1}}],[\"若两端时钟不同步\",{\"1\":{\"107\":1}}],[\"若浏览器缓存中没有该资源的缓存数据\",{\"1\":{\"100\":1}}],[\"若配置显示loading窗口\",{\"1\":{\"51\":1}}],[\"若本地设置过其它\",{\"1\":{\"34\":1}}],[\"若用户选择不覆盖\",{\"1\":{\"26\":1}}],[\"若存项目目录存在并不为空\",{\"1\":{\"26\":1}}],[\"`handler`\",{\"1\":{\"142\":2}}],[\"`env`\",{\"1\":{\"44\":1}}],[\"`package\",{\"1\":{\"27\":1}}],[\"`template\",{\"1\":{\"27\":1}}],[\"`\",{\"1\":{\"26\":3,\"27\":3,\"44\":2,\"142\":6}}],[\"`目标目录\",{\"1\":{\"26\":1}}],[\"$event\",{\"1\":{\"184\":1}}],[\"$ui\",{\"1\":{\"176\":1}}],[\"$y$\",{\"1\":{\"174\":2}}],[\"$x$\",{\"1\":{\"174\":2}}],[\"$2x\",{\"1\":{\"174\":1}}],[\"$f$\",{\"1\":{\"172\":1,\"176\":1}}],[\"$$\",{\"1\":{\"172\":1}}],[\"$$ui\",{\"1\":{\"172\":1}}],[\"$npm\",{\"1\":{\"148\":2,\"155\":4}}],[\"$request\",{\"1\":{\"122\":2}}],[\"$\",{\"1\":{\"26\":3,\"27\":2,\"47\":1,\"122\":2,\"176\":1}}],[\"$schema\",{\"1\":{\"13\":1}}],[\"完整的对应关系\",{\"1\":{\"184\":1}}],[\"完整的规则列表参见\",{\"1\":{\"167\":1}}],[\"完整的\",{\"1\":{\"26\":1}}],[\"完成\",{\"1\":{\"184\":1,\"199\":1}}],[\"完成后\",{\"1\":{\"184\":1}}],[\"完成命令行交互\",{\"1\":{\"23\":1}}],[\"完成版本发布之后\",{\"1\":{\"15\":1}}],[\"未指定\",{\"1\":{\"142\":1}}],[\"未输入则使用默认名称\",{\"1\":{\"26\":1}}],[\"未在\",{\"1\":{\"2\":1}}],[\"操作的性能\",{\"1\":{\"224\":1}}],[\"操作\",{\"1\":{\"174\":1,\"184\":1,\"185\":1}}],[\"操作时\",{\"1\":{\"156\":1}}],[\"操作查看\",{\"1\":{\"136\":1}}],[\"操作系统缓存\",{\"1\":{\"90\":1}}],[\"操作系统会在环境变量\",{\"1\":{\"25\":1}}],[\"操作已取消\",{\"1\":{\"26\":3}}],[\"✖\",{\"1\":{\"26\":3}}],[\"按照缓存位置划分\",{\"1\":{\"92\":1}}],[\"按照失效策略划分\",{\"1\":{\"92\":1}}],[\"按钮\",{\"1\":{\"50\":1}}],[\"按ctrl+c\",{\"1\":{\"26\":1}}],[\"按顺序执行询问\",{\"1\":{\"26\":2}}],[\"文生图\",{\"1\":{\"73\":1}}],[\"文档工具等\",{\"1\":{\"172\":1}}],[\"文档生成工具\",{\"1\":{\"157\":1}}],[\"文档通常是由不同的子文档拼接而成的\",{\"1\":{\"93\":1}}],[\"文档\",{\"0\":{\"66\":1,\"157\":1},\"1\":{\"148\":1,\"167\":1}}],[\"文本输入框\",{\"1\":{\"26\":1}}],[\"文件使用\",{\"1\":{\"157\":1}}],[\"文件在项目的\",{\"1\":{\"156\":1}}],[\"文件等\",{\"1\":{\"124\":1}}],[\"文件命中强缓存\",{\"1\":{\"122\":1}}],[\"文件也被重复构建\",{\"1\":{\"116\":1}}],[\"文件并没有被修改\",{\"1\":{\"116\":1}}],[\"文件被修改后\",{\"1\":{\"116\":1}}],[\"文件内容级别的\",{\"1\":{\"116\":1}}],[\"文件走协商缓存\",{\"1\":{\"115\":1}}],[\"文件名\",{\"1\":{\"115\":1}}],[\"文件中查找\",{\"1\":{\"157\":1}}],[\"文件中引入了\",{\"1\":{\"116\":1}}],[\"文件中启用\",{\"1\":{\"47\":1}}],[\"文件中配置\",{\"1\":{\"17\":1}}],[\"文件的类型\",{\"1\":{\"148\":1}}],[\"文件的支持\",{\"1\":{\"47\":1}}],[\"文件的诞生才解决此问题\",{\"1\":{\"5\":1}}],[\"文件转换为\",{\"1\":{\"47\":2}}],[\"文件作为配置文件传递给该函数\",{\"1\":{\"43\":1}}],[\"文件入口\",{\"1\":{\"25\":1}}],[\"文件\",{\"1\":{\"25\":3,\"47\":1,\"115\":2,\"131\":1,\"148\":1,\"157\":1,\"166\":1,\"167\":1,\"168\":1}}],[\"文件夹内的内容\",{\"1\":{\"44\":1}}],[\"文件夹的文件或文件夹\",{\"1\":{\"27\":2}}],[\"文件夹\",{\"1\":{\"7\":3,\"11\":1}}],[\"o\",{\"1\":{\"174\":1}}],[\"owner\",{\"1\":{\"173\":1}}],[\"overrides\",{\"1\":{\"167\":1}}],[\"overwritechecker\",{\"1\":{\"26\":1}}],[\"overwrite\",{\"1\":{\"26\":5,\"27\":2}}],[\"origin\",{\"1\":{\"121\":4,\"122\":1}}],[\"org\",{\"1\":{\"34\":2}}],[\"occ\",{\"1\":{\"85\":4}}],[\"options\",{\"1\":{\"121\":2,\"122\":2}}],[\"optimizedeps\",{\"1\":{\"44\":2}}],[\"openblock\",{\"1\":{\"184\":2}}],[\"open\",{\"1\":{\"52\":2}}],[\"opendevtools\",{\"1\":{\"51\":1}}],[\"outofblinkcors\",{\"1\":{\"50\":1}}],[\"outdir\",{\"1\":{\"44\":1,\"166\":2}}],[\"object\",{\"1\":{\"47\":1,\"135\":2,\"142\":1}}],[\"obfuscator\",{\"1\":{\"47\":3}}],[\"off<key\",{\"1\":{\"147\":2}}],[\"off\",{\"1\":{\"142\":2,\"143\":1,\"147\":1}}],[\"of\",{\"1\":{\"26\":3,\"27\":1,\"71\":1,\"179\":2,\"180\":1,\"207\":1}}],[\"on<key\",{\"1\":{\"147\":2}}],[\"onfoo\",{\"1\":{\"143\":3}}],[\"onclick\",{\"1\":{\"184\":1}}],[\"once\",{\"1\":{\"51\":1}}],[\"oncancel\",{\"1\":{\"26\":2}}],[\"onappready\",{\"1\":{\"50\":2}}],[\"on\",{\"1\":{\"46\":2,\"48\":3,\"50\":2,\"51\":4,\"142\":2,\"143\":3,\"147\":1,\"156\":2}}],[\"onstate\",{\"1\":{\"26\":1}}],[\"onlyupdatepeerdependentswhenoutofrange\",{\"1\":{\"13\":1}}],[\"only\",{\"1\":{\"11\":2,\"14\":2,\"17\":1}}],[\"例\",{\"1\":{\"26\":1}}],[\"例如测试分组\",{\"1\":{\"150\":1}}],[\"例如模块之间的通信\",{\"1\":{\"141\":1}}],[\"例如用户交互\",{\"1\":{\"141\":1}}],[\"例如清理旧版本缓存\",{\"1\":{\"132\":1}}],[\"例如缓存策略\",{\"1\":{\"132\":1}}],[\"例如通知用户有新消息\",{\"1\":{\"132\":1}}],[\"例如离线访问\",{\"1\":{\"132\":1}}],[\"例如打开缓存等\",{\"1\":{\"132\":1}}],[\"例如图片\",{\"1\":{\"124\":1}}],[\"例如浏览器缓存\",{\"1\":{\"90\":1}}],[\"例如最大子数组和\",{\"1\":{\"76\":1}}],[\"例如端口号\",{\"1\":{\"44\":1}}],[\"例如输出目录\",{\"1\":{\"44\":2}}],[\"例如加载打包后的代码的逻辑等\",{\"1\":{\"25\":1}}],[\"例如\",{\"1\":{\"10\":1,\"11\":1,\"27\":1,\"44\":1,\"108\":1,\"132\":3,\"141\":1,\"147\":1,\"172\":1,\"176\":1,\"202\":2}}],[\"获取当前上下文的\",{\"1\":{\"179\":1}}],[\"获取通配符事件类型对应的处理函数列表\",{\"1\":{\"142\":1}}],[\"获取事件类型对应的处理函数列表\",{\"1\":{\"142\":1}}],[\"获取和修改\",{\"1\":{\"136\":1}}],[\"获取一个可用的端口号\",{\"1\":{\"43\":1}}],[\"获取包信息\",{\"1\":{\"26\":1}}],[\"获取用户响应值\",{\"1\":{\"26\":1}}],[\"获取项目名\",{\"1\":{\"26\":1}}],[\"获取指定模板参数\",{\"1\":{\"26\":1}}],[\"获取输出的目标文件夹参数\",{\"1\":{\"26\":1}}],[\"获取模板名列表\",{\"1\":{\"26\":1}}],[\"使程序更简单\",{\"1\":{\"161\":1}}],[\"使输出更简洁\",{\"1\":{\"149\":1}}],[\"使得\",{\"1\":{\"131\":1}}],[\"使窗口\",{\"1\":{\"51\":1}}],[\"使命令行支持用户交互\",{\"1\":{\"26\":1}}],[\"使用其可从\",{\"1\":{\"184\":1}}],[\"使用其在执行\",{\"1\":{\"183\":1}}],[\"使用模板主语法描述\",{\"1\":{\"184\":1}}],[\"使用模板语法描述\",{\"1\":{\"181\":1}}],[\"使用新的\",{\"1\":{\"180\":1}}],[\"使用了这种方式\",{\"1\":{\"179\":1}}],[\"使用处理函数引用\",{\"1\":{\"143\":1}}],[\"使用起来并不是特别方便\",{\"1\":{\"135\":1}}],[\"使用强制刷新\",{\"1\":{\"118\":1}}],[\"使用启发式缓存可能会导致一些资源过早地失效或者过晚地失效\",{\"1\":{\"109\":1}}],[\"使用时间戳生成\",{\"1\":{\"108\":1}}],[\"使用版本号生成\",{\"1\":{\"108\":1}}],[\"使用哈希算法生成\",{\"1\":{\"108\":1}}],[\"使用期算法\",{\"0\":{\"104\":1}}],[\"使用两个指针表示字符串中的某个子串\",{\"1\":{\"84\":1}}],[\"使用一个变量来记录滑动窗口中所有元素的和\",{\"1\":{\"78\":1}}],[\"使用一个队列来存储滑动窗口中的元素\",{\"1\":{\"78\":1}}],[\"使用到的\",{\"1\":{\"47\":1}}],[\"使用上面获取的端口号\",{\"1\":{\"43\":1}}],[\"使用脚手架可以提高开发效率和代码质量\",{\"1\":{\"22\":1}}],[\"使用场景\",{\"0\":{\"22\":1}}],[\"使用rollup打包输入配置\",{\"1\":{\"17\":1}}],[\"使用心得\",{\"1\":{\"17\":1}}],[\"使用prerelease模式\",{\"0\":{\"15\":1}}],[\"使用changesets管理release工作流\",{\"1\":{\"17\":1}}],[\"使用changesets\",{\"0\":{\"14\":1}}],[\"使用官方推荐之一的\",{\"1\":{\"12\":1}}],[\"使用\",{\"0\":{\"9\":1,\"35\":1,\"57\":1,\"122\":1,\"143\":1},\"1\":{\"11\":1,\"17\":1,\"24\":1,\"25\":2,\"26\":2,\"29\":1,\"41\":1,\"43\":1,\"44\":1,\"47\":1,\"54\":1,\"57\":1,\"115\":1,\"116\":1,\"129\":1,\"131\":1,\"142\":1,\"146\":1,\"148\":2,\"156\":2,\"157\":1,\"162\":1,\"166\":1,\"175\":2,\"180\":2,\"181\":2,\"183\":1,\"201\":2}}],[\"使用平铺的\",{\"1\":{\"7\":1}}],[\"利用\",{\"1\":{\"26\":1}}],[\"接下去会去磁盘中查找\",{\"1\":{\"127\":1}}],[\"接下来再看看协商缓存中涉及的主要首部字段名\",{\"1\":{\"96\":1}}],[\"接下来完善其它问询\",{\"1\":{\"26\":1}}],[\"接下来\",{\"1\":{\"26\":1}}],[\"接着创建\",{\"1\":{\"25\":1}}],[\"现在前端框架需要\",{\"1\":{\"180\":1}}],[\"现在就可以执行\",{\"1\":{\"25\":1}}],[\"现代脚手架离不开命令行工具\",{\"1\":{\"23\":1}}],[\"genericeventhandler\",{\"1\":{\"147\":3}}],[\"getvalue\",{\"1\":{\"179\":2}}],[\"getter\",{\"1\":{\"174\":1,\"179\":2}}],[\"getmaxlength\",{\"1\":{\"82\":3}}],[\"get\",{\"1\":{\"52\":1,\"121\":1,\"122\":1,\"142\":4}}],[\"getconfig\",{\"1\":{\"47\":1}}],[\"getprojectname\",{\"1\":{\"26\":3,\"27\":1}}],[\"gif|jpg|jpeg|png|bmp|swf|js|css\",{\"1\":{\"122\":1}}],[\"git的奇技淫巧\",{\"1\":{\"66\":1}}],[\"github\",{\"0\":{\"156\":1},\"1\":{\"31\":1,\"39\":1,\"156\":3}}],[\"gitignore\",{\"1\":{\"26\":2}}],[\"git\",{\"1\":{\"2\":1,\"13\":1,\"17\":1,\"26\":5,\"27\":2,\"31\":1,\"148\":5,\"155\":7}}],[\"gmt\",{\"1\":{\"95\":1,\"97\":2,\"115\":1}}],[\"grid\",{\"1\":{\"210\":1}}],[\"grained\",{\"1\":{\"179\":1}}],[\"graph\",{\"1\":{\"94\":1}}],[\"groner\",{\"1\":{\"64\":1}}],[\"green\",{\"1\":{\"26\":3}}],[\"gone\",{\"1\":{\"51\":2}}],[\"globals\",{\"1\":{\"152\":2}}],[\"global\",{\"1\":{\"47\":1}}],[\"g\",{\"1\":{\"25\":1,\"26\":3}}],[\"先在类型层面规划整个程序\",{\"1\":{\"161\":1}}],[\"先让浏览器强缓存失效\",{\"1\":{\"115\":1}}],[\"先梳理结构\",{\"1\":{\"61\":1}}],[\"先使用\",{\"1\":{\"43\":1}}],[\"先执行\",{\"1\":{\"25\":1}}],[\"先如下创建项目\",{\"1\":{\"25\":1}}],[\"实体\",{\"1\":{\"93\":1}}],[\"实用的技术\",{\"1\":{\"69\":1}}],[\"实际上就是在执行\",{\"1\":{\"25\":1}}],[\"实际上是在执行对应的可执行文件\",{\"1\":{\"25\":1}}],[\"实现常用布局\",{\"1\":{\"213\":1}}],[\"实现功能\",{\"1\":{\"199\":1}}],[\"实现步骤\",{\"1\":{\"185\":1}}],[\"实现了几个内置控制流工具\",{\"1\":{\"180\":1}}],[\"实现简单的\",{\"1\":{\"179\":1}}],[\"实现异步测试\",{\"1\":{\"150\":1}}],[\"实现页面间状态的维持和传递\",{\"1\":{\"135\":1}}],[\"实现\",{\"0\":{\"79\":1,\"82\":1,\"85\":1},\"1\":{\"77\":1,\"180\":2,\"213\":2}}],[\"实现高度自动化和智能化流程\",{\"1\":{\"23\":1}}],[\"实现原理是什么\",{\"1\":{\"220\":1}}],[\"实现原理\",{\"0\":{\"23\":1},\"1\":{\"28\":1}}],[\"注释和缩进用的制表符或空格之后的数据结构\",{\"1\":{\"162\":1}}],[\"注\",{\"1\":{\"142\":1,\"173\":2,\"174\":1}}],[\"注销事件处理函数\",{\"1\":{\"142\":1}}],[\"注册事件处理函数\",{\"1\":{\"142\":1}}],[\"注册成功并且激活后\",{\"1\":{\"132\":1}}],[\"注册成功后才会触发\",{\"1\":{\"132\":1}}],[\"注册成功后\",{\"1\":{\"132\":1}}],[\"注册\",{\"1\":{\"132\":2}}],[\"注册一个名为\",{\"1\":{\"25\":1}}],[\"注意\",{\"1\":{\"109\":1,\"129\":1,\"132\":4,\"135\":1,\"142\":1,\"151\":1,\"162\":1}}],[\"注意需严格遵循\",{\"1\":{\"14\":1}}],[\"需全量更新\",{\"1\":{\"201\":1}}],[\"需经前端框架处理才能在浏览器中显示真实\",{\"1\":{\"176\":1}}],[\"需解释两个问题\",{\"1\":{\"174\":1}}],[\"需配置\",{\"1\":{\"34\":1}}],[\"需在浏览器中运行时在\",{\"1\":{\"166\":1}}],[\"需在\",{\"1\":{\"25\":1}}],[\"需要变化的\",{\"1\":{\"185\":1}}],[\"需要对比的节点\",{\"1\":{\"184\":1}}],[\"需要了解各种生命周期的执行时机\",{\"1\":{\"175\":1}}],[\"需要一种存放\",{\"1\":{\"174\":1}}],[\"需要牺牲\",{\"1\":{\"173\":1}}],[\"需要注意一些问题\",{\"1\":{\"132\":2}}],[\"需要根据具体情况来决定是否需要设置缓存策略\",{\"1\":{\"129\":1}}],[\"需要检查服务端或者\",{\"1\":{\"121\":1}}],[\"需要服务器进行字符串比较\",{\"1\":{\"107\":1}}],[\"需要重新获取资源\",{\"1\":{\"107\":2}}],[\"需要将队首元素弹出\",{\"1\":{\"78\":1}}],[\"需要加入该配置关闭跨域问题\",{\"1\":{\"50\":1}}],[\"需要使用\",{\"1\":{\"47\":1}}],[\"需要再选择其下的具体项目类型\",{\"1\":{\"27\":1}}],[\"需要设计命令行支持的几个选项目\",{\"1\":{\"26\":1}}],[\"需要创建一个\",{\"1\":{\"23\":1}}],[\"需要脚手架自动生成项目\",{\"1\":{\"22\":1}}],[\"函数即可\",{\"1\":{\"202\":1}}],[\"函数第\",{\"1\":{\"184\":1}}],[\"函数的返回值为本次更新的\",{\"1\":{\"184\":1}}],[\"函数执行后\",{\"1\":{\"184\":1}}],[\"函数如下\",{\"1\":{\"184\":1}}],[\"函数调用过程中产生的\",{\"1\":{\"174\":1}}],[\"函数式编程概念\",{\"1\":{\"174\":1}}],[\"函数式编程实践入门\",{\"1\":{\"64\":1}}],[\"函数用于创建数组的副本\",{\"1\":{\"142\":1}}],[\"函数首先通过向远程服务器发出请求来检查是否有新版本可用\",{\"1\":{\"54\":1}}],[\"函数监听来自渲染进程的\",{\"1\":{\"54\":1}}],[\"函数创建一个\",{\"1\":{\"43\":1}}],[\"函数中使用上述定义的类型\",{\"1\":{\"147\":1}}],[\"函数中主依次启动渲染进程\",{\"1\":{\"41\":1}}],[\"函数中编写参数解析逻辑\",{\"1\":{\"26\":2}}],[\"函数\",{\"1\":{\"25\":1,\"46\":2,\"54\":1,\"181\":1,\"184\":1,\"202\":1}}],[\"添加一个\",{\"1\":{\"52\":1}}],[\"添加对\",{\"1\":{\"47\":1}}],[\"添加额外的加载器\",{\"1\":{\"47\":1}}],[\"添加\",{\"0\":{\"147\":1},\"1\":{\"34\":1}}],[\"添加编译命令\",{\"1\":{\"25\":1}}],[\"添加到主屏幕\",{\"1\":{\"131\":1}}],[\"添加到\",{\"1\":{\"11\":1}}],[\"=|\",{\"1\":{\"147\":1}}],[\"==\",{\"1\":{\"27\":1,\"47\":1,\"82\":1}}],[\"===\",{\"1\":{\"26\":12,\"46\":2,\"47\":1,\"50\":1,\"51\":1,\"57\":1,\"79\":1}}],[\"=>\",{\"1\":{\"25\":1,\"26\":18,\"27\":1,\"46\":4,\"48\":3,\"50\":2,\"51\":6,\"57\":1,\"142\":2,\"143\":2,\"146\":1,\"147\":2,\"174\":1,\"179\":4,\"184\":3}}],[\"=\",{\"1\":{\"25\":2,\"26\":21,\"27\":9,\"46\":4,\"47\":2,\"48\":2,\"50\":1,\"51\":14,\"57\":1,\"79\":9,\"82\":16,\"85\":7,\"102\":1,\"103\":1,\"104\":5,\"121\":2,\"122\":1,\"142\":5,\"143\":1,\"147\":10,\"167\":1,\"172\":1,\"173\":3,\"174\":3,\"176\":1,\"179\":9,\"184\":4,\"200\":1}}],[\"y$\",{\"1\":{\"174\":1}}],[\"yml\",{\"1\":{\"156\":2}}],[\"y\",{\"1\":{\"47\":1}}],[\"yellow\",{\"1\":{\"26\":3}}],[\"yes\",{\"1\":{\"25\":1}}],[\"yaml\",{\"1\":{\"6\":1,\"11\":1}}],[\"yarn就好了\",{\"1\":{\"40\":1}}],[\"yarn安装依赖时\",{\"1\":{\"40\":1}}],[\"yarn的使用经验可无缝切换到pnpm上\",{\"1\":{\"9\":1}}],[\"yarn\",{\"0\":{\"5\":1},\"1\":{\"2\":1,\"5\":2,\"7\":1,\"16\":1,\"17\":2,\"40\":1,\"41\":1,\"48\":1}}],[\">>>\",{\"1\":{\"142\":1,\"145\":6}}],[\">>浏览器缓存\",{\"1\":{\"106\":4}}],[\">>浏览器\",{\"1\":{\"106\":7}}],[\">>服务器\",{\"1\":{\"106\":3}}],[\">p\",{\"1\":{\"94\":1}}],[\">n\",{\"1\":{\"94\":1}}],[\">o\",{\"1\":{\"94\":1}}],[\">m\",{\"1\":{\"94\":1}}],[\">j\",{\"1\":{\"94\":1}}],[\">i\",{\"1\":{\"94\":1}}],[\">g\",{\"1\":{\"94\":1}}],[\">e\",{\"1\":{\"94\":1}}],[\">l\",{\"1\":{\"94\":1}}],[\">k\",{\"1\":{\"94\":1}}],[\">d\",{\"1\":{\"94\":1}}],[\">c\",{\"1\":{\"94\":1}}],[\">b\",{\"1\":{\"94\":1}}],[\">=\",{\"1\":{\"50\":1}}],[\">\",{\"1\":{\"24\":2,\"25\":2,\"26\":1,\"96\":1,\"102\":1,\"129\":2,\"147\":6,\"162\":2,\"175\":2,\"180\":2}}],[\"脚本下载完成并缓存静态资源后\",{\"1\":{\"132\":1}}],[\"脚本中\",{\"1\":{\"132\":1}}],[\"脚本的\",{\"1\":{\"132\":1}}],[\"脚本时\",{\"1\":{\"132\":1}}],[\"脚本开始运行\",{\"1\":{\"132\":1}}],[\"脚本被更新\",{\"1\":{\"132\":1}}],[\"脚本被激活\",{\"1\":{\"132\":1}}],[\"脚本被下载到浏览器中\",{\"1\":{\"132\":1}}],[\"脚本被注册到浏览器中\",{\"1\":{\"132\":1}}],[\"脚本等等\",{\"1\":{\"93\":1}}],[\"脚本\",{\"1\":{\"24\":1,\"132\":2}}],[\"脚手架介绍\",{\"0\":{\"39\":1}}],[\"脚手架\",{\"2\":{\"38\":1}}],[\"脚手架生成项目的整体流程\",{\"1\":{\"27\":1}}],[\"脚手架是不可或缺的一环\",{\"1\":{\"22\":1}}],[\"脚手架是工程化中的重要环节\",{\"1\":{\"21\":1}}],[\"脚手架自动生成项目可以帮助开发人员快速创建项目\",{\"1\":{\"22\":1}}],[\"脚手架自动生成项目的使用场景非常广泛\",{\"1\":{\"22\":1}}],[\"该数据会作用渲染\",{\"1\":{\"173\":1}}],[\"该命令的作用在\",{\"1\":{\"157\":1}}],[\"该算法常用于求解子数组或子字符串的问题\",{\"1\":{\"76\":1}}],[\"该怎么看\",{\"1\":{\"63\":1}}],[\"该类为\",{\"1\":{\"53\":1}}],[\"该类负责创建应用程序的主窗口和加载窗口\",{\"1\":{\"51\":1}}],[\"该标志设置为false\",{\"1\":{\"46\":1}}],[\"该函数会启动\",{\"1\":{\"46\":1}}],[\"该脚本负责生成新项目的文件和配置\",{\"1\":{\"24\":1}}],[\"该包也要发生\",{\"1\":{\"13\":1}}],[\"别名\",{\"1\":{\"24\":1}}],[\"给定一个字符串\",{\"1\":{\"83\":1}}],[\"给定一个整数数据流和一个窗口大小\",{\"1\":{\"77\":1}}],[\"给两个整数数组\",{\"1\":{\"80\":1}}],[\"给\",{\"1\":{\"24\":1}}],[\"66667\",{\"1\":{\"79\":1}}],[\"600\",{\"1\":{\"51\":1}}],[\"6\",{\"1\":{\"24\":1,\"27\":1,\"63\":1,\"79\":1}}],[\"要解析的代码是\",{\"1\":{\"152\":1}}],[\"要触发的事件类型\",{\"1\":{\"142\":1}}],[\"要注销的处理函数\",{\"1\":{\"142\":1}}],[\"要注销注册\",{\"1\":{\"142\":1}}],[\"要监听的事件类型\",{\"1\":{\"142\":1}}],[\"要求向源服务器发起请求\",{\"1\":{\"96\":1,\"118\":1}}],[\"要替换成的路径\",{\"1\":{\"47\":1}}],[\"要替换的模块名\",{\"1\":{\"47\":1}}],[\"要定义一个模板选择列表的数据结构\",{\"1\":{\"26\":1}}],[\"要使用\",{\"1\":{\"24\":1}}],[\"要查找所有名称以\",{\"1\":{\"10\":1}}],[\"是如何实现的\",{\"1\":{\"222\":1}}],[\"是如何让代码更安全呢\",{\"1\":{\"162\":1}}],[\"是声明式的\",{\"1\":{\"201\":1}}],[\"是因为声明式代码的可维护性更强\",{\"1\":{\"200\":1}}],[\"是典型的命令式框架\",{\"1\":{\"199\":1}}],[\"是可变的\",{\"1\":{\"184\":1}}],[\"是可以指定多个导出方式的对象\",{\"1\":{\"153\":1}}],[\"是重度依赖\",{\"1\":{\"183\":1}}],[\"是实现\",{\"1\":{\"181\":1}}],[\"是函数\",{\"1\":{\"179\":1}}],[\"是库\",{\"1\":{\"172\":1}}],[\"是弱类型语言\",{\"1\":{\"164\":1}}],[\"是渐进式类型语言\",{\"1\":{\"164\":1}}],[\"是动态绑定的\",{\"1\":{\"164\":1}}],[\"是去掉了空白\",{\"1\":{\"162\":1}}],[\"是\",{\"1\":{\"151\":2,\"164\":1,\"173\":2,\"177\":1}}],[\"是用户不必重复登录的关键\",{\"1\":{\"134\":1}}],[\"是否自动转换类型\",{\"1\":{\"164\":1}}],[\"是否包含前端域名\",{\"1\":{\"121\":1}}],[\"是否移除存在的文件并继续\",{\"1\":{\"26\":1}}],[\"是字符串类型\",{\"1\":{\"107\":1}}],[\"是字符串对象的一个方法\",{\"1\":{\"85\":1}}],[\"是由服务器生成的\",{\"1\":{\"107\":1}}],[\"是浏览器缓存收到响应的本地时间\",{\"1\":{\"104\":1}}],[\"是一种位运算技巧\",{\"1\":{\"145\":1}}],[\"是一种基于消息的设计模式\",{\"1\":{\"141\":1}}],[\"是一种基于事件的设计模式\",{\"1\":{\"141\":1}}],[\"是一种可以像本地应用一样提供快速\",{\"1\":{\"131\":1}}],[\"是一种\",{\"1\":{\"93\":1}}],[\"是一种能够获取如\",{\"1\":{\"93\":1}}],[\"是一种高效的算法\",{\"1\":{\"76\":1}}],[\"是一种常见的算法\",{\"1\":{\"76\":1}}],[\"是一种产品理论\",{\"1\":{\"61\":1}}],[\"是一个运行时\",{\"1\":{\"202\":1}}],[\"是一个非常小巧\",{\"1\":{\"158\":1}}],[\"是一个环境变量\",{\"1\":{\"155\":1}}],[\"是一个零配置的\",{\"1\":{\"154\":1}}],[\"是一个确保\",{\"1\":{\"150\":1}}],[\"是一个泛型类型\",{\"1\":{\"147\":1}}],[\"是一个轻量级的\",{\"1\":{\"140\":1}}],[\"是一个大规模的\",{\"1\":{\"135\":1}}],[\"是一个字符串\",{\"1\":{\"107\":1}}],[\"是一个时间戳\",{\"1\":{\"107\":1}}],[\"是一个\",{\"1\":{\"53\":1,\"157\":1}}],[\"是一个数组\",{\"1\":{\"47\":1}}],[\"是一个用于创建新项目的\",{\"1\":{\"24\":1}}],[\"是一个正则表达式\",{\"1\":{\"10\":1}}],[\"是你想要创建的项目的名称\",{\"1\":{\"24\":1}}],[\"是这个项目的名称\",{\"1\":{\"23\":1}}],[\"我们可以执行一些操作\",{\"1\":{\"132\":2}}],[\"我们需要解析命令行输入\",{\"1\":{\"26\":1}}],[\"我们需要使用以下依赖包\",{\"1\":{\"23\":1}}],[\"我们创建了一个命令行项目\",{\"1\":{\"26\":1}}],[\"我们的目标是支持以下方式启动项目\",{\"1\":{\"23\":1}}],[\"最理想时\",{\"1\":{\"200\":1}}],[\"最初是为了辨别用户身份\",{\"1\":{\"135\":1}}],[\"最长子串\",{\"1\":{\"83\":1}}],[\"最长连续递增子序列等等\",{\"1\":{\"76\":1}}],[\"最小化找出差异的性能消耗可以让声明式代码性能无限接近命令式代码\",{\"1\":{\"201\":1}}],[\"最小化发送消息的窗口\",{\"1\":{\"52\":1}}],[\"最小子数组和\",{\"1\":{\"76\":1}}],[\"最简化可实行产品\",{\"1\":{\"61\":1}}],[\"最核心的源码上以打断点\",{\"1\":{\"61\":1}}],[\"最大化或还原发送消息的窗口\",{\"1\":{\"52\":1}}],[\"最后修改时间也会随之改变\",{\"1\":{\"108\":1}}],[\"最后\",{\"1\":{\"43\":1,\"78\":1}}],[\"最开始\",{\"1\":{\"41\":1}}],[\"最终浏览器将返回响应报头\",{\"1\":{\"122\":1}}],[\"最终\",{\"1\":{\"23\":1}}],[\"最先进的包管理工具\",{\"1\":{\"17\":1}}],[\"提出的一种\",{\"1\":{\"173\":1}}],[\"提交时\",{\"1\":{\"156\":1}}],[\"提交\",{\"0\":{\"155\":1}}],[\"提交代码\",{\"1\":{\"148\":1,\"155\":1}}],[\"提醒用户更新等\",{\"1\":{\"132\":1}}],[\"提升网页的整体打开速度\",{\"1\":{\"116\":1}}],[\"提升客户端的加载速度\",{\"1\":{\"91\":1}}],[\"提高性能的方式有哪些\",{\"1\":{\"214\":1}}],[\"提高网页加载速度和用户体验\",{\"1\":{\"125\":1}}],[\"提高网页加载速度\",{\"1\":{\"124\":1}}],[\"提高用户体验和开发效率\",{\"1\":{\"53\":1}}],[\"提高前端研发能效\",{\"1\":{\"22\":1}}],[\"提供描述树型结构的数据对象\",{\"1\":{\"202\":1}}],[\"提供简单的方式来删除文件和目录\",{\"1\":{\"149\":1}}],[\"提供简单的方式来运行多个\",{\"1\":{\"149\":1}}],[\"提供了简单灵活的语法来定义测试用例\",{\"1\":{\"150\":1}}],[\"提供了简单易用的\",{\"1\":{\"135\":1}}],[\"提供了一组断言函数\",{\"1\":{\"150\":1}}],[\"提供了一个简单而强大的\",{\"1\":{\"140\":1}}],[\"提供了三种加载模式\",{\"1\":{\"118\":1}}],[\"提供有深度的前端文章和教程\",{\"1\":{\"67\":1}}],[\"提供各种文章\",{\"1\":{\"67\":1}}],[\"提供路径和读取别名\",{\"1\":{\"47\":1}}],[\"提供更细致的特性选项\",{\"1\":{\"28\":1}}],[\"提供集成式的项目模板\",{\"1\":{\"28\":1}}],[\"提供\",{\"1\":{\"26\":1}}],[\"提供的\",{\"1\":{\"11\":1}}],[\"更强的描述能力\",{\"1\":{\"181\":1}}],[\"更新阶段\",{\"1\":{\"132\":1}}],[\"更新后\",{\"1\":{\"132\":1}}],[\"更新失败\",{\"1\":{\"132\":2}}],[\"更新\",{\"1\":{\"132\":2,\"184\":1,\"201\":1}}],[\"更新缓存\",{\"1\":{\"106\":2}}],[\"更加准确\",{\"1\":{\"107\":1}}],[\"更直观\",{\"1\":{\"29\":1,\"200\":1}}],[\"更侧重特性的组合性\",{\"1\":{\"28\":1}}],[\"更适合业务类的复杂脚手架\",{\"1\":{\"28\":1}}],[\"更进一步\",{\"1\":{\"22\":1}}],[\"更多用法参考官网\",{\"1\":{\"10\":1}}],[\"基本质原因\",{\"1\":{\"180\":1}}],[\"基础\",{\"2\":{\"111\":1,\"138\":1}}],[\"基础建设与架构设计思想\",{\"1\":{\"64\":1}}],[\"基础功能\",{\"1\":{\"22\":1}}],[\"基于状态的声明式渲染\",{\"1\":{\"172\":1}}],[\"基于文件内容生成的哈希值\",{\"1\":{\"116\":1}}],[\"基于每个\",{\"1\":{\"116\":1}}],[\"基于\",{\"1\":{\"11\":1,\"16\":1,\"29\":1,\"172\":1}}],[\"因变量依赖的自变量\",{\"1\":{\"179\":1}}],[\"因变量不需要赋值\",{\"1\":{\"174\":1}}],[\"因变量有两种\",{\"1\":{\"174\":1}}],[\"因此这部分工作交到了开发者手中\",{\"1\":{\"185\":1}}],[\"因此不受\",{\"1\":{\"179\":1}}],[\"因此它可以更灵活地与其他\",{\"1\":{\"173\":1}}],[\"因此推荐使用\",{\"1\":{\"167\":1}}],[\"因此对新数组的操作不会影响原始数组\",{\"1\":{\"146\":1}}],[\"因此可以利用这一特点在\",{\"1\":{\"135\":1}}],[\"因此无法拦截网络请求\",{\"1\":{\"132\":1}}],[\"因此需要谨慎使用\",{\"1\":{\"129\":1}}],[\"因此在更新\",{\"1\":{\"132\":4}}],[\"因此在使用时\",{\"1\":{\"129\":1}}],[\"因此在检测到文件更改事件时将自动重新启动\",{\"1\":{\"46\":1}}],[\"因此硬性重新加载并没有清空缓存\",{\"1\":{\"118\":1}}],[\"因此如果服务器的时间被篡改了\",{\"1\":{\"107\":1}}],[\"因此一旦修改了电脑客户端本地时间为未来时间\",{\"1\":{\"104\":1}}],[\"因此\",{\"1\":{\"22\":1,\"32\":1,\"107\":1,\"109\":1,\"116\":2,\"121\":1,\"132\":1,\"134\":1,\"145\":1}}],[\"因为采用声明式代码可能会导致一定的性能损失\",{\"1\":{\"200\":1}}],[\"因为可以直接控制每一个操作的执行顺序和细节\",{\"1\":{\"200\":1}}],[\"因为在运行时会增加编译器代码\",{\"1\":{\"180\":1}}],[\"因为需先编译代码\",{\"1\":{\"180\":1}}],[\"因为老版本的打包工具不支持\",{\"1\":{\"153\":1}}],[\"因为负数索引值会导致删除错误的处理函数\",{\"1\":{\"145\":1}}],[\"因为缓存中的资源可能会过期或者被更新\",{\"1\":{\"132\":1}}],[\"因为浏览器为了节省渲染开销而将其缓存到内存中\",{\"1\":{\"120\":1}}],[\"因为像\",{\"1\":{\"115\":1}}],[\"因为它描述的是结果\",{\"1\":{\"200\":1}}],[\"因为它可以让开发者在调试时直接跳转到源代码文件\",{\"1\":{\"153\":1}}],[\"因为它需要等待所有已打开的页面关闭后才会生效\",{\"1\":{\"132\":1}}],[\"因为它是运行在后台线程中的\",{\"1\":{\"132\":1}}],[\"因为它是资源的唯一标识符\",{\"1\":{\"107\":1}}],[\"因为它们与父级共享相同的版本\",{\"1\":{\"8\":1}}],[\"因为\",{\"1\":{\"95\":1,\"145\":1,\"179\":1}}],[\"因为这些特性大体会以条件分支的形式存在于模板中\",{\"1\":{\"30\":1}}],[\"因为相同的包只需要下载一次\",{\"1\":{\"3\":1}}],[\"总的来说\",{\"1\":{\"150\":1}}],[\"总之\",{\"1\":{\"22\":1}}],[\"总结\",{\"0\":{\"16\":1,\"32\":1,\"158\":1}}],[\"统一的异常处理方案\",{\"1\":{\"223\":1}}],[\"统一版本管理\",{\"1\":{\"29\":1}}],[\"统一多个项目的结构和规范时\",{\"1\":{\"22\":1}}],[\"统一项目结构\",{\"1\":{\"22\":1}}],[\"新版本的\",{\"1\":{\"132\":1}}],[\"新鲜度\",{\"1\":{\"102\":1}}],[\"新窗口创建\",{\"1\":{\"50\":1}}],[\"新项目启动\",{\"1\":{\"22\":1}}],[\"新一代包管理工具\",{\"1\":{\"17\":1}}],[\"特殊之处\",{\"1\":{\"162\":1}}],[\"特别是在需要频繁创建新项目或者需要统一多个项目的结构和规范时\",{\"1\":{\"22\":1}}],[\"特别是在需要频繁创建新项目的情况下\",{\"1\":{\"22\":1}}],[\"特性代替\",{\"1\":{\"17\":1}}],[\"特性概览\",{\"0\":{\"2\":1}}],[\"特性及基本使用\",{\"0\":{\"0\":1}}],[\"子包自定义编译输出格式\",{\"1\":{\"17\":1}}],[\"代价高\",{\"1\":{\"201\":1}}],[\"代替\",{\"1\":{\"167\":1}}],[\"代表\",{\"1\":{\"172\":3}}],[\"代表允许所有域名访问\",{\"1\":{\"121\":1}}],[\"代表浏览器缓存收到响应的本地时间\",{\"1\":{\"104\":1}}],[\"代表电脑客户端的当前时间\",{\"1\":{\"104\":1}}],[\"代表资源的最后修改时间\",{\"1\":{\"97\":1}}],[\"代表在根目录安装依赖\",{\"1\":{\"11\":1}}],[\"代理\",{\"1\":{\"96\":1,\"118\":1}}],[\"代理服务器不会进行缓存\",{\"1\":{\"96\":1}}],[\"代理等\",{\"1\":{\"44\":1}}],[\"代码优化\",{\"1\":{\"217\":1}}],[\"代码需通过编译器编译后才能运行\",{\"1\":{\"202\":1}}],[\"代码运行的时候才开始编译\",{\"1\":{\"202\":1}}],[\"代码本身描述的是\",{\"1\":{\"199\":1}}],[\"代码该\",{\"1\":{\"184\":1}}],[\"代码在编译时将计算结果保留在编译后的代码中\",{\"1\":{\"180\":1}}],[\"代码在编译后就会立刻报错\",{\"1\":{\"180\":1}}],[\"代码体积可能大于使用\",{\"1\":{\"180\":1}}],[\"代码构建时\",{\"1\":{\"180\":1}}],[\"代码打包\",{\"1\":{\"180\":1}}],[\"代码转换\",{\"1\":{\"180\":1}}],[\"代码目标版本\",{\"1\":{\"166\":1}}],[\"代码编辑器设置\",{\"0\":{\"165\":1}}],[\"代码编译为\",{\"1\":{\"151\":1}}],[\"代码分离等等\",{\"1\":{\"154\":1}}],[\"代码的语法糖\",{\"1\":{\"173\":1}}],[\"代码的解析器\",{\"1\":{\"152\":1}}],[\"代码的类型\",{\"1\":{\"148\":1}}],[\"代码写入到文件中\",{\"1\":{\"151\":1}}],[\"代码质量和正确性的好工具\",{\"1\":{\"150\":1}}],[\"代码片段集合\",{\"1\":{\"71\":1}}],[\"代码大全\",{\"1\":{\"64\":1}}],[\"代码位于\",{\"1\":{\"53\":1}}],[\"代码压缩等\",{\"1\":{\"44\":2}}],[\"代码\",{\"1\":{\"42\":1,\"151\":1,\"162\":1,\"168\":1}}],[\"代码规范\",{\"1\":{\"22\":1}}],[\"代码提交规范\",{\"1\":{\"17\":1}}],[\"代码格式校验\",{\"1\":{\"17\":1}}],[\"代码及commit规范配置\",{\"1\":{\"17\":1}}],[\"工作流文件定义了一个名为\",{\"1\":{\"156\":1}}],[\"工作流用于在\",{\"1\":{\"156\":1}}],[\"工作流\",{\"0\":{\"156\":1}}],[\"工作流程一致性\",{\"1\":{\"29\":1}}],[\"工具生成\",{\"1\":{\"148\":1}}],[\"工具类\",{\"1\":{\"11\":1}}],[\"工程师都应懂的33个概念\",{\"1\":{\"226\":1}}],[\"工程化\",{\"2\":{\"18\":1,\"37\":1}}],[\"工程初始化及依赖包安装\",{\"1\":{\"17\":1}}],[\"工程\",{\"1\":{\"17\":1}}],[\"++rk\",{\"1\":{\"85\":1}}],[\"++i\",{\"1\":{\"85\":1}}],[\"+=\",{\"1\":{\"79\":1}}],[\"+$\",{\"1\":{\"26\":1}}],[\"+\",{\"0\":{\"39\":1,\"120\":1},\"1\":{\"17\":2,\"26\":4,\"31\":1,\"39\":2,\"55\":1,\"79\":5,\"82\":2,\"85\":5,\"104\":2,\"106\":4,\"118\":8,\"174\":1,\"200\":1,\"201\":1,\"202\":3}}],[\"q\",{\"1\":{\"148\":1,\"157\":2}}],[\"questions\",{\"1\":{\"207\":1,\"208\":2,\"226\":1}}],[\"questionsue\",{\"1\":{\"207\":1}}],[\"question\",{\"1\":{\"206\":1}}],[\"queue\",{\"1\":{\"79\":5}}],[\"quitandinstall\",{\"1\":{\"53\":1}}],[\"quit\",{\"1\":{\"50\":1}}],[\"quick\",{\"1\":{\"17\":1}}],[\"qftjs\",{\"1\":{\"14\":1}}],[\"博客园\",{\"1\":{\"17\":1}}],[\"||\",{\"1\":{\"26\":9,\"27\":3,\"103\":1,\"142\":1,\"184\":1}}],[\"|\",{\"1\":{\"17\":1,\"26\":7,\"147\":4,\"156\":1,\"206\":1}}],[\"或发布者\",{\"1\":{\"141\":1}}],[\"或小程序没有浏览器\",{\"1\":{\"134\":1}}],[\"或者一些其他信息\",{\"1\":{\"132\":1}}],[\"或者针对该类型的接口前端请求关闭该配置即可\",{\"1\":{\"121\":1}}],[\"或应用没有更新\",{\"1\":{\"115\":1}}],[\"或新的响应\",{\"1\":{\"106\":1}}],[\"或窗口\",{\"1\":{\"84\":1}}],[\"或功能简单的脚手架\",{\"1\":{\"30\":1}}],[\"或\",{\"1\":{\"17\":1,\"24\":1,\"26\":1,\"29\":1,\"44\":1,\"47\":1,\"100\":1,\"107\":1,\"166\":1,\"202\":1}}],[\"老项目迁移\",{\"1\":{\"17\":1}}],[\"软链接优化依赖管理\",{\"1\":{\"17\":1}}],[\"软链以指向该包\",{\"1\":{\"11\":1}}],[\"优质博文\",{\"1\":{\"206\":1}}],[\"优化已减少了大部分无意义的遍历过程\",{\"1\":{\"185\":1}}],[\"优化\",{\"1\":{\"172\":1,\"180\":1,\"214\":1}}],[\"优先级调度\",{\"1\":{\"185\":1}}],[\"优先级高于\",{\"1\":{\"100\":1}}],[\"优先使用node\",{\"1\":{\"47\":1}}],[\"优先的未更新问题\",{\"1\":{\"13\":1}}],[\"优点是生命周期长\",{\"1\":{\"125\":1}}],[\"优点是使用简单\",{\"1\":{\"31\":1}}],[\"优点是选项更灵活\",{\"1\":{\"30\":1}}],[\"优势\",{\"1\":{\"17\":1}}],[\"java\",{\"1\":{\"206\":1}}],[\"javascript工具库原理解析与实战\",{\"1\":{\"64\":1}}],[\"javascript\",{\"0\":{\"164\":1,\"216\":1},\"1\":{\"25\":1,\"26\":1,\"42\":1,\"64\":6,\"66\":1,\"67\":1,\"74\":1,\"93\":2,\"124\":1,\"132\":1,\"140\":1,\"141\":1,\"145\":2,\"150\":1,\"151\":2,\"154\":2,\"157\":1,\"158\":1,\"162\":2,\"164\":3,\"166\":1,\"201\":1,\"226\":3}}],[\"jquery\",{\"1\":{\"199\":1}}],[\"just\",{\"1\":{\"180\":1}}],[\"junctions\",{\"1\":{\"17\":1}}],[\"jit时\",{\"1\":{\"180\":1}}],[\"jit\",{\"1\":{\"180\":5}}],[\"jiti\",{\"1\":{\"25\":2}}],[\"job\",{\"1\":{\"156\":1}}],[\"jobs\",{\"1\":{\"156\":1}}],[\"join\",{\"1\":{\"27\":2,\"47\":2,\"48\":1}}],[\"jest\",{\"1\":{\"152\":1}}],[\"jt\",{\"1\":{\"47\":1}}],[\"jsnext\",{\"1\":{\"153\":1}}],[\"js中内置的所有内置模块的名称\",{\"1\":{\"47\":1}}],[\"js环境下运行\",{\"1\":{\"47\":1}}],[\"js内置模块\",{\"1\":{\"47\":1}}],[\"jsx的\",{\"1\":{\"173\":1}}],[\"jsx\",{\"1\":{\"44\":1,\"47\":2,\"173\":11,\"176\":1,\"180\":5,\"181\":2}}],[\"js\",{\"0\":{\"71\":1},\"1\":{\"8\":1,\"25\":5,\"34\":1,\"40\":1,\"44\":1,\"47\":4,\"48\":3,\"50\":1,\"64\":1,\"115\":2,\"116\":2,\"122\":1,\"128\":3,\"132\":1,\"135\":1,\"136\":1,\"141\":1,\"148\":2,\"149\":1,\"150\":1,\"153\":4,\"154\":1,\"156\":1,\"167\":1,\"168\":1,\"173\":1,\"179\":1,\"180\":3,\"199\":3,\"200\":1,\"202\":1,\"221\":1,\"222\":1,\"225\":2}}],[\"json`\",{\"1\":{\"27\":1}}],[\"json\",{\"0\":{\"153\":1,\"166\":1,\"167\":1},\"1\":{\"2\":1,\"5\":2,\"6\":1,\"11\":1,\"13\":2,\"14\":1,\"24\":1,\"25\":2,\"26\":1,\"27\":6,\"34\":1,\"47\":9,\"135\":1,\"150\":1,\"152\":1,\"157\":1,\"166\":2}}],[\"及以上版本可以使用\",{\"1\":{\"24\":1}}],[\"及\",{\"1\":{\"17\":2,\"40\":1,\"132\":1}}],[\"及原因\",{\"1\":{\"17\":1}}],[\"介绍下\",{\"1\":{\"223\":1}}],[\"介绍\",{\"0\":{\"21\":1,\"132\":1},\"1\":{\"17\":1}}],[\"介绍特性\",{\"1\":{\"17\":1}}],[\"省略部分配置\",{\"1\":{\"47\":1}}],[\"省\",{\"1\":{\"17\":1}}],[\"快捷键\",{\"1\":{\"118\":1}}],[\"快速性\",{\"1\":{\"131\":1}}],[\"快速创建一个\",{\"1\":{\"33\":1}}],[\"快速创建一个原型\",{\"1\":{\"22\":1}}],[\"快速原型开发\",{\"1\":{\"22\":1}}],[\"快速的\",{\"1\":{\"1\":1}}],[\"快\",{\"1\":{\"17\":1}}],[\"掘金技术征文\",{\"1\":{\"206\":1}}],[\"掘金小册\",{\"1\":{\"110\":1,\"137\":1}}],[\"掘金\",{\"1\":{\"17\":3,\"110\":1,\"137\":1,\"206\":3}}],[\"而虚拟dom\",{\"1\":{\"201\":1}}],[\"而声明式代码不一定能做到\",{\"1\":{\"200\":1}}],[\"而作为学习者\",{\"1\":{\"198\":1}}],[\"而在\",{\"1\":{\"179\":1}}],[\"而只会对代码进行类型检查和语法分析等操作\",{\"1\":{\"151\":1}}],[\"而内存缓存仅会保存合适的内容\",{\"1\":{\"128\":1}}],[\"而缺点则是获取资源的速度相对内存缓存较慢\",{\"1\":{\"125\":1}}],[\"而像\",{\"1\":{\"122\":1}}],[\"而浏览器是根据本地时间来判断缓存是否过期的\",{\"1\":{\"107\":1}}],[\"而当在响应首部中被返回时\",{\"1\":{\"96\":1}}],[\"而无需每次都从原始数据源获取数据\",{\"1\":{\"90\":1}}],[\"而且可能会稍微快一些\",{\"1\":{\"85\":1}}],[\"而右指针为右边界\",{\"1\":{\"84\":1}}],[\"而是在浏览器中执行时报错\",{\"1\":{\"180\":1}}],[\"而是在浏览器空闲时下载资源\",{\"1\":{\"129\":1}}],[\"而是编译成\",{\"1\":{\"162\":1}}],[\"而是继续使用旧版本的\",{\"1\":{\"132\":1}}],[\"而是禁用缓存\",{\"1\":{\"118\":1}}],[\"而是直接替换掉变量名\",{\"1\":{\"47\":1}}],[\"而是共享相同的包存储\",{\"1\":{\"3\":1}}],[\"而\",{\"1\":{\"25\":1,\"96\":1,\"104\":1,\"115\":1,\"118\":1,\"128\":1,\"135\":1,\"141\":1,\"150\":1}}],[\"而不会破坏应用功能\",{\"1\":{\"162\":1}}],[\"而不生成任何实际的输出文件\",{\"1\":{\"151\":1}}],[\"而不走缓存的则是等待页面加载完通过脚本异步插入到\",{\"1\":{\"120\":1}}],[\"而不用数组下标方式获取字符呢\",{\"1\":{\"85\":1}}],[\"而不用\",{\"1\":{\"25\":1}}],[\"而不是自变量的值\",{\"1\":{\"179\":1}}],[\"而不是框架\",{\"1\":{\"172\":1}}],[\"而不是跳转到编译后的文件\",{\"1\":{\"153\":1}}],[\"而不是被打包进最终的输出文件中\",{\"1\":{\"47\":1}}],[\"而不是\",{\"1\":{\"17\":1}}],[\"能搞懂\",{\"1\":{\"206\":1}}],[\"能自动追踪依赖的技术\",{\"1\":{\"179\":1}}],[\"能让代码更好地弹性伸缩\",{\"1\":{\"161\":1}}],[\"能够跑起来\",{\"1\":{\"61\":1}}],[\"能帮助开发者提升效率和开发体验\",{\"1\":{\"21\":1}}],[\"能更安全地处理依赖访问和解析问题\",{\"1\":{\"16\":1}}],[\"能高效地管理包的版本及依赖\",{\"1\":{\"16\":1}}],[\"上的时间越少\",{\"1\":{\"176\":1}}],[\"上的应用\",{\"1\":{\"17\":1}}],[\"上绑定事件\",{\"1\":{\"173\":1}}],[\"上进行持续集成\",{\"1\":{\"156\":1}}],[\"上进行数据交换的基础\",{\"1\":{\"93\":1}}],[\"上提供了提交代码\",{\"1\":{\"155\":1}}],[\"上比较流行的封装\",{\"1\":{\"135\":1}}],[\"上有处理此问题的包\",{\"1\":{\"135\":1}}],[\"上述模板中只的\",{\"1\":{\"184\":1}}],[\"上述实现与\",{\"1\":{\"179\":1}}],[\"上述配置以\",{\"1\":{\"122\":1}}],[\"上述统一化的功能可当做独立的包发布和维护\",{\"1\":{\"22\":1}}],[\"上图流程图描述了协商缓存的生效流程\",{\"1\":{\"106\":1}}],[\"上方代码中的\",{\"1\":{\"52\":1}}],[\"上面提到的\",{\"1\":{\"94\":1}}],[\"上面代码中的\",{\"1\":{\"51\":1}}],[\"上面定义了\",{\"1\":{\"26\":1}}],[\"上面的示例编译生成的\",{\"1\":{\"184\":1}}],[\"上面的\",{\"1\":{\"6\":1,\"28\":1,\"179\":1}}],[\"上文中\",{\"1\":{\"26\":1}}],[\"上\",{\"0\":{\"88\":1},\"1\":{\"23\":1}}],[\"上存在的问题\",{\"1\":{\"16\":1}}],[\"退出应用程序并安装更新\",{\"1\":{\"53\":1}}],[\"退出electron应用程序\",{\"1\":{\"52\":1}}],[\"退出并安装更新\",{\"1\":{\"52\":1}}],[\"退出\",{\"1\":{\"15\":1}}],[\"环境中运行测试\",{\"1\":{\"150\":1}}],[\"环境\",{\"1\":{\"15\":1}}],[\"均将默认走\",{\"1\":{\"15\":1}}],[\"模板代码对应的\",{\"1\":{\"184\":1}}],[\"模板代码如下\",{\"1\":{\"184\":1}}],[\"模板语法编译为\",{\"1\":{\"181\":1}}],[\"模板语法是固定的\",{\"1\":{\"180\":1}}],[\"模板语法\",{\"1\":{\"173\":1}}],[\"模板语法都可以描述逻辑与\",{\"1\":{\"173\":1}}],[\"模板语言能够简练\",{\"1\":{\"173\":1}}],[\"模板语言\",{\"1\":{\"173\":1}}],[\"模板集中统一管理\",{\"1\":{\"29\":1}}],[\"模板文件目录\",{\"1\":{\"27\":1}}],[\"模板生成项目\",{\"1\":{\"27\":1}}],[\"模板\",{\"1\":{\"26\":1}}],[\"模式都属于行为型设计模式\",{\"1\":{\"141\":1}}],[\"模式三\",{\"0\":{\"119\":1}}],[\"模式二\",{\"1\":{\"118\":1}}],[\"模式一\",{\"1\":{\"118\":1}}],[\"模式管理项目\",{\"1\":{\"16\":1}}],[\"模式\",{\"0\":{\"116\":1},\"1\":{\"15\":2}}],[\"模块化\",{\"1\":{\"217\":1}}],[\"模块打包成\",{\"1\":{\"154\":1}}],[\"模块打包工具\",{\"1\":{\"154\":1}}],[\"模块或\",{\"1\":{\"153\":1}}],[\"模块的导入和导出\",{\"1\":{\"153\":1}}],[\"模块规范的入口文件\",{\"1\":{\"153\":2}}],[\"模块设置事件监听器\",{\"1\":{\"53\":1}}],[\"模块转换为\",{\"1\":{\"47\":1}}],[\"模块引入\",{\"1\":{\"47\":1}}],[\"模块\",{\"1\":{\"47\":4,\"149\":1,\"150\":1,\"152\":1}}],[\"模块解析命令行参数\",{\"1\":{\"26\":1}}],[\"模块解析器将找到正确的\",{\"1\":{\"8\":1}}],[\"模块支持用户交互\",{\"1\":{\"26\":1}}],[\"模块实例不能共享\",{\"1\":{\"5\":1}}],[\"如使用\",{\"1\":{\"199\":1}}],[\"如下定义\",{\"1\":{\"174\":1}}],[\"如下语句\",{\"1\":{\"173\":1}}],[\"如与逻辑配合\",{\"1\":{\"173\":1}}],[\"如构建工具\",{\"1\":{\"172\":1}}],[\"如时输入代码有错\",{\"1\":{\"164\":1}}],[\"如上文定义的\",{\"1\":{\"157\":1}}],[\"如上面的\",{\"1\":{\"149\":1}}],[\"如上图\",{\"1\":{\"30\":1}}],[\"如像\",{\"1\":{\"134\":1}}],[\"如何解析\",{\"1\":{\"225\":1}}],[\"如何解决\",{\"1\":{\"212\":1}}],[\"如何生成一个递增数列的数组\",{\"1\":{\"225\":1}}],[\"如何把嵌套的数组扁平化\",{\"1\":{\"225\":1}}],[\"如何理解\",{\"1\":{\"224\":1}}],[\"如何理解值类型和引用类型\",{\"1\":{\"219\":1}}],[\"如何优化\",{\"1\":{\"224\":1}}],[\"如何处理循环的异步操作\",{\"1\":{\"221\":1}}],[\"如何正确判断\",{\"1\":{\"221\":1}}],[\"如何实现深拷贝\",{\"1\":{\"225\":1}}],[\"如何实现网页和\",{\"1\":{\"224\":1}}],[\"如何实现网页多标签\",{\"1\":{\"224\":1}}],[\"如何实现一个\",{\"1\":{\"220\":1}}],[\"如何实现\",{\"1\":{\"213\":1,\"225\":1}}],[\"如何创建bfc\",{\"1\":{\"212\":1}}],[\"如何从\",{\"1\":{\"184\":1}}],[\"如何在组件间传输数据\",{\"1\":{\"174\":1}}],[\"如何让\",{\"1\":{\"115\":1}}],[\"如何看源码\",{\"0\":{\"61\":1}}],[\"如大小\",{\"1\":{\"109\":1}}],[\"如\",{\"1\":{\"28\":2,\"29\":1,\"92\":1,\"93\":1,\"100\":1,\"108\":1,\"153\":1,\"172\":2,\"173\":2,\"177\":1,\"180\":2,\"185\":1,\"199\":1}}],[\"如选择生成\",{\"1\":{\"29\":1}}],[\"如选择\",{\"1\":{\"27\":1}}],[\"如beta或者rc版本\",{\"1\":{\"15\":1}}],[\"如果使用\",{\"1\":{\"180\":2}}],[\"如果不指定\",{\"1\":{\"154\":1}}],[\"如果不选择\",{\"1\":{\"27\":1}}],[\"如果处理函数不存在于列表中\",{\"1\":{\"145\":1}}],[\"如果指定了要注销的事件处理函数\",{\"1\":{\"142\":1}}],[\"如果指定位置超出了字符串的范围\",{\"1\":{\"85\":1}}],[\"如果省略\",{\"1\":{\"142\":1}}],[\"如果存在\",{\"1\":{\"142\":1}}],[\"如果存在过多的\",{\"1\":{\"135\":1}}],[\"如果存在项目名称对应的目录\",{\"1\":{\"27\":1}}],[\"如果校验成功\",{\"1\":{\"134\":1}}],[\"如果新版本的\",{\"1\":{\"132\":2}}],[\"如果我们在新版本的\",{\"1\":{\"132\":2}}],[\"如果我们更新了\",{\"1\":{\"132\":1}}],[\"如果注册失败\",{\"1\":{\"132\":1}}],[\"如果支持\",{\"1\":{\"132\":1}}],[\"如果跳转到使用它的页面\",{\"1\":{\"129\":1}}],[\"如果磁盘中也没有找到\",{\"1\":{\"127\":1}}],[\"如果内存中没找到\",{\"1\":{\"127\":1}}],[\"如果资源在内存中存在\",{\"1\":{\"127\":1}}],[\"如果重新请求那便是强缓存的失效流程\",{\"1\":{\"125\":1}}],[\"如果要修改上述的跨域配置\",{\"1\":{\"122\":1}}],[\"如果浏览器发起了预检请求\",{\"1\":{\"121\":1}}],[\"如果采用开发者工具\",{\"1\":{\"120\":1}}],[\"如果同一秒钟内多次修改了资源\",{\"1\":{\"107\":1}}],[\"如果值不同\",{\"1\":{\"107\":1}}],[\"如果值相同\",{\"1\":{\"107\":1}}],[\"如果时间戳不同\",{\"1\":{\"107\":1}}],[\"如果时间戳相同\",{\"1\":{\"107\":1}}],[\"如果缓存已更新\",{\"1\":{\"106\":1}}],[\"如果缓存未更新\",{\"1\":{\"106\":1}}],[\"如果缓存未命中\",{\"1\":{\"106\":1}}],[\"如果缓存命中\",{\"1\":{\"106\":1}}],[\"如果服务器发现\",{\"1\":{\"98\":1}}],[\"如果在\",{\"1\":{\"97\":2}}],[\"如果确定输入的字符串是合法的\",{\"1\":{\"85\":1}}],[\"如果\",{\"1\":{\"82\":1,\"85\":1,\"132\":1,\"135\":1}}],[\"如果队列长度等于规定长度\",{\"1\":{\"79\":1}}],[\"如果队列的长度超过了滑动窗口的大小\",{\"1\":{\"78\":1}}],[\"如果有定义\",{\"1\":{\"156\":1}}],[\"如果有处理函数\",{\"1\":{\"142\":1}}],[\"如果有\",{\"1\":{\"54\":1}}],[\"如果有可用更新\",{\"1\":{\"52\":1}}],[\"如果是当前进程是默认应用\",{\"1\":{\"50\":1}}],[\"如果想生成\",{\"1\":{\"35\":1}}],[\"如果依赖发生变化\",{\"1\":{\"29\":1}}],[\"如果目录已存在\",{\"1\":{\"27\":1}}],[\"如果上面选择了平台类型\",{\"1\":{\"27\":1}}],[\"如果命令行指定的模板不在模板列表中\",{\"1\":{\"27\":1}}],[\"如果选择覆盖\",{\"1\":{\"27\":1}}],[\"如果选择不覆盖\",{\"1\":{\"27\":1}}],[\"如果没有安装\",{\"1\":{\"24\":1}}],[\"如果该脚本放在根目录下\",{\"1\":{\"132\":1}}],[\"如果该\",{\"1\":{\"8\":1}}],[\"如果一个package的依赖有peer依赖\",{\"1\":{\"8\":1}}],[\"如果一个\",{\"1\":{\"8\":1}}],[\"如果某个包不存在于本地的\",{\"1\":{\"7\":1}}],[\"如果找到相同版本的包就不会重新安装\",{\"1\":{\"5\":1}}],[\"修改页面标题\",{\"1\":{\"174\":1}}],[\"修改缓存相关配置\",{\"1\":{\"122\":1}}],[\"修改跨域相关配置\",{\"1\":{\"122\":1}}],[\"修改时间被篡改问题\",{\"1\":{\"107\":1}}],[\"修改\",{\"1\":{\"27\":2,\"122\":1}}],[\"修改发布包的版本\",{\"1\":{\"14\":1}}],[\"修改配置\",{\"1\":{\"13\":1}}],[\"race\",{\"1\":{\"225\":1}}],[\"ractive\",{\"1\":{\"183\":1}}],[\"radius\",{\"1\":{\"72\":2}}],[\"rules\",{\"1\":{\"152\":2,\"167\":1}}],[\"runtime\",{\"1\":{\"173\":1}}],[\"runs\",{\"1\":{\"156\":1}}],[\"runner\",{\"1\":{\"41\":1}}],[\"run\",{\"1\":{\"14\":1,\"25\":1,\"34\":1,\"148\":3,\"149\":2,\"156\":2}}],[\"rf\",{\"1\":{\"149\":1}}],[\"rm\",{\"1\":{\"149\":1}}],[\"rmsync\",{\"1\":{\"26\":2}}],[\"rxjs\",{\"1\":{\"141\":1}}],[\"r\",{\"1\":{\"118\":4}}],[\"rk\",{\"1\":{\"85\":8}}],[\"r2coding\",{\"1\":{\"74\":1}}],[\"roadmap\",{\"1\":{\"74\":1}}],[\"router\",{\"1\":{\"64\":1,\"172\":2}}],[\"rollup\",{\"0\":{\"47\":1},\"1\":{\"47\":13,\"153\":1,\"217\":1}}],[\"root\",{\"1\":{\"27\":5,\"44\":3}}],[\"rc\",{\"1\":{\"15\":1}}],[\"rimraf\",{\"1\":{\"14\":2,\"148\":1,\"149\":1}}],[\"rem自适应\",{\"1\":{\"210\":1}}],[\"removeasdefaultprotocolclient\",{\"1\":{\"50\":1}}],[\"removejunk\",{\"1\":{\"48\":3}}],[\"retina\",{\"1\":{\"210\":1,\"213\":1}}],[\"returns\",{\"1\":{\"142\":1}}],[\"return\",{\"1\":{\"26\":14,\"51\":2,\"79\":1,\"82\":2,\"85\":1,\"122\":1,\"142\":1,\"147\":1,\"179\":3,\"184\":4,\"222\":1}}],[\"reference\",{\"1\":{\"177\":1}}],[\"ref\",{\"1\":{\"173\":1,\"184\":4}}],[\"rel=\",{\"1\":{\"129\":2}}],[\"release\",{\"1\":{\"14\":3,\"148\":1,\"155\":1}}],[\"release工作流\",{\"0\":{\"12\":1}}],[\"registration\",{\"1\":{\"132\":3}}],[\"registry\",{\"1\":{\"14\":1,\"24\":1,\"34\":4,\"40\":1}}],[\"registry=https\",{\"1\":{\"14\":1,\"40\":1}}],[\"registered\",{\"1\":{\"132\":1}}],[\"register\",{\"1\":{\"132\":2,\"150\":2}}],[\"regex101\",{\"1\":{\"70\":1}}],[\"reject\",{\"1\":{\"46\":2}}],[\"render\",{\"1\":{\"51\":1,\"177\":2,\"181\":1,\"184\":5,\"202\":2}}],[\"renderer\",{\"1\":{\"44\":5,\"55\":1}}],[\"renamefiles\",{\"1\":{\"26\":1}}],[\"requested\",{\"1\":{\"121\":1,\"122\":1}}],[\"requesterror\",{\"1\":{\"40\":1}}],[\"request\",{\"1\":{\"93\":1,\"104\":4,\"156\":3}}],[\"require\",{\"1\":{\"5\":1,\"25\":2,\"50\":1,\"150\":1,\"153\":2}}],[\"reconcile\",{\"1\":{\"185\":1}}],[\"recommended\",{\"1\":{\"152\":2,\"167\":2}}],[\"record<eventtype\",{\"1\":{\"147\":3}}],[\"record<string\",{\"1\":{\"26\":1,\"147\":2}}],[\"recursive\",{\"1\":{\"26\":3,\"27\":1}}],[\"ready\",{\"1\":{\"51\":1}}],[\"readme\",{\"1\":{\"34\":1,\"148\":1,\"157\":2}}],[\"readfilesync\",{\"1\":{\"27\":1}}],[\"readdirsync\",{\"1\":{\"26\":5,\"27\":1}}],[\"reactjs\",{\"1\":{\"208\":1}}],[\"reactivity\",{\"0\":{\"235\":1},\"1\":{\"179\":1}}],[\"react\",{\"0\":{\"177\":1,\"185\":1,\"188\":1,\"192\":1,\"208\":1},\"1\":{\"10\":1,\"29\":2,\"64\":2,\"172\":6,\"173\":5,\"174\":2,\"175\":1,\"176\":1,\"177\":1,\"179\":6,\"180\":1,\"181\":1,\"185\":8,\"208\":1},\"2\":{\"186\":1,\"193\":1}}],[\"replacement\",{\"1\":{\"47\":2}}],[\"replace\",{\"1\":{\"26\":4,\"47\":3}}],[\"redux\",{\"1\":{\"172\":1,\"175\":1,\"177\":1}}],[\"reducer\",{\"1\":{\"177\":1}}],[\"reduce\",{\"1\":{\"26\":1,\"223\":1}}],[\"red\",{\"1\":{\"26\":4,\"48\":1}}],[\"response\",{\"1\":{\"93\":1,\"104\":9}}],[\"resolution\",{\"1\":{\"57\":1}}],[\"resolve\",{\"1\":{\"8\":1,\"26\":5,\"27\":1,\"44\":4,\"46\":2,\"47\":1,\"57\":2}}],[\"resizable\",{\"1\":{\"51\":1}}],[\"result\",{\"1\":{\"26\":4,\"27\":1}}],[\"reset\",{\"1\":{\"26\":6}}],[\"restricted\",{\"1\":{\"13\":1}}],[\"抬升依赖他的那些包的版本\",{\"1\":{\"13\":1}}],[\"量级\",{\"1\":{\"13\":1}}],[\"vnode\",{\"1\":{\"184\":5}}],[\"vdom\",{\"1\":{\"181\":6,\"183\":1,\"184\":3,\"185\":1}}],[\"v17\",{\"1\":{\"173\":2}}],[\"v16\",{\"1\":{\"27\":1}}],[\"vsudheerj\",{\"1\":{\"207\":1}}],[\"vs\",{\"0\":{\"164\":1}}],[\"v2\",{\"1\":{\"156\":5}}],[\"void\",{\"1\":{\"147\":8}}],[\"virtual\",{\"0\":{\"181\":1}}],[\"viable\",{\"1\":{\"61\":1}}],[\"via\",{\"1\":{\"57\":1}}],[\"vitejs\",{\"1\":{\"36\":1}}],[\"vitesse\",{\"0\":{\"31\":1},\"1\":{\"31\":2}}],[\"vite\",{\"0\":{\"29\":1,\"39\":1,\"44\":1},\"1\":{\"28\":2,\"29\":3,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"36\":2,\"39\":2,\"41\":2,\"42\":1,\"43\":3,\"44\":4,\"47\":1,\"55\":1,\"217\":1},\"2\":{\"59\":1}}],[\"vega\",{\"1\":{\"73\":1}}],[\"vendor\",{\"1\":{\"50\":1}}],[\"version\",{\"1\":{\"13\":3,\"14\":2,\"26\":1,\"47\":1,\"148\":2,\"155\":4,\"156\":1}}],[\"var\",{\"1\":{\"48\":1}}],[\"variant\",{\"1\":{\"26\":6,\"27\":2}}],[\"variants\",{\"1\":{\"26\":6}}],[\"vanilla\",{\"1\":{\"29\":2}}],[\"val\",{\"1\":{\"77\":1,\"79\":3}}],[\"validate\",{\"1\":{\"26\":1}}],[\"value++\",{\"1\":{\"184\":1}}],[\"value>\",{\"1\":{\"134\":1}}],[\"values\",{\"1\":{\"26\":2}}],[\"value\",{\"1\":{\"26\":3,\"104\":7,\"163\":1,\"179\":4}}],[\"v\",{\"1\":{\"26\":2}}],[\"v6\",{\"1\":{\"24\":1}}],[\"vue2\",{\"1\":{\"179\":1}}],[\"vueuse\",{\"1\":{\"62\":1}}],[\"vueplugin\",{\"1\":{\"44\":2,\"57\":1}}],[\"vue3\",{\"0\":{\"184\":1},\"1\":{\"39\":1,\"55\":1,\"180\":1,\"184\":4,\"185\":1}}],[\"vuejs3\",{\"1\":{\"50\":2}}],[\"vuejsx\",{\"1\":{\"44\":2,\"57\":1}}],[\"vuejs\",{\"1\":{\"36\":1,\"207\":2}}],[\"vue\",{\"0\":{\"30\":1,\"207\":1,\"236\":1},\"1\":{\"11\":1,\"28\":2,\"29\":3,\"30\":2,\"31\":1,\"33\":2,\"36\":2,\"44\":2,\"50\":5,\"57\":1,\"62\":1,\"64\":1,\"172\":5,\"176\":1,\"179\":3,\"181\":1,\"183\":2,\"184\":2,\"185\":1,\"199\":3,\"200\":1,\"202\":1,\"207\":2},\"2\":{\"196\":1,\"203\":1}}],[\"开启更新流程\",{\"1\":{\"185\":1}}],[\"开启所有严格类型检查选项\",{\"1\":{\"166\":1}}],[\"开始接管网络请求的过程\",{\"1\":{\"132\":1}}],[\"开始接管网络请求\",{\"1\":{\"132\":1}}],[\"开始枚举下一个字符作为起始位置\",{\"1\":{\"84\":1}}],[\"开始交互式填写变更集\",{\"1\":{\"14\":1}}],[\"开发者武器库\",{\"1\":{\"70\":1}}],[\"开发者设置\",{\"1\":{\"51\":1}}],[\"开发工具\",{\"0\":{\"70\":1}}],[\"开发工具扩展\",{\"1\":{\"50\":1}}],[\"开发\",{\"1\":{\"55\":1}}],[\"开发模式下自动开启devtools\",{\"1\":{\"51\":1}}],[\"开发环境添加\",{\"1\":{\"51\":1}}],[\"开发环境加载\",{\"1\":{\"50\":1}}],[\"开发构建\",{\"0\":{\"41\":1}}],[\"开发新项目大都是直接复制之前的项目代码\",{\"1\":{\"22\":1}}],[\"开头的目录\",{\"1\":{\"27\":1}}],[\"开头的包\",{\"1\":{\"10\":1}}],[\"开源使用\",{\"1\":{\"13\":1}}],[\"不支持任何运行时内容\",{\"1\":{\"202\":1}}],[\"不支持手动触发\",{\"1\":{\"142\":1}}],[\"不能在条件语句中声明\",{\"1\":{\"179\":1}}],[\"不能超过\",{\"1\":{\"135\":1}}],[\"不包含的\",{\"1\":{\"172\":1}}],[\"不包含重复字符的最长子串\",{\"1\":{\"84\":1}}],[\"不直接编译成字节码\",{\"1\":{\"162\":1}}],[\"不输出冗余信息\",{\"1\":{\"157\":1}}],[\"不返回值\",{\"1\":{\"147\":1}}],[\"不可通过\",{\"1\":{\"136\":1}}],[\"不需要安装\",{\"1\":{\"131\":1}}],[\"不需要变动\",{\"1\":{\"13\":1}}],[\"不触发删除操作则一直存在\",{\"1\":{\"125\":1}}],[\"不适合存储大型文件\",{\"1\":{\"124\":1}}],[\"不适用场景\",{\"1\":{\"17\":1}}],[\"不建议使用\",{\"1\":{\"116\":1}}],[\"不同值代表不同类型\",{\"1\":{\"184\":1}}],[\"不同的服务器实现可能采用不同的方式来生成\",{\"1\":{\"108\":1}}],[\"不同之处在于\",{\"1\":{\"96\":1}}],[\"不存在时\",{\"1\":{\"103\":1}}],[\"不一致时\",{\"1\":{\"98\":1}}],[\"不大于多少秒的资源\",{\"1\":{\"96\":1}}],[\"不断地移动右指针\",{\"1\":{\"85\":1}}],[\"不变\",{\"1\":{\"81\":2}}],[\"不生成源映射文件\",{\"1\":{\"47\":1}}],[\"不要将替换的结果包裹在一个赋值语句中\",{\"1\":{\"47\":1}}],[\"不要让\",{\"1\":{\"13\":1}}],[\"不合法需要重新输入\",{\"1\":{\"27\":1}}],[\"不合法需重新输入\",{\"1\":{\"26\":1}}],[\"不是有效模板\",{\"1\":{\"26\":1}}],[\"不为空\",{\"1\":{\"26\":1}}],[\"不推荐\",{\"1\":{\"17\":1}}],[\"不会\",{\"1\":{\"185\":1}}],[\"不会在页面加载时立即下载资源\",{\"1\":{\"129\":1}}],[\"不会因为时间戳精度问题而产生误差\",{\"1\":{\"107\":1}}],[\"不会将每个包都安装在独立的目录中\",{\"1\":{\"3\":1}}],[\"不会重复安装同一个包\",{\"1\":{\"2\":1}}],[\"说明请求报头上并没有加上特定的两个首部\",{\"1\":{\"120\":1}}],[\"说明服务器上的文件已经被更新\",{\"1\":{\"98\":1}}],[\"说明\",{\"1\":{\"13\":1,\"166\":1}}],[\"mustache\",{\"1\":{\"173\":1}}],[\"mutlirepo\",{\"1\":{\"29\":1}}],[\"mcconnell\",{\"1\":{\"64\":1}}],[\"mvp\",{\"1\":{\"61\":3}}],[\"microtask\",{\"1\":{\"222\":1}}],[\"microbundle\",{\"1\":{\"148\":2,\"153\":1,\"154\":5}}],[\"mitt<events\",{\"1\":{\"147\":1}}],[\"mitt\",{\"0\":{\"140\":1},\"1\":{\"140\":3,\"142\":2,\"143\":1,\"147\":1,\"153\":7,\"158\":2}}],[\"min\",{\"1\":{\"82\":2}}],[\"minimum\",{\"1\":{\"61\":1}}],[\"minimist<\",{\"1\":{\"25\":1}}],[\"minimist\",{\"1\":{\"25\":3,\"26\":2}}],[\"mini\",{\"1\":{\"52\":1,\"62\":1}}],[\"minify\",{\"1\":{\"44\":1,\"47\":1}}],[\"mirrors\",{\"1\":{\"40\":1}}],[\"mirror=https\",{\"1\":{\"40\":2}}],[\"md5\",{\"1\":{\"108\":1}}],[\"mdn\",{\"1\":{\"66\":1}}],[\"md\",{\"1\":{\"34\":1}}],[\"memo\",{\"1\":{\"185\":1}}],[\"memory\",{\"0\":{\"123\":1,\"124\":1},\"1\":{\"92\":1,\"100\":1,\"120\":1}}],[\"method\",{\"1\":{\"122\":1}}],[\"methods\",{\"1\":{\"121\":2,\"122\":1}}],[\"meta\",{\"1\":{\"27\":1,\"96\":1,\"173\":1}}],[\"menuconfig\",{\"1\":{\"51\":1}}],[\"menu\",{\"1\":{\"51\":4}}],[\"messagebox\",{\"1\":{\"52\":1}}],[\"message\",{\"1\":{\"26\":7,\"53\":1}}],[\"my\",{\"1\":{\"25\":2,\"26\":2,\"31\":2,\"35\":1}}],[\"mjs\",{\"1\":{\"25\":2,\"47\":1,\"153\":4}}],[\"mkdirsync\",{\"1\":{\"26\":1,\"27\":1}}],[\"mkdir\",{\"1\":{\"25\":1,\"165\":1,\"168\":1}}],[\"markdown\",{\"1\":{\"157\":2}}],[\"manifest\",{\"1\":{\"131\":1}}],[\"manualrestart\",{\"1\":{\"46\":4,\"48\":2}}],[\"macrotask\",{\"1\":{\"222\":1}}],[\"mac\",{\"1\":{\"118\":2}}],[\"may\",{\"1\":{\"95\":1,\"97\":2}}],[\"match\",{\"0\":{\"98\":1},\"1\":{\"94\":1,\"98\":4,\"107\":2}}],[\"math\",{\"1\":{\"82\":5,\"85\":1}}],[\"make\",{\"1\":{\"57\":1}}],[\"maxage=3600\",{\"1\":{\"96\":1,\"100\":1}}],[\"maxage\",{\"0\":{\"100\":1},\"1\":{\"94\":1,\"96\":4,\"100\":1}}],[\"maxlength\",{\"1\":{\"82\":11}}],[\"max\",{\"0\":{\"100\":1,\"101\":1},\"1\":{\"52\":1,\"82\":3,\"85\":1,\"94\":1,\"96\":7,\"100\":2,\"101\":2,\"103\":4,\"104\":4,\"115\":1,\"122\":1,\"134\":1}}],[\"map<\",{\"1\":{\"147\":1}}],[\"map<string\",{\"1\":{\"147\":1}}],[\"map\",{\"1\":{\"26\":4,\"142\":5,\"146\":1,\"147\":3,\"217\":1,\"223\":2}}],[\"major\",{\"1\":{\"13\":1}}],[\"mainfunc\",{\"1\":{\"51\":1,\"52\":1}}],[\"mainwindowconfig\",{\"1\":{\"51\":1}}],[\"mainwindow\",{\"1\":{\"51\":9}}],[\"mainwatcher\",{\"1\":{\"46\":3}}],[\"maininit\",{\"1\":{\"51\":2}}],[\"mainopt\",{\"1\":{\"46\":1}}],[\"main\",{\"1\":{\"13\":1,\"25\":1,\"46\":1,\"47\":2,\"48\":2,\"50\":1,\"51\":1,\"53\":1,\"153\":3,\"156\":3}}],[\"mocha\",{\"1\":{\"148\":5,\"149\":1,\"150\":9,\"152\":1}}],[\"movingaverage\",{\"1\":{\"77\":2,\"79\":7}}],[\"modified\",{\"0\":{\"97\":2,\"107\":1},\"1\":{\"94\":2,\"97\":9,\"106\":3,\"107\":12,\"115\":2}}],[\"mode\",{\"1\":{\"44\":2,\"51\":1,\"206\":1}}],[\"module\",{\"1\":{\"25\":1,\"47\":1,\"152\":1,\"153\":2,\"166\":3,\"167\":1}}],[\"module下面\",{\"1\":{\"6\":1}}],[\"modules目录如下\",{\"1\":{\"6\":1}}],[\"modules下取决于a\",{\"1\":{\"5\":1}}],[\"modules会重复安装c包\",{\"1\":{\"5\":1}}],[\"modules\",{\"0\":{\"7\":1},\"1\":{\"3\":1,\"5\":6,\"6\":3,\"7\":12,\"8\":1,\"11\":1,\"14\":3,\"17\":1,\"24\":1,\"25\":3,\"47\":2,\"150\":1,\"153\":1,\"154\":3}}],[\"monorepo用起来\",{\"1\":{\"17\":1}}],[\"monorepo\",{\"0\":{\"11\":1},\"1\":{\"2\":1,\"11\":1,\"16\":1,\"17\":2,\"29\":2,\"32\":1}}],[\"h3>\",{\"1\":{\"184\":1}}],[\"h1\",{\"1\":{\"173\":3,\"184\":1}}],[\"h1>\",{\"1\":{\"173\":1,\"184\":1}}],[\"h5等前端领域的文章和项目\",{\"1\":{\"69\":1}}],[\"httponly\",{\"1\":{\"136\":2}}],[\"http缓存\",{\"1\":{\"94\":1}}],[\"http\",{\"0\":{\"93\":1,\"114\":1,\"115\":1,\"117\":1},\"1\":{\"91\":2,\"92\":1,\"93\":3,\"94\":1,\"95\":1,\"96\":2,\"99\":1,\"100\":1,\"115\":1,\"116\":1,\"118\":1,\"125\":1}}],[\"https\",{\"1\":{\"13\":1,\"31\":1,\"34\":2,\"131\":1,\"132\":1}}],[\"html5\",{\"1\":{\"135\":1}}],[\"html|htm\",{\"1\":{\"122\":1}}],[\"html\",{\"1\":{\"67\":1,\"93\":1,\"115\":8,\"122\":1,\"157\":1,\"201\":1,\"202\":2}}],[\"html作用入口\",{\"1\":{\"55\":1}}],[\"hello\",{\"1\":{\"165\":2,\"168\":3,\"173\":3}}],[\"help\",{\"1\":{\"24\":1,\"166\":1}}],[\"header\",{\"1\":{\"122\":4}}],[\"headers\",{\"1\":{\"93\":2,\"121\":2,\"122\":1}}],[\"heuristic\",{\"1\":{\"109\":2}}],[\"height\",{\"1\":{\"51\":1}}],[\"hidden\",{\"1\":{\"51\":2}}],[\"hmr\",{\"1\":{\"40\":1}}],[\"haizlin\",{\"1\":{\"206\":1}}],[\"hash\",{\"0\":{\"116\":1},\"1\":{\"115\":3,\"116\":6}}],[\"has\",{\"1\":{\"85\":1}}],[\"handler<events\",{\"1\":{\"147\":3}}],[\"handler<t\",{\"1\":{\"147\":1}}],[\"handlers\",{\"1\":{\"142\":13,\"145\":4,\"146\":1}}],[\"handler\",{\"1\":{\"52\":1,\"142\":12,\"145\":2,\"146\":2,\"147\":6}}],[\"handle\",{\"1\":{\"52\":1,\"54\":1}}],[\"hang\",{\"1\":{\"40\":1}}],[\"hard\",{\"1\":{\"16\":1,\"17\":2,\"206\":1}}],[\"hot\",{\"1\":{\"54\":1}}],[\"hooks\",{\"1\":{\"17\":1,\"174\":2,\"175\":2,\"177\":1,\"179\":5,\"185\":1}}],[\"hoisted\",{\"1\":{\"184\":1}}],[\"hoist\",{\"1\":{\"17\":2}}],[\"hugon\",{\"1\":{\"11\":6,\"13\":1,\"23\":3,\"25\":10,\"26\":8,\"27\":2,\"35\":2}}],[\"c++\",{\"1\":{\"206\":1}}],[\"cs\",{\"1\":{\"206\":1}}],[\"css画图\",{\"1\":{\"210\":1}}],[\"css动画可视化工具\",{\"1\":{\"72\":1}}],[\"css3\",{\"1\":{\"72\":1}}],[\"css技巧文章\",{\"1\":{\"72\":1}}],[\"css\",{\"0\":{\"72\":1,\"209\":1},\"1\":{\"67\":2,\"72\":1,\"115\":2,\"116\":4,\"122\":1,\"124\":1,\"128\":2,\"214\":1,\"215\":2}}],[\"csscodesplit\",{\"1\":{\"44\":1}}],[\"cyc2018\",{\"1\":{\"206\":1}}],[\"ctx\",{\"1\":{\"184\":2}}],[\"ctrl\",{\"0\":{\"120\":1},\"1\":{\"118\":4}}],[\"ci\",{\"1\":{\"156\":5}}],[\"cjs\",{\"1\":{\"148\":1,\"154\":2}}],[\"credentials\",{\"1\":{\"121\":1}}],[\"createelementvnode\",{\"1\":{\"184\":2}}],[\"createelementblock\",{\"1\":{\"184\":2}}],[\"createelement\",{\"1\":{\"173\":1,\"181\":1}}],[\"createmainwindow\",{\"1\":{\"51\":3}}],[\"created\",{\"1\":{\"50\":2}}],[\"create命令可以极大地简化项目的初始化过程\",{\"1\":{\"24\":1}}],[\"create\",{\"0\":{\"24\":1,\"29\":1,\"30\":1},\"1\":{\"23\":2,\"24\":14,\"25\":8,\"26\":4,\"27\":2,\"28\":3,\"29\":1,\"32\":1,\"33\":1,\"35\":2,\"36\":2}}],[\"cpu\",{\"1\":{\"90\":1}}],[\"currentlength++\",{\"1\":{\"82\":1}}],[\"currentlength\",{\"1\":{\"82\":8}}],[\"custom\",{\"1\":{\"57\":1}}],[\"c\",{\"1\":{\"64\":1,\"94\":4,\"175\":2}}],[\"cfonts\",{\"1\":{\"41\":1}}],[\"chrome\",{\"0\":{\"118\":1,\"136\":1},\"1\":{\"118\":1,\"136\":1}}],[\"chromium\",{\"1\":{\"51\":1}}],[\"chunk\",{\"1\":{\"116\":2}}],[\"chunkhash\",{\"1\":{\"116\":3}}],[\"cherny\",{\"1\":{\"64\":1}}],[\"checkout\",{\"1\":{\"156\":2}}],[\"checking\",{\"1\":{\"53\":1}}],[\"checkupdate\",{\"1\":{\"53\":2}}],[\"check\",{\"1\":{\"52\":1,\"53\":1}}],[\"children\",{\"1\":{\"173\":2}}],[\"child\",{\"1\":{\"51\":1}}],[\"childprocess\",{\"1\":{\"48\":1}}],[\"chai\",{\"1\":{\"150\":2}}],[\"chartat\",{\"1\":{\"85\":1}}],[\"charat\",{\"1\":{\"85\":8}}],[\"channel\",{\"1\":{\"52\":2}}],[\"change\",{\"1\":{\"13\":2,\"46\":1}}],[\"changelog\",{\"1\":{\"13\":4}}],[\"changeset\",{\"1\":{\"13\":3,\"14\":5,\"15\":3}}],[\"changesets的使用\",{\"1\":{\"17\":1}}],[\"changesets\",{\"0\":{\"13\":1},\"1\":{\"12\":1,\"13\":4,\"17\":1}}],[\"chalk\",{\"1\":{\"49\":1}}],[\"choices\",{\"1\":{\"26\":2}}],[\"call\",{\"1\":{\"220\":1,\"225\":1}}],[\"callback\",{\"1\":{\"179\":5}}],[\"caching\",{\"1\":{\"109\":1}}],[\"cachestorage\",{\"1\":{\"132\":1}}],[\"cache\",{\"0\":{\"90\":1,\"96\":1,\"123\":2,\"124\":1,\"125\":1},\"1\":{\"92\":4,\"94\":2,\"96\":8,\"100\":3,\"106\":4,\"115\":1,\"118\":4,\"120\":2,\"122\":3,\"125\":1,\"132\":1,\"135\":1,\"184\":4}}],[\"can\",{\"1\":{\"70\":1}}],[\"cancelled\",{\"1\":{\"26\":4}}],[\"catch\",{\"1\":{\"25\":1,\"26\":2}}],[\"cwd\",{\"1\":{\"25\":2,\"27\":1}}],[\"cdn\",{\"1\":{\"40\":1,\"92\":2,\"135\":3}}],[\"cd\",{\"1\":{\"25\":1,\"31\":1,\"165\":1}}],[\"cleanup\",{\"1\":{\"179\":2}}],[\"clean\",{\"1\":{\"148\":3}}],[\"clear\",{\"1\":{\"14\":1,\"143\":1,\"179\":1}}],[\"classcomponent\",{\"1\":{\"175\":2}}],[\"class\",{\"1\":{\"51\":1,\"79\":1,\"220\":1}}],[\"closed\",{\"1\":{\"50\":1,\"51\":1}}],[\"close\",{\"1\":{\"48\":1,\"52\":2}}],[\"click=count++>\",{\"1\":{\"184\":1}}],[\"clickprompt\",{\"1\":{\"73\":1}}],[\"client\",{\"1\":{\"93\":1}}],[\"cli\",{\"0\":{\"20\":1},\"1\":{\"13\":2,\"23\":1,\"25\":1,\"28\":2,\"30\":1,\"36\":1},\"2\":{\"38\":1}}],[\"coffe1891\",{\"1\":{\"206\":1}}],[\"count++\",{\"1\":{\"184\":1}}],[\"count\",{\"1\":{\"184\":9}}],[\"cookie\",{\"1\":{\"92\":1,\"121\":1,\"134\":5,\"135\":10,\"136\":3,\"224\":2}}],[\"codrops\",{\"1\":{\"67\":1}}],[\"code\",{\"0\":{\"232\":1},\"1\":{\"46\":2,\"71\":1}}],[\"copyfilesync\",{\"1\":{\"26\":1}}],[\"copydir\",{\"1\":{\"26\":2}}],[\"copy\",{\"1\":{\"26\":2}}],[\"color\",{\"1\":{\"26\":7}}],[\"colorfunc\",{\"1\":{\"26\":3}}],[\"control\",{\"0\":{\"96\":1},\"1\":{\"94\":1,\"96\":3,\"100\":1,\"106\":4,\"115\":1,\"118\":1,\"121\":9,\"122\":5}}],[\"contenthash\",{\"1\":{\"116\":4}}],[\"content=\",{\"1\":{\"96\":1}}],[\"content\",{\"1\":{\"93\":2,\"121\":2,\"122\":2}}],[\"continue\",{\"1\":{\"26\":2}}],[\"confirm\",{\"1\":{\"26\":1,\"52\":1}}],[\"config\",{\"1\":{\"13\":2,\"27\":2,\"43\":1,\"44\":6,\"47\":6}}],[\"concat\",{\"1\":{\"26\":1,\"146\":1}}],[\"console\",{\"1\":{\"25\":2,\"26\":3,\"27\":1,\"50\":3,\"132\":2,\"143\":2,\"168\":1,\"174\":1}}],[\"constructor\",{\"1\":{\"51\":1,\"79\":1}}],[\"const\",{\"1\":{\"25\":2,\"26\":17,\"27\":9,\"46\":1,\"47\":1,\"50\":1,\"51\":1,\"57\":1,\"79\":1,\"85\":2,\"142\":2,\"143\":1,\"173\":3,\"174\":1,\"179\":10}}],[\"compressed\",{\"1\":{\"156\":3}}],[\"compiler\",{\"1\":{\"202\":3}}],[\"compileroptions\",{\"1\":{\"57\":2,\"166\":1}}],[\"compilation\",{\"1\":{\"148\":2}}],[\"component\",{\"1\":{\"57\":3}}],[\"commonschunkplugin\",{\"1\":{\"116\":1}}],[\"commonjs\",{\"1\":{\"47\":4,\"148\":1,\"153\":3,\"154\":3,\"166\":3,\"167\":1}}],[\"command\",{\"1\":{\"118\":2}}],[\"commandline\",{\"1\":{\"50\":1}}],[\"commander\",{\"1\":{\"23\":1}}],[\"commitlint\",{\"1\":{\"17\":1}}],[\"commitzen\",{\"1\":{\"17\":1}}],[\"commitizen\",{\"1\":{\"17\":1}}],[\"commit\",{\"1\":{\"13\":2,\"29\":1,\"148\":1,\"155\":1,\"185\":1}}],[\"com\",{\"1\":{\"13\":1,\"14\":1,\"31\":1,\"40\":3}}],[\"只需要\",{\"1\":{\"202\":1}}],[\"只需要在命令行中运行\",{\"1\":{\"154\":1}}],[\"只需要在终端中输入\",{\"1\":{\"24\":1}}],[\"只能在\",{\"1\":{\"132\":1}}],[\"只要其内容不变就不会被重复构建\",{\"1\":{\"116\":1}}],[\"只有受影响的文件的哈希值会发生变化\",{\"1\":{\"116\":1}}],[\"只有受影响的\",{\"1\":{\"116\":1}}],[\"只有当两个\",{\"1\":{\"108\":1}}],[\"只有真正在依赖项中的包才能访问\",{\"1\":{\"7\":1}}],[\"只包含一些必要的代码\",{\"1\":{\"25\":1}}],[\"只允许使用pnpm包管理器\",{\"1\":{\"11\":1}}],[\"以进一步提升更新性能\",{\"1\":{\"202\":1}}],[\"以更声明式暴露给用户\",{\"1\":{\"199\":1}}],[\"以做出正确的选择\",{\"1\":{\"199\":1}}],[\"以减少业务开发过程中的潜在bug\",{\"1\":{\"174\":1}}],[\"以减少不必要的资源重复请求\",{\"1\":{\"116\":1}}],[\"以适应不同的场景\",{\"1\":{\"153\":1}}],[\"以支持\",{\"1\":{\"153\":1}}],[\"以下属性都是为了让模块可以在不同的环境下被正确地导入和使用\",{\"1\":{\"153\":1}}],[\"以下是\",{\"1\":{\"131\":1}}],[\"以下是一些常见的使用场景\",{\"1\":{\"22\":1}}],[\"以对代码的行为进行断言\",{\"1\":{\"150\":1}}],[\"以避免这个问题\",{\"1\":{\"135\":1}}],[\"以分号分隔\",{\"1\":{\"134\":1}}],[\"以供服务端验证用户登录的有效性\",{\"1\":{\"134\":1}}],[\"以确保应用程序的性能不会太差\",{\"1\":{\"201\":1}}],[\"以确保缓存的准确性和有效性\",{\"1\":{\"109\":1}}],[\"以确保不会无限期地将该标志设为\",{\"1\":{\"46\":1}}],[\"以检查缓存是否已更新\",{\"1\":{\"106\":1}}],[\"以上\",{\"1\":{\"104\":1}}],[\"以上首部字段名为\",{\"1\":{\"93\":1}}],[\"以加快数据访问速度\",{\"1\":{\"90\":1}}],[\"以左指针开始的\",{\"1\":{\"84\":1}}],[\"以保护代码的安全性\",{\"1\":{\"47\":1}}],[\"以提高模块的可移植性和兼容性\",{\"1\":{\"153\":1}}],[\"以提高页面的性能和用户体验\",{\"1\":{\"129\":2}}],[\"以提高打包速度和减小文件大小\",{\"1\":{\"47\":1}}],[\"以提高开发效率和构建速度\",{\"1\":{\"42\":1}}],[\"以提高性能\",{\"1\":{\"25\":1}}],[\"以便后续的模块设计和拆分\",{\"1\":{\"198\":1}}],[\"以便在其他项目中使用\",{\"1\":{\"153\":1}}],[\"以便在不同的环境下使用不同的导出方式\",{\"1\":{\"153\":1}}],[\"以便在后续的页面渲染过程中更快地获取这些资源\",{\"1\":{\"129\":2}}],[\"以便继承其中的规则和选项\",{\"1\":{\"152\":1}}],[\"以便于理解\",{\"1\":{\"142\":1}}],[\"以便于统一管理所有包的发布过程\",{\"1\":{\"14\":1}}],[\"以便它们可以相互通信而不需要直接依赖彼此\",{\"1\":{\"141\":1}}],[\"以便新的资源可以被缓存\",{\"1\":{\"132\":1}}],[\"以便下次访问同一网页时可以更快地加载资源\",{\"1\":{\"125\":1}}],[\"以便实现更复杂的功能\",{\"1\":{\"42\":1}}],[\"以在发布时指向原始源\",{\"1\":{\"34\":1}}],[\"以\",{\"1\":{\"27\":1}}],[\"以编写项目创建逻辑\",{\"1\":{\"26\":1}}],[\"以及它们的区别及应用\",{\"1\":{\"222\":1}}],[\"以及它们的优缺点\",{\"1\":{\"219\":1}}],[\"以及权衡不同选择带来的优缺点\",{\"1\":{\"198\":1}}],[\"以及\",{\"1\":{\"184\":1}}],[\"以及前后端分离开始普及\",{\"1\":{\"173\":1}}],[\"以及基于语言或特性的变体\",{\"1\":{\"29\":1}}],[\"以及安装一些常用的依赖项\",{\"1\":{\"24\":1}}],[\"以及项目构建流程\",{\"1\":{\"22\":1}}],[\"以方便后续在各个项目中版本升级\",{\"1\":{\"22\":1}}],[\"以解决开发和生产环境的依赖问题\",{\"1\":{\"11\":1}}],[\"以安装\",{\"1\":{\"6\":1}}],[\"此处以其举例以说明两者区别\",{\"1\":{\"180\":1}}],[\"此处设置为针对渲染进程的\",{\"1\":{\"44\":1}}],[\"此外图片资源\",{\"1\":{\"128\":1}}],[\"此项目采用\",{\"1\":{\"55\":1}}],[\"此项目中渲染进程的交由\",{\"1\":{\"42\":1}}],[\"此文件在\",{\"1\":{\"41\":1}}],[\"此类模板\",{\"1\":{\"31\":1}}],[\"此类脚手架比较适合生成框架类的\",{\"1\":{\"30\":1}}],[\"此类脚手架会提供一些基础特性以供选择\",{\"1\":{\"30\":1}}],[\"此时就变成了运行时\",{\"1\":{\"202\":1}}],[\"此时便无需再关心存储数据的格式问题\",{\"1\":{\"135\":1}}],[\"此时会重新执行安装和激活阶段\",{\"1\":{\"132\":1}}],[\"此时可以开始拦截网络请求并进行缓存操作\",{\"1\":{\"132\":1}}],[\"此时脚本还没有被激活\",{\"1\":{\"132\":1}}],[\"此时服务端配置\",{\"1\":{\"121\":1}}],[\"此时\",{\"1\":{\"11\":1,\"26\":1,\"116\":1,\"132\":1,\"145\":1}}],[\"此布局的一大好处\",{\"1\":{\"7\":1}}],[\"局部依赖安装方式\",{\"1\":{\"17\":1}}],[\"局部依赖\",{\"1\":{\"11\":1}}],[\"document\",{\"1\":{\"174\":1}}],[\"documentation\",{\"1\":{\"148\":2,\"157\":3}}],[\"docpad\",{\"1\":{\"157\":1}}],[\"docs\",{\"1\":{\"148\":3,\"157\":2}}],[\"domain\",{\"1\":{\"134\":1}}],[\"dom\",{\"0\":{\"181\":1},\"1\":{\"120\":1,\"166\":2,\"174\":1,\"177\":1,\"181\":3,\"184\":1,\"201\":9,\"202\":1,\"222\":1,\"224\":2}}],[\"downloaded\",{\"1\":{\"53\":1}}],[\"download\",{\"1\":{\"53\":1}}],[\"dotenv\",{\"1\":{\"49\":1}}],[\"doppelgangers\",{\"1\":{\"17\":1}}],[\"daily\",{\"1\":{\"206\":1}}],[\"date\",{\"1\":{\"103\":3,\"104\":6}}],[\"data\",{\"1\":{\"48\":6}}],[\"darwin\",{\"1\":{\"27\":1}}],[\"diff\",{\"1\":{\"201\":1}}],[\"div\",{\"1\":{\"184\":1,\"213\":1}}],[\"div>\",{\"1\":{\"184\":1}}],[\"dirname\",{\"1\":{\"47\":2,\"48\":1}}],[\"dir\",{\"1\":{\"26\":10}}],[\"disk\",{\"0\":{\"123\":1,\"125\":1},\"1\":{\"92\":1,\"100\":1,\"125\":1}}],[\"disable\",{\"1\":{\"50\":1,\"118\":1,\"120\":1}}],[\"disablef12\",{\"1\":{\"50\":1}}],[\"disablebutton\",{\"1\":{\"50\":1}}],[\"display\",{\"1\":{\"26\":7}}],[\"dist\",{\"1\":{\"25\":2,\"34\":1,\"44\":2,\"48\":1,\"148\":2,\"152\":1,\"153\":8,\"166\":2,\"168\":1}}],[\"d\",{\"1\":{\"25\":2,\"26\":5,\"64\":1,\"152\":1,\"153\":3}}],[\"decorator\",{\"1\":{\"180\":1}}],[\"deps\",{\"1\":{\"179\":4}}],[\"dependencies\",{\"1\":{\"8\":3,\"17\":2,\"47\":1}}],[\"delete\",{\"1\":{\"85\":1,\"121\":1,\"122\":1,\"179\":1}}],[\"details\",{\"1\":{\"51\":2}}],[\"defaults\",{\"1\":{\"121\":2}}],[\"defaultsession\",{\"1\":{\"50\":1}}],[\"defaultapp\",{\"1\":{\"50\":1}}],[\"default\",{\"1\":{\"47\":3,\"51\":1,\"57\":1,\"153\":2}}],[\"defaulttargetdir\",{\"1\":{\"26\":4}}],[\"define\",{\"1\":{\"44\":2,\"47\":1}}],[\"defineconfig\",{\"1\":{\"44\":1,\"47\":1,\"57\":1}}],[\"degit\",{\"1\":{\"31\":3}}],[\"destroy\",{\"1\":{\"51\":1}}],[\"destfile\",{\"1\":{\"26\":2}}],[\"destdir\",{\"1\":{\"26\":3}}],[\"dest\",{\"1\":{\"26\":3}}],[\"developit\",{\"1\":{\"152\":1}}],[\"development\",{\"1\":{\"44\":1,\"50\":1,\"51\":1}}],[\"devtools\",{\"1\":{\"50\":4}}],[\"dev启动项目\",{\"1\":{\"40\":1}}],[\"dev\",{\"1\":{\"25\":2,\"31\":1,\"41\":2,\"165\":1}}],[\"devdependencies\",{\"1\":{\"17\":1}}],[\"dw\",{\"1\":{\"11\":1,\"13\":1}}],[\"effectstack\",{\"1\":{\"179\":5}}],[\"effect\",{\"1\":{\"179\":24,\"184\":5}}],[\"effective\",{\"1\":{\"64\":1}}],[\"ecmascript\",{\"1\":{\"173\":1}}],[\"ecmaversion\",{\"1\":{\"167\":1}}],[\"emit<key\",{\"1\":{\"147\":3}}],[\"emit\",{\"1\":{\"142\":2,\"143\":1}}],[\"emitter<events>\",{\"1\":{\"147\":1}}],[\"emitter<events\",{\"1\":{\"147\":1}}],[\"emitter\",{\"0\":{\"141\":1},\"1\":{\"141\":1,\"143\":7}}],[\"emptyoutdir\",{\"1\":{\"44\":1}}],[\"emptydir\",{\"1\":{\"26\":2,\"27\":1}}],[\"equiv=\",{\"1\":{\"96\":1}}],[\"etag\",{\"0\":{\"98\":1,\"107\":1,\"108\":1},\"1\":{\"94\":1,\"98\":6,\"107\":9,\"108\":19}}],[\"even\",{\"1\":{\"222\":1}}],[\"events>\",{\"1\":{\"147\":7}}],[\"events\",{\"1\":{\"147\":10}}],[\"eventhandlerlist<events\",{\"1\":{\"147\":2}}],[\"eventhandlerlist<t\",{\"1\":{\"147\":1}}],[\"eventhandlermap<events>\",{\"1\":{\"147\":2}}],[\"eventhandlermap<events\",{\"1\":{\"147\":1}}],[\"eventtype\",{\"1\":{\"147\":1}}],[\"eventemitter\",{\"1\":{\"141\":1,\"225\":1}}],[\"event\",{\"0\":{\"141\":1},\"1\":{\"46\":5,\"51\":2,\"141\":1,\"147\":3},\"2\":{\"160\":1}}],[\"evt\",{\"1\":{\"142\":4,\"146\":1,\"147\":1}}],[\"evan\",{\"1\":{\"74\":1}}],[\"element\",{\"1\":{\"57\":1,\"173\":3}}],[\"electronlog\",{\"1\":{\"48\":2}}],[\"electronprocess\",{\"1\":{\"46\":4,\"48\":4}}],[\"electron项目模板\",{\"1\":{\"39\":1}}],[\"electron\",{\"0\":{\"39\":1,\"48\":1},\"1\":{\"17\":1,\"39\":1,\"40\":7,\"41\":3,\"42\":3,\"44\":2,\"45\":1,\"46\":10,\"47\":2,\"48\":8,\"50\":4,\"51\":1,\"52\":1,\"53\":3},\"2\":{\"58\":1,\"59\":1}}],[\"else\",{\"1\":{\"26\":1,\"27\":1,\"46\":1,\"50\":1,\"82\":1,\"106\":2,\"142\":2}}],[\"entry\",{\"1\":{\"116\":1}}],[\"entries\",{\"1\":{\"47\":1}}],[\"enter\",{\"1\":{\"15\":2}}],[\"end\",{\"1\":{\"46\":1,\"106\":2}}],[\"env\",{\"1\":{\"25\":1,\"27\":2,\"43\":1,\"44\":2,\"47\":7,\"48\":1,\"50\":2,\"51\":2,\"152\":2,\"156\":1,\"167\":1}}],[\"errorbox\",{\"1\":{\"52\":1}}],[\"error\",{\"1\":{\"25\":1,\"26\":3,\"46\":2,\"53\":1,\"132\":2}}],[\"e\",{\"1\":{\"25\":2,\"94\":5,\"143\":4}}],[\"ext\",{\"1\":{\"148\":2}}],[\"extension\",{\"1\":{\"148\":1,\"150\":1,\"157\":2}}],[\"extensions\",{\"1\":{\"47\":1}}],[\"extends\",{\"1\":{\"147\":11,\"152\":2,\"167\":1}}],[\"external\",{\"1\":{\"47\":1}}],[\"exclude\",{\"1\":{\"47\":1,\"57\":1}}],[\"existssync\",{\"1\":{\"26\":3,\"27\":1}}],[\"exit\",{\"1\":{\"15\":1,\"48\":2}}],[\"execute\",{\"1\":{\"179\":4}}],[\"execpath\",{\"1\":{\"48\":2}}],[\"exec\",{\"1\":{\"24\":3}}],[\"expect\",{\"1\":{\"152\":2}}],[\"experimentalfeatures\",{\"1\":{\"51\":1}}],[\"experimentalunsafeoptions\",{\"1\":{\"13\":2}}],[\"expiration\",{\"1\":{\"109\":1}}],[\"expires\",{\"0\":{\"95\":1,\"101\":1},\"1\":{\"94\":1,\"95\":2,\"96\":2,\"100\":1,\"101\":1,\"103\":2,\"122\":1}}],[\"exports\",{\"1\":{\"153\":1,\"167\":1}}],[\"export\",{\"1\":{\"57\":1,\"147\":7}}],[\"express\",{\"1\":{\"6\":6}}],[\"es2021\",{\"1\":{\"167\":1}}],[\"es2016\",{\"1\":{\"166\":1}}],[\"es2015\",{\"1\":{\"166\":5}}],[\"es2017\",{\"1\":{\"47\":1}}],[\"es3\",{\"1\":{\"166\":1}}],[\"es5\",{\"1\":{\"166\":2}}],[\"esm\",{\"1\":{\"150\":2}}],[\"es8\",{\"1\":{\"64\":1}}],[\"es6入门教程\",{\"1\":{\"66\":1}}],[\"es6\",{\"1\":{\"47\":4,\"152\":2,\"153\":4,\"217\":1,\"220\":1}}],[\"esbuild\",{\"1\":{\"44\":1,\"47\":4}}],[\"esnext\",{\"1\":{\"44\":1}}],[\"esc\",{\"1\":{\"26\":1}}],[\"eslintignore\",{\"1\":{\"152\":1}}],[\"eslintconfig\",{\"1\":{\"152\":1}}],[\"eslintrc\",{\"1\":{\"152\":1,\"167\":1}}],[\"eslint\",{\"0\":{\"152\":1,\"167\":1},\"1\":{\"17\":1,\"148\":2,\"152\":6,\"167\":8}}],[\"es\",{\"1\":{\"11\":1,\"148\":2,\"150\":1,\"154\":5,\"173\":3,\"180\":1}}],[\"即自然语言描述能够与代码产生一一对应的关系\",{\"1\":{\"199\":1}}],[\"即时编译\",{\"1\":{\"180\":1}}],[\"即可\",{\"1\":{\"175\":1}}],[\"即可描述\",{\"1\":{\"173\":1}}],[\"即组件如何织织逻辑与\",{\"1\":{\"174\":1}}],[\"即不移动\",{\"1\":{\"145\":1}}],[\"即资源异步加载命中缓存不受硬性重新加载控制\",{\"1\":{\"120\":1}}],[\"即会优先读取缓存\",{\"1\":{\"118\":1}}],[\"即使没有类型\",{\"1\":{\"164\":1}}],[\"即使用\",{\"1\":{\"135\":1}}],[\"即使只修改了一个文件\",{\"1\":{\"116\":1}}],[\"即使两个\",{\"1\":{\"108\":1}}],[\"即使一个包的不同版本\",{\"1\":{\"2\":1}}],[\"即上文提到的\",{\"1\":{\"104\":1}}],[\"即在此时间之后\",{\"1\":{\"95\":1}}],[\"即浏览器\",{\"1\":{\"93\":1}}],[\"即滑动窗口里所有数字的平均值\",{\"1\":{\"77\":1}}],[\"即最简可行化分析\",{\"1\":{\"61\":1}}],[\"即\",{\"1\":{\"11\":1,\"103\":1,\"105\":1,\"145\":2,\"172\":1,\"174\":1,\"179\":1,\"180\":1,\"199\":1,\"201\":1}}],[\"可列举几个模块化方案并理解其中原理\",{\"1\":{\"221\":1}}],[\"可能发生隐式类型转换的场景以及转换原则\",{\"1\":{\"219\":1}}],[\"可能会导致客户端出现问题\",{\"1\":{\"132\":1}}],[\"可能会导致客户端请求出现问题\",{\"1\":{\"132\":2}}],[\"可能会导致客户端缓存出现问题\",{\"1\":{\"132\":1}}],[\"可能会有一些旧版本的缓存仍然存在\",{\"1\":{\"132\":1}}],[\"可能会带来一定的性能开销\",{\"1\":{\"107\":1}}],[\"可引入编译手段\",{\"1\":{\"202\":1}}],[\"可维护性强\",{\"1\":{\"201\":1}}],[\"可分析\",{\"1\":{\"180\":1}}],[\"可分为三类\",{\"1\":{\"176\":1}}],[\"可提供操作的灵活性\",{\"1\":{\"177\":1}}],[\"可在\",{\"1\":{\"184\":1}}],[\"可在定义\",{\"1\":{\"177\":1}}],[\"可在代码中进行常量替换\",{\"1\":{\"47\":1}}],[\"可用\",{\"1\":{\"181\":1}}],[\"可用为其分类依据\",{\"1\":{\"176\":1}}],[\"可用于加载环境变量\",{\"1\":{\"49\":1}}],[\"可借助数学中\",{\"1\":{\"174\":1}}],[\"可轻松描述\",{\"1\":{\"173\":1}}],[\"可例\",{\"1\":{\"173\":1}}],[\"可把配置纳入源码控制\",{\"1\":{\"166\":1}}],[\"可编写和运行代码测试\",{\"1\":{\"150\":1}}],[\"可选择两个执行时机\",{\"1\":{\"180\":1}}],[\"可选值为\",{\"1\":{\"166\":3}}],[\"可选的事件参数\",{\"1\":{\"147\":1}}],[\"可选ts版本或非ts版本的\",{\"1\":{\"29\":1}}],[\"可对\",{\"1\":{\"135\":1}}],[\"可发现性\",{\"1\":{\"131\":1}}],[\"可靠性\",{\"1\":{\"131\":1}}],[\"可靠和具有本地应用体验的需求\",{\"1\":{\"131\":1}}],[\"可靠和具有类似原生应用体验的\",{\"1\":{\"131\":1}}],[\"可通过\",{\"1\":{\"116\":1,\"166\":1,\"175\":1}}],[\"可通过两种方式计算\",{\"1\":{\"104\":1}}],[\"可观察\",{\"1\":{\"115\":1}}],[\"可按分类方式和细分程度划分\",{\"1\":{\"92\":1}}],[\"可复制代码\",{\"1\":{\"72\":1}}],[\"可视化配置工具\",{\"1\":{\"70\":1}}],[\"可执行文件路径\",{\"1\":{\"48\":1}}],[\"可看作\",{\"1\":{\"30\":1}}],[\"可见\",{\"1\":{\"29\":1,\"181\":1}}],[\"可查看已安装到全局的命令\",{\"1\":{\"25\":1}}],[\"可使用\",{\"1\":{\"11\":1,\"135\":1}}],[\"可将其安装到根目录\",{\"1\":{\"11\":1}}],[\"可以说出多种方式并理解其优缺点\",{\"1\":{\"213\":1}}],[\"可以直接建立\",{\"1\":{\"183\":1}}],[\"可以直接根据\",{\"1\":{\"180\":1}}],[\"可以直接使用缓存\",{\"1\":{\"107\":2}}],[\"可以减少\",{\"1\":{\"180\":1}}],[\"可以减少网络请求\",{\"1\":{\"124\":1}}],[\"可以交由\",{\"1\":{\"174\":1}}],[\"可以概括为以下公式\",{\"1\":{\"172\":1}}],[\"可以称\",{\"1\":{\"172\":1}}],[\"可以随时更新类型\",{\"1\":{\"162\":1}}],[\"可以了解了它是如何实现事件管理的\",{\"1\":{\"158\":1}}],[\"可以同时指定多个格式\",{\"1\":{\"154\":1}}],[\"可以指定键和值的类型\",{\"1\":{\"147\":1}}],[\"可以处理多种不同类型的事件\",{\"1\":{\"147\":1}}],[\"可以处理网络请求并进行缓存操作\",{\"1\":{\"132\":1}}],[\"可以简化原始\",{\"1\":{\"135\":1}}],[\"可以清理这些旧版本的缓存\",{\"1\":{\"132\":1}}],[\"可以执行一些操作\",{\"1\":{\"132\":1}}],[\"可以实现离线缓存和网络请求拦截等功能\",{\"1\":{\"132\":1}}],[\"可以从缓存中读取资源\",{\"1\":{\"132\":1}}],[\"可以用于处理事件和消息传递\",{\"1\":{\"140\":1}}],[\"可以用来管理\",{\"1\":{\"132\":1}}],[\"可以用来提高网页的性能和用户体验\",{\"1\":{\"132\":1}}],[\"可以用如\",{\"1\":{\"31\":1}}],[\"可以拦截和处理网页发出的网络请求\",{\"1\":{\"132\":1}}],[\"可以通过\",{\"1\":{\"132\":1}}],[\"可以通过链接分享和搜索引擎等方式被用户发现和访问\",{\"1\":{\"131\":1}}],[\"可以通过设置响应头中的\",{\"1\":{\"121\":1}}],[\"可以被搜索引擎索引\",{\"1\":{\"131\":1}}],[\"可以提供更高的安全性和保护用户隐私的能力\",{\"1\":{\"131\":1}}],[\"可以提供推送通知\",{\"1\":{\"131\":1}}],[\"可以像本地应用一样运行\",{\"1\":{\"131\":1}}],[\"可以设置相应的过期时间\",{\"1\":{\"122\":1}}],[\"可以设置如下服务器响应报头\",{\"1\":{\"115\":1}}],[\"可以添加如下响应报头配置\",{\"1\":{\"122\":1}}],[\"可以将\",{\"1\":{\"135\":1,\"154\":1}}],[\"可以将一些已经访问过的网页资源保存在本地硬盘上\",{\"1\":{\"125\":1}}],[\"可以将该值一起发送给服务器\",{\"1\":{\"108\":1}}],[\"可以将服务器资源和网页访问产生的临时数据缓存到内存或本地\",{\"1\":{\"91\":1}}],[\"可以根据具体情况选择使用\",{\"1\":{\"107\":1}}],[\"可以理解为浏览器缓存发起请求到收到响应的时间差\",{\"1\":{\"104\":1}}],[\"可以理解为浏览器已经使用该资源的时间\",{\"1\":{\"104\":1}}],[\"可以理解为服务器\",{\"1\":{\"103\":1}}],[\"可以组合使用多种指令\",{\"1\":{\"96\":1}}],[\"可以看作\",{\"1\":{\"177\":1}}],[\"可以看出\",{\"1\":{\"90\":1}}],[\"可以看到\",{\"1\":{\"6\":1}}],[\"可以在浏览器和\",{\"1\":{\"150\":1}}],[\"可以在\",{\"1\":{\"132\":3}}],[\"可以在激活阶段发送一些通知\",{\"1\":{\"132\":1}}],[\"可以在激活阶段缓存一些静态资源\",{\"1\":{\"132\":1}}],[\"可以在几秒钟内快速加载应用程序\",{\"1\":{\"131\":1}}],[\"可以在离线状态下访问\",{\"1\":{\"131\":1}}],[\"可以在多个层次上实现\",{\"1\":{\"90\":1}}],[\"可以在数据访问时快速提供数据\",{\"1\":{\"90\":1}}],[\"可以在终端执行\",{\"1\":{\"25\":1}}],[\"可以自定义更新的行为和外观\",{\"1\":{\"53\":1}}],[\"可以方便地实现应用程序的自动更新功能\",{\"1\":{\"53\":1}}],[\"可以方便的在\",{\"1\":{\"11\":1}}],[\"可以确保应用程序在\",{\"1\":{\"48\":1}}],[\"可以解析的模块文件扩展名\",{\"1\":{\"47\":1}}],[\"可以是\",{\"1\":{\"44\":1}}],[\"可以是任何\",{\"1\":{\"10\":1}}],[\"可以及时同步到其他使用到的\",{\"1\":{\"29\":1}}],[\"可以全局执行该命令\",{\"1\":{\"26\":1}}],[\"可以使用\",{\"1\":{\"116\":1,\"151\":1,\"155\":1}}],[\"可以使用脚手架自动生成项目的基础结构\",{\"1\":{\"22\":1}}],[\"可以使用以下命令\",{\"1\":{\"10\":1}}],[\"像素\",{\"1\":{\"213\":1}}],[\"像是文本\",{\"1\":{\"93\":1}}],[\"像\",{\"1\":{\"11\":1}}],[\"└──\",{\"1\":{\"11\":1}}],[\"│\",{\"1\":{\"11\":2}}],[\"├──\",{\"1\":{\"11\":2}}],[\"typings\",{\"1\":{\"153\":1}}],[\"typecheck\",{\"1\":{\"148\":3,\"149\":1}}],[\"typeof\",{\"1\":{\"26\":1}}],[\"type\",{\"1\":{\"25\":1,\"26\":12,\"93\":2,\"121\":1,\"122\":1,\"142\":12,\"143\":2,\"147\":17,\"163\":1,\"173\":1}}],[\"types\",{\"1\":{\"25\":1,\"148\":5,\"149\":1,\"153\":2,\"165\":1}}],[\"typescript\",{\"0\":{\"147\":1,\"161\":1,\"164\":1},\"1\":{\"25\":1,\"26\":1,\"64\":2,\"142\":1,\"147\":1,\"148\":3,\"150\":1,\"151\":2,\"152\":5,\"153\":3,\"157\":1,\"161\":2,\"162\":7,\"164\":3,\"165\":2,\"166\":1,\"167\":3,\"168\":4},\"2\":{\"169\":1}}],[\"t\",{\"1\":{\"147\":6,\"148\":1,\"149\":1}}],[\"tips\",{\"1\":{\"120\":1}}],[\"time\",{\"1\":{\"104\":13,\"180\":2,\"185\":1}}],[\"titlebarstyle\",{\"1\":{\"51\":1}}],[\"title\",{\"1\":{\"26\":2,\"174\":1}}],[\"tnt\",{\"1\":{\"69\":1}}],[\"tnfe\",{\"1\":{\"69\":1}}],[\"todo\",{\"1\":{\"195\":1,\"227\":1,\"228\":1}}],[\"todisplaystring\",{\"1\":{\"184\":2}}],[\"touch\",{\"1\":{\"168\":1}}],[\"token\",{\"1\":{\"134\":7}}],[\"to\",{\"1\":{\"51\":1,\"57\":3}}],[\"tolowercase\",{\"1\":{\"26\":1}}],[\"tovalidpackagename\",{\"1\":{\"26\":2}}],[\"this\",{\"1\":{\"51\":20,\"57\":1,\"79\":11,\"82\":2,\"217\":1,\"221\":2}}],[\"throw\",{\"1\":{\"26\":3}}],[\"then的链式调用\",{\"1\":{\"225\":1}}],[\"then\",{\"1\":{\"50\":1,\"132\":1}}],[\"the\",{\"1\":{\"17\":1}}],[\"test\",{\"1\":{\"26\":1,\"148\":13,\"149\":2,\"150\":5,\"156\":3}}],[\"text\",{\"1\":{\"26\":2,\"93\":2,\"184\":2}}],[\"template>\",{\"1\":{\"184\":1}}],[\"templatedir\",{\"1\":{\"27\":3}}],[\"templates\",{\"1\":{\"26\":3}}],[\"template\",{\"1\":{\"25\":3,\"26\":3,\"27\":4,\"33\":2,\"34\":1,\"35\":1,\"39\":1,\"50\":3,\"57\":1,\"180\":1}}],[\"tree\",{\"1\":{\"162\":1}}],[\"tricks\",{\"1\":{\"67\":1,\"72\":2}}],[\"trim\",{\"1\":{\"26\":2}}],[\"transparent\",{\"1\":{\"51\":1}}],[\"try\",{\"1\":{\"26\":2,\"179\":1,\"222\":1}}],[\"true\",{\"1\":{\"11\":1,\"13\":1,\"26\":6,\"27\":1,\"44\":1,\"46\":3,\"47\":3,\"50\":1,\"51\":5,\"121\":3,\"152\":4,\"156\":2,\"166\":3,\"167\":3}}],[\"tslint\",{\"1\":{\"165\":1,\"167\":2}}],[\"tsconfig\",{\"1\":{\"166\":2}}],[\"tsconfg\",{\"0\":{\"166\":1}}],[\"tsc\",{\"1\":{\"148\":2,\"151\":4,\"166\":2,\"168\":1,\"180\":2}}],[\"ts引入\",{\"1\":{\"52\":1}}],[\"ts等\",{\"1\":{\"29\":1}}],[\"ts\",{\"0\":{\"168\":1},\"1\":{\"25\":3,\"26\":3,\"27\":2,\"29\":2,\"33\":2,\"35\":2,\"41\":1,\"43\":1,\"44\":1,\"47\":3,\"50\":1,\"51\":1,\"53\":1,\"148\":6,\"150\":6,\"152\":1,\"153\":4,\"157\":4,\"165\":2,\"168\":3,\"180\":1}}],[\"ts打包\",{\"1\":{\"17\":1}}],[\"tab\",{\"1\":{\"224\":1}}],[\"tags\",{\"1\":{\"148\":1,\"155\":1}}],[\"tag\",{\"1\":{\"15\":1,\"57\":2,\"148\":1,\"155\":1}}],[\"target\",{\"1\":{\"44\":2,\"47\":1,\"166\":3}}],[\"targetdir\",{\"1\":{\"26\":10,\"27\":1}}],[\"tar\",{\"1\":{\"5\":1}}],[\"为何\",{\"1\":{\"222\":1}}],[\"为何未使用细粒度更新呢\",{\"1\":{\"179\":1}}],[\"为前端开发+面试保驾护航\",{\"1\":{\"215\":1}}],[\"为开发者提供了相关\",{\"1\":{\"185\":1}}],[\"为区分不同方式产生的自变量\",{\"1\":{\"175\":1}}],[\"为什么\",{\"0\":{\"120\":1},\"1\":{\"212\":1}}],[\"为什么用\",{\"1\":{\"85\":1}}],[\"为什么现在我更推荐\",{\"1\":{\"17\":1}}],[\"为起点\",{\"1\":{\"82\":1}}],[\"为隐藏标题栏\",{\"1\":{\"51\":1}}],[\"为之前所收集的用户回答\",{\"1\":{\"26\":1}}],[\"为函数时\",{\"1\":{\"26\":1}}],[\"为了实现\",{\"1\":{\"174\":1}}],[\"为了实现一个简单的命令行工具\",{\"1\":{\"23\":1}}],[\"为了解决这个问题\",{\"1\":{\"121\":1}}],[\"为了最大化利用\",{\"1\":{\"116\":1}}],[\"为了避免这种情况\",{\"1\":{\"109\":1}}],[\"为了保证代码的健壮性\",{\"1\":{\"85\":1}}],[\"为了调试方便\",{\"1\":{\"25\":1}}],[\"为了使\",{\"1\":{\"25\":1}}],[\"为不同的项目创建不同的模板\",{\"1\":{\"22\":1}}],[\"为指定\",{\"1\":{\"11\":1}}],[\"为\",{\"1\":{\"11\":1,\"26\":3,\"73\":1,\"184\":1}}],[\"为例\",{\"1\":{\"6\":1}}],[\"设计框架时有三种选择\",{\"1\":{\"202\":1}}],[\"设计框架时需要考虑的多个方面\",{\"1\":{\"198\":1}}],[\"设计继承自\",{\"1\":{\"183\":1}}],[\"设计和开发的博客和社区站点\",{\"1\":{\"67\":1}}],[\"设计模式与开发实践\",{\"1\":{\"64\":1}}],[\"设计与实现\",{\"1\":{\"64\":1}}],[\"设计原理\",{\"1\":{\"64\":1}}],[\"设计精妙\",{\"1\":{\"6\":1}}],[\"设置的缓存过期时间是一个绝对时间\",{\"1\":{\"95\":1,\"101\":1}}],[\"设置了几个\",{\"1\":{\"52\":1}}],[\"设置菜单\",{\"1\":{\"51\":1}}],[\"设置别名\",{\"1\":{\"44\":1}}],[\"设置工程目录下\",{\"1\":{\"11\":1}}],[\"设置\",{\"1\":{\"11\":1,\"34\":1,\"48\":1,\"166\":1}}],[\"world\",{\"1\":{\"173\":3,\"184\":1}}],[\"world<\",{\"1\":{\"173\":1}}],[\"worker\",{\"0\":{\"130\":1,\"132\":1},\"1\":{\"92\":1,\"131\":1,\"132\":57,\"136\":1}}],[\"workspace\",{\"1\":{\"11\":4,\"17\":1}}],[\"wsafight\",{\"1\":{\"110\":1,\"137\":1}}],[\"while\",{\"1\":{\"85\":1}}],[\"whenready\",{\"1\":{\"50\":1}}],[\"weakset\",{\"1\":{\"223\":1}}],[\"weakmap\",{\"1\":{\"223\":1}}],[\"wed\",{\"1\":{\"95\":1}}],[\"weekly\",{\"1\":{\"69\":2}}],[\"webpack\",{\"0\":{\"116\":1},\"1\":{\"115\":1,\"116\":2,\"153\":1,\"217\":1}}],[\"webpreferences\",{\"1\":{\"51\":1}}],[\"webcontents\",{\"1\":{\"51\":2}}],[\"web\",{\"0\":{\"224\":1},\"1\":{\"11\":5,\"42\":1,\"44\":1,\"55\":1,\"67\":1,\"74\":1,\"92\":1,\"93\":2,\"131\":4,\"135\":4,\"136\":1}}],[\"web端\",{\"1\":{\"11\":1}}],[\"write\",{\"1\":{\"27\":2}}],[\"warn\",{\"1\":{\"57\":1}}],[\"watcheffect\",{\"1\":{\"184\":4}}],[\"watch\",{\"1\":{\"25\":1,\"46\":1,\"47\":2}}],[\"way\",{\"1\":{\"17\":1}}],[\"wildcardhandler<events>\",{\"1\":{\"147\":3}}],[\"wildcardhandler<t\",{\"1\":{\"147\":1}}],[\"wildcardeventhandlerlist<events>\",{\"1\":{\"147\":2}}],[\"wildcardeventhandlerlist<t\",{\"1\":{\"147\":1}}],[\"will\",{\"1\":{\"13\":2}}],[\"with\",{\"1\":{\"121\":1,\"122\":1,\"156\":1}}],[\"withcredentials\",{\"1\":{\"121\":2}}],[\"width\",{\"1\":{\"51\":1}}],[\"winurl\",{\"1\":{\"51\":4}}],[\"windowmanager\",{\"1\":{\"51\":1}}],[\"window\",{\"1\":{\"50\":3,\"52\":2,\"76\":1,\"132\":1}}],[\"windows\",{\"1\":{\"5\":1,\"17\":1,\"52\":1,\"118\":2,\"149\":1}}],[\"w\",{\"1\":{\"11\":1,\"108\":2}}],[\"配置如下\",{\"1\":{\"156\":1}}],[\"配置响应报头\",{\"0\":{\"122\":1}}],[\"配置的\",{\"1\":{\"121\":1}}],[\"配置文件放在\",{\"1\":{\"156\":1}}],[\"配置文件中的一些配置选项的含义\",{\"1\":{\"44\":1}}],[\"配置文件\",{\"1\":{\"22\":1,\"152\":1}}],[\"配置哪些包要共享版本\",{\"1\":{\"13\":1}}],[\"配置\",{\"0\":{\"13\":1,\"44\":1,\"153\":1},\"1\":{\"11\":1,\"40\":1}}],[\"项目根目录\",{\"1\":{\"166\":1}}],[\"项目构建从\",{\"1\":{\"148\":1}}],[\"项目级别的\",{\"1\":{\"116\":1}}],[\"项目的基础\",{\"1\":{\"44\":1}}],[\"项目的一个子包\",{\"1\":{\"29\":1}}],[\"项目结构一目了然\",{\"1\":{\"31\":1}}],[\"项目名称\",{\"1\":{\"26\":1}}],[\"项目模板定制\",{\"1\":{\"22\":1}}],[\"项目主分支\",{\"1\":{\"13\":1}}],[\"项目下的\",{\"1\":{\"11\":1}}],[\"项目\",{\"0\":{\"11\":1},\"1\":{\"17\":1,\"29\":1,\"33\":1,\"35\":1,\"153\":1,\"165\":1,\"180\":1}}],[\"项目中仍然可以非法访问没有声明过依赖的包\",{\"1\":{\"5\":1}}],[\"管理此类项目\",{\"1\":{\"29\":1}}],[\"管理\",{\"0\":{\"11\":1},\"1\":{\"17\":1,\"32\":1}}],[\"<p>\",{\"1\":{\"184\":1}}],[\"<package\",{\"1\":{\"24\":5}}],[\"<pattern>\",{\"1\":{\"10\":2}}],[\"<h3>hello<\",{\"1\":{\"184\":1}}],[\"<h1\",{\"1\":{\"184\":1}}],[\"<h1>hello\",{\"1\":{\"173\":1}}],[\"<div>\",{\"1\":{\"184\":1}}],[\"<template>\",{\"1\":{\"184\":1}}],[\"<tag>\",{\"1\":{\"15\":2}}],[\"<match>\",{\"1\":{\"180\":1}}],[\"<meta\",{\"1\":{\"96\":1}}],[\"<script\",{\"1\":{\"184\":1}}],[\"<switch>\",{\"1\":{\"180\":1}}],[\"<show\",{\"1\":{\"180\":1}}],[\"<for\",{\"1\":{\"180\":1}}],[\"<cookie\",{\"1\":{\"134\":1}}],[\"<command>\",{\"1\":{\"10\":2}}],[\"<link\",{\"1\":{\"129\":2}}],[\"<\",{\"1\":{\"82\":3,\"85\":2,\"184\":5}}],[\"<icon\",{\"1\":{\"57\":1}}],[\"flex\",{\"1\":{\"210\":1}}],[\"flat\",{\"1\":{\"17\":1}}],[\"fe\",{\"1\":{\"206\":1}}],[\"fetch\",{\"1\":{\"132\":1}}],[\"features\",{\"1\":{\"50\":1}}],[\"f5\",{\"0\":{\"120\":1},\"1\":{\"118\":3}}],[\"fancy\",{\"1\":{\"72\":1}}],[\"failed\",{\"1\":{\"57\":2,\"132\":1}}],[\"falsy\",{\"1\":{\"26\":2}}],[\"false\",{\"1\":{\"13\":1,\"26\":1,\"44\":1,\"46\":1,\"47\":2,\"48\":1,\"51\":2,\"151\":1,\"152\":1,\"166\":2}}],[\"f12\",{\"1\":{\"50\":1}}],[\"fiber\",{\"0\":{\"191\":1}}],[\"finally\",{\"1\":{\"179\":1,\"222\":1,\"225\":1}}],[\"fine\",{\"1\":{\"179\":1}}],[\"findlength\",{\"1\":{\"82\":1}}],[\"find\",{\"1\":{\"47\":2}}],[\"fix\",{\"1\":{\"57\":1}}],[\"filename\",{\"1\":{\"46\":1,\"122\":1}}],[\"file\",{\"1\":{\"26\":9,\"27\":2}}],[\"files\",{\"1\":{\"26\":8,\"27\":2,\"34\":2,\"153\":1}}],[\"fileurltopath\",{\"1\":{\"26\":1,\"27\":1}}],[\"filter=\",{\"1\":{\"14\":1}}],[\"filter\",{\"0\":{\"10\":1},\"1\":{\"10\":3,\"11\":3,\"27\":1,\"223\":1}}],[\"frontend\",{\"1\":{\"206\":2}}],[\"from\",{\"1\":{\"25\":1,\"26\":6,\"57\":1,\"120\":1,\"146\":1,\"173\":1,\"184\":1}}],[\"fri\",{\"1\":{\"97\":2}}],[\"frame\",{\"1\":{\"51\":1}}],[\"framework\",{\"1\":{\"26\":1,\"172\":1,\"181\":1}}],[\"fs\",{\"1\":{\"26\":15,\"27\":4}}],[\"found\",{\"1\":{\"229\":1}}],[\"force\",{\"1\":{\"26\":2}}],[\"for\",{\"1\":{\"26\":3,\"27\":1,\"53\":1,\"82\":3,\"85\":1,\"179\":2}}],[\"formattargetdir\",{\"1\":{\"26\":3}}],[\"foo\",{\"1\":{\"7\":5,\"24\":4,\"143\":5}}],[\"f\",{\"1\":{\"26\":4,\"27\":2,\"148\":1,\"154\":3,\"172\":1,\"176\":1}}],[\"function\",{\"1\":{\"25\":1,\"26\":11,\"48\":1,\"50\":1,\"82\":2,\"85\":1,\"132\":3,\"142\":3,\"143\":1,\"147\":1,\"179\":5}}],[\"utils\",{\"0\":{\"234\":1}}],[\"utf\",{\"1\":{\"27\":1}}],[\"u\",{\"1\":{\"173\":1}}],[\"ubuntu\",{\"1\":{\"156\":2}}],[\"umijs\",{\"1\":{\"172\":1}}],[\"umd\",{\"1\":{\"148\":2,\"153\":3,\"154\":4,\"166\":1}}],[\"umbrella22\",{\"1\":{\"39\":1}}],[\"ui\",{\"0\":{\"173\":1,\"174\":1},\"1\":{\"131\":1,\"172\":1,\"173\":13,\"174\":7,\"175\":1,\"176\":10,\"177\":1,\"179\":1,\"180\":8,\"181\":8,\"183\":1,\"184\":4,\"185\":2}}],[\"usecallback\",{\"1\":{\"177\":1}}],[\"usecontext\",{\"1\":{\"177\":1}}],[\"usememo\",{\"1\":{\"177\":1,\"179\":1}}],[\"useeffect\",{\"1\":{\"174\":1,\"177\":1,\"179\":2}}],[\"usestate\",{\"1\":{\"174\":1,\"177\":2,\"179\":2}}],[\"usestartupchart\",{\"1\":{\"51\":2}}],[\"uses\",{\"1\":{\"156\":2}}],[\"use\",{\"1\":{\"70\":1}}],[\"useref\",{\"1\":{\"177\":2}}],[\"usereducer\",{\"1\":{\"177\":2}}],[\"userconfig\",{\"1\":{\"47\":1}}],[\"user\",{\"1\":{\"27\":2}}],[\"useragent\",{\"1\":{\"26\":3}}],[\"usr\",{\"1\":{\"24\":2,\"25\":1}}],[\"url解析\",{\"1\":{\"223\":1}}],[\"url\",{\"1\":{\"26\":1,\"27\":1,\"44\":2,\"109\":1,\"132\":1,\"225\":1}}],[\"up\",{\"1\":{\"40\":1}}],[\"upgrade\",{\"1\":{\"13\":2}}],[\"updater\",{\"1\":{\"53\":2,\"54\":2}}],[\"update中处理检查更新\",{\"1\":{\"53\":1}}],[\"updateinternaldependencies\",{\"1\":{\"13\":2}}],[\"update\",{\"1\":{\"9\":1,\"10\":1,\"52\":2,\"53\":4,\"54\":1}}],[\"unref\",{\"1\":{\"184\":2}}],[\"unresponsive\",{\"1\":{\"51\":1}}],[\"unix\",{\"1\":{\"149\":1}}],[\"uninstall\",{\"1\":{\"9\":1}}],[\"unknown>>\",{\"1\":{\"147\":5}}],[\"unknown>\",{\"1\":{\"147\":2}}],[\"undocked\",{\"1\":{\"51\":1}}],[\"undefined\",{\"1\":{\"26\":3,\"147\":1}}],[\"undefined>\",{\"1\":{\"26\":1}}],[\"unocss\",{\"1\":{\"31\":1}}],[\"unbuild\",{\"1\":{\"25\":4,\"34\":1}}],[\"unpkg\",{\"1\":{\"13\":1}}],[\"大数据渲染\",{\"1\":{\"217\":1}}],[\"大多数npm\",{\"1\":{\"9\":1}}],[\"大量包被重复安装\",{\"1\":{\"5\":1}}],[\"所谓预检请求\",{\"1\":{\"121\":1}}],[\"所以\",{\"1\":{\"176\":1,\"184\":1}}],[\"所以即使用户关闭了网页\",{\"1\":{\"132\":1}}],[\"所以会受客户端时间的影响而变得不精准\",{\"1\":{\"95\":1,\"101\":1}}],[\"所以需要弄清楚和强缓存\",{\"1\":{\"94\":1}}],[\"所以可以直接在终端中执行这些命令\",{\"1\":{\"25\":1}}],[\"所以pnpm为不同的\",{\"1\":{\"8\":1}}],[\"所有现代前端框架的实现原理\",{\"1\":{\"172\":1}}],[\"所有文件都会被打包到该模块中\",{\"1\":{\"153\":1}}],[\"所有订阅该消息的订阅者都会收到该消息\",{\"1\":{\"141\":1}}],[\"所有监听该事件的事件监听器都会被调用\",{\"1\":{\"141\":1}}],[\"所有访问过的网站缓存都将被清除\",{\"1\":{\"119\":1}}],[\"所有资源的请求首部都被加上了\",{\"1\":{\"118\":1}}],[\"所有资源都会重新向服务器获取\",{\"1\":{\"118\":1}}],[\"所有的对齐方式\",{\"1\":{\"81\":1}}],[\"所有的子项目都存放在根目录的\",{\"1\":{\"2\":1}}],[\"所有配置项可选\",{\"1\":{\"47\":1}}],[\"所有项目复用一套标准的工具和规范\",{\"1\":{\"29\":1}}],[\"所有被提升的包都可以访问\",{\"1\":{\"7\":1}}],[\"所有依赖都被提升到\",{\"1\":{\"5\":1}}],[\"那么最终获取的值会变成\",{\"1\":{\"135\":1}}],[\"那么\",{\"1\":{\"135\":1}}],[\"那么就进行网络请求\",{\"1\":{\"127\":1}}],[\"那么直接从内存中加载\",{\"1\":{\"127\":1}}],[\"那么首先找到对应的应用端口\",{\"1\":{\"122\":1}}],[\"那么可能还需要配置\",{\"1\":{\"121\":1}}],[\"那么异步资源也不会读取缓存\",{\"1\":{\"120\":1}}],[\"那么当\",{\"1\":{\"116\":1}}],[\"那么浏览器便会向服务器发起请求\",{\"1\":{\"99\":1}}],[\"那么服务器会发送更新后的资源给浏览器并返回最新的\",{\"1\":{\"98\":1}}],[\"那么服务器会返回状态码\",{\"1\":{\"97\":1}}],[\"那么服务器会将更新的资源发送给浏览器\",{\"1\":{\"97\":1}}],[\"那么使用\",{\"1\":{\"85\":1}}],[\"那么它可能就会有多组依赖项\",{\"1\":{\"8\":1}}],[\"那么一个子项目就代表一个package\",{\"1\":{\"2\":1}}],[\"有什么关系\",{\"1\":{\"223\":1}}],[\"有什么弊端\",{\"1\":{\"107\":1}}],[\"有哪些应用场景\",{\"1\":{\"225\":1}}],[\"有哪些方式可以实现继承\",{\"1\":{\"220\":1}}],[\"有哪些判断类型的方式\",{\"1\":{\"219\":1}}],[\"有两个思路实现上述框架在\",{\"1\":{\"180\":1}}],[\"有两个优点\",{\"1\":{\"179\":1}}],[\"有一个区别\",{\"1\":{\"179\":1}}],[\"有副作用的操作\",{\"1\":{\"177\":1}}],[\"有副作用因变量\",{\"1\":{\"174\":2,\"177\":1}}],[\"有副作用\",{\"1\":{\"174\":1}}],[\"有则依次调用并传参\",{\"1\":{\"142\":1}}],[\"有效时间\",{\"1\":{\"134\":1}}],[\"有效时间内不向服务器请求相同资源\",{\"1\":{\"91\":1}}],[\"有些时候\",{\"1\":{\"121\":1}}],[\"有三种常见的哈希类型\",{\"1\":{\"116\":1}}],[\"有\",{\"1\":{\"8\":1}}],[\"旁的\",{\"1\":{\"8\":1}}],[\"sfc\",{\"1\":{\"184\":1}}],[\"svelte\",{\"0\":{\"183\":1},\"1\":{\"176\":1,\"180\":2,\"183\":3,\"185\":1}}],[\"ssr\",{\"1\":{\"172\":1}}],[\"ssg等企业级应用特性\",{\"1\":{\"31\":1}}],[\"save\",{\"1\":{\"165\":1}}],[\"sat\",{\"1\":{\"115\":1}}],[\"systemjs\",{\"1\":{\"166\":1}}],[\"syntax\",{\"1\":{\"162\":1}}],[\"symbol\",{\"1\":{\"147\":1,\"217\":1}}],[\"symlink\",{\"1\":{\"16\":1,\"17\":2}}],[\"symlinks\",{\"1\":{\"8\":1}}],[\"sudheerj\",{\"1\":{\"208\":1}}],[\"suspense\",{\"1\":{\"185\":1}}],[\"subs\",{\"1\":{\"179\":10}}],[\"subscribe\",{\"1\":{\"179\":2}}],[\"sub\",{\"0\":{\"141\":1},\"1\":{\"141\":1}}],[\"sum\",{\"1\":{\"79\":4}}],[\"sure\",{\"1\":{\"57\":1}}],[\"sinon\",{\"1\":{\"150\":2}}],[\"since\",{\"0\":{\"97\":1},\"1\":{\"94\":1,\"97\":5,\"106\":2,\"107\":2}}],[\"silent\",{\"1\":{\"148\":2,\"149\":2}}],[\"size\",{\"1\":{\"77\":3,\"79\":4,\"156\":3}}],[\"sitepoint\",{\"1\":{\"67\":1}}],[\"simple\",{\"1\":{\"17\":1}}],[\"sliding\",{\"1\":{\"76\":1}}],[\"slice\",{\"1\":{\"25\":1,\"142\":3,\"146\":2,\"185\":1}}],[\"sleep吧\",{\"1\":{\"51\":1}}],[\"skiptaskbar\",{\"1\":{\"51\":1}}],[\"shouldcomponentupdate\",{\"1\":{\"185\":1}}],[\"show\",{\"1\":{\"51\":3}}],[\"shift\",{\"1\":{\"79\":1,\"118\":2}}],[\"sha1\",{\"1\":{\"108\":1}}],[\"shadow\",{\"1\":{\"72\":1}}],[\"sha256\",{\"1\":{\"54\":1}}],[\"sharturl\",{\"1\":{\"51\":3}}],[\"shared\",{\"1\":{\"11\":4}}],[\"shamefully\",{\"1\":{\"17\":1}}],[\"spec\",{\"1\":{\"150\":1}}],[\"splice\",{\"1\":{\"142\":1,\"145\":2}}],[\"split\",{\"1\":{\"26\":2}}],[\"spa\",{\"1\":{\"115\":1,\"172\":1}}],[\"spawn\",{\"1\":{\"48\":2}}],[\"s\",{\"0\":{\"100\":1},\"1\":{\"47\":1,\"83\":1,\"85\":12,\"94\":1,\"96\":5,\"100\":2,\"103\":1,\"104\":1,\"148\":3,\"149\":1,\"179\":2}}],[\"solid\",{\"1\":{\"180\":2}}],[\"sold\",{\"1\":{\"179\":1}}],[\"source\",{\"1\":{\"153\":1}}],[\"sourcetype\",{\"1\":{\"152\":1}}],[\"sourcemap\",{\"1\":{\"47\":3,\"166\":1}}],[\"socket\",{\"1\":{\"40\":1}}],[\"s+\",{\"1\":{\"26\":1}}],[\"seo\",{\"1\":{\"172\":1}}],[\"section\",{\"1\":{\"148\":1,\"157\":2}}],[\"seconds\",{\"1\":{\"71\":1}}],[\"sep\",{\"1\":{\"115\":1}}],[\"sequencediagram\",{\"1\":{\"106\":1}}],[\"serviceworkerregistration\",{\"1\":{\"132\":1}}],[\"serviceworker\",{\"1\":{\"132\":3}}],[\"service\",{\"0\":{\"130\":1,\"132\":1},\"1\":{\"92\":1,\"131\":1,\"132\":57,\"136\":1}}],[\"services\",{\"1\":{\"51\":1,\"53\":1}}],[\"server\",{\"1\":{\"43\":1,\"44\":2,\"52\":2,\"93\":1,\"122\":3}}],[\"setter\",{\"1\":{\"174\":1,\"179\":3}}],[\"settimeout\",{\"1\":{\"46\":1,\"51\":1}}],[\"setx\",{\"1\":{\"174\":2}}],[\"setup>\",{\"1\":{\"184\":1}}],[\"setup\",{\"1\":{\"156\":2}}],[\"set\",{\"1\":{\"85\":1,\"134\":2,\"142\":2,\"179\":3,\"217\":1,\"223\":1}}],[\"setalwaysontop\",{\"1\":{\"51\":1}}],[\"setapplicationmenu\",{\"1\":{\"51\":1}}],[\"setasdefaultprotocolclient\",{\"1\":{\"50\":1}}],[\"setipc\",{\"1\":{\"51\":1,\"52\":1}}],[\"sessionstorage\",{\"1\":{\"224\":1}}],[\"session\",{\"1\":{\"50\":1,\"135\":3}}],[\"select\",{\"1\":{\"26\":3}}],[\"semver\",{\"1\":{\"14\":1}}],[\"srcfile\",{\"1\":{\"26\":2}}],[\"srcdir\",{\"1\":{\"26\":3}}],[\"src\",{\"1\":{\"25\":1,\"26\":4,\"44\":2,\"46\":1,\"47\":1,\"50\":1,\"51\":1,\"53\":1,\"55\":1,\"148\":3,\"153\":1,\"157\":2,\"166\":1,\"168\":2}}],[\"steps\",{\"1\":{\"156\":1}}],[\"steve\",{\"1\":{\"64\":1}}],[\"storage\",{\"1\":{\"92\":1,\"135\":11,\"136\":1}}],[\"store\",{\"1\":{\"3\":1,\"7\":2,\"17\":1,\"94\":1,\"96\":3,\"173\":1,\"175\":4,\"177\":1}}],[\"stop\",{\"1\":{\"52\":1}}],[\"stderr\",{\"1\":{\"48\":1}}],[\"stdout\",{\"1\":{\"48\":1}}],[\"strict\",{\"1\":{\"148\":1,\"166\":2}}],[\"stringify\",{\"1\":{\"27\":1,\"47\":1,\"135\":1}}],[\"string\",{\"1\":{\"25\":2,\"26\":20,\"27\":1,\"48\":2,\"51\":3,\"142\":3,\"147\":1}}],[\"str\",{\"1\":{\"26\":1}}],[\"stub\",{\"1\":{\"25\":5}}],[\"star\",{\"1\":{\"63\":1}}],[\"startelectron\",{\"1\":{\"46\":1,\"48\":1}}],[\"startmain\",{\"1\":{\"46\":1}}],[\"start\",{\"1\":{\"17\":1,\"52\":1}}],[\"static\",{\"1\":{\"52\":1}}],[\"statsync\",{\"1\":{\"26\":1}}],[\"stat\",{\"1\":{\"26\":2}}],[\"state\",{\"1\":{\"26\":2,\"172\":2,\"175\":2,\"176\":3,\"179\":4}}],[\"stage\",{\"1\":{\"17\":1}}],[\"script>\",{\"1\":{\"184\":1}}],[\"scripts\",{\"1\":{\"11\":1,\"14\":1,\"25\":1,\"34\":2,\"148\":2,\"149\":1,\"155\":1}}],[\"scope\",{\"1\":{\"132\":1}}],[\"schema\",{\"1\":{\"13\":1}}],[\"它在保持灵活性基础上\",{\"1\":{\"202\":1}}],[\"它需要找到前后的差异并只更新变化的地方\",{\"1\":{\"200\":1}}],[\"它基于第二种思路\",{\"1\":{\"180\":1}}],[\"它能实现跨层级传递\",{\"1\":{\"175\":1}}],[\"它开发的程序更安全\",{\"1\":{\"161\":1}}],[\"它开始接管网络请求\",{\"1\":{\"132\":1}}],[\"它支持多种文档格式\",{\"1\":{\"157\":1}}],[\"它支持多种更新方式\",{\"1\":{\"53\":1}}],[\"它可以根据代码中的注释自动生成文档\",{\"1\":{\"157\":1}}],[\"它可以自动化地创建一个新的项目\",{\"1\":{\"24\":1}}],[\"它包含了当前项目的版本号\",{\"1\":{\"155\":1}}],[\"它包含原始数组中的所有元素\",{\"1\":{\"146\":1}}],[\"它还支持一些常用的特性\",{\"1\":{\"154\":1}}],[\"它告诉\",{\"1\":{\"153\":1}}],[\"它仍然会向终端输出类型检查和语法分析的结果\",{\"1\":{\"151\":1}}],[\"它不会删除任何元素\",{\"1\":{\"145\":1}}],[\"它返回一个事件管理对象\",{\"1\":{\"142\":1}}],[\"它使用一个主题\",{\"1\":{\"141\":1}}],[\"它使用一个事件发射器对象来管理事件和事件监听器\",{\"1\":{\"141\":1}}],[\"它几乎可以存储浏览器中的任何数据内容\",{\"1\":{\"135\":1}}],[\"它封装了\",{\"1\":{\"135\":1}}],[\"它运行在浏览器的后台线程中\",{\"1\":{\"132\":1}}],[\"它存储在内存中\",{\"1\":{\"124\":1}}],[\"它只是一种基于经验的估算方法\",{\"1\":{\"109\":1}}],[\"它是\",{\"1\":{\"179\":1}}],[\"它是一种基于启发式算法的缓存过期策略\",{\"1\":{\"109\":1}}],[\"它是在\",{\"1\":{\"93\":1}}],[\"它们各有优缺点\",{\"1\":{\"199\":1}}],[\"它们分别用于支持\",{\"1\":{\"150\":1}}],[\"它们的作用相同\",{\"1\":{\"107\":1}}],[\"它们的作用是相同的\",{\"1\":{\"85\":1}}],[\"它们在实现上是有一些区别\",{\"1\":{\"85\":1}}],[\"它们负责渲染和处理用户界面\",{\"1\":{\"42\":1}}],[\"它通过维护一个大小可变的窗口\",{\"1\":{\"76\":1}}],[\"它创建了一个\",{\"1\":{\"51\":1}}],[\"它会与上次更新的\",{\"1\":{\"184\":1}}],[\"它会查找\",{\"1\":{\"150\":1}}],[\"它会随着每一次资源请求的请求报头一起传递到服务端进行验证\",{\"1\":{\"135\":1}}],[\"它会等待所有已打开的页面关闭\",{\"1\":{\"132\":1}}],[\"它会下载更新包\",{\"1\":{\"54\":1}}],[\"它会阻止\",{\"1\":{\"46\":1}}],[\"它会被硬链接到其依赖项的软连接\",{\"1\":{\"8\":1}}],[\"它调用\",{\"1\":{\"43\":1}}],[\"它主要是基于选定框架\",{\"1\":{\"29\":1}}],[\"它的源码非常简洁\",{\"1\":{\"158\":1}}],[\"它的作用类似于\",{\"1\":{\"149\":1}}],[\"它的作用是在运行时加载打包后的代码\",{\"1\":{\"25\":1}}],[\"它的主要工作是管理包的version和生成changelog\",{\"1\":{\"12\":1}}],[\"它用于存储所有项目共享的包\",{\"1\":{\"7\":1}}],[\"通讯\",{\"1\":{\"224\":1}}],[\"通讯协议\",{\"1\":{\"93\":1}}],[\"通知所有订阅该\",{\"1\":{\"179\":1}}],[\"通配符模式时\",{\"1\":{\"156\":1}}],[\"通配符事件类型\",{\"1\":{\"147\":1}}],[\"通用\",{\"1\":{\"93\":1}}],[\"通信\",{\"1\":{\"51\":1}}],[\"通过一个\",{\"1\":{\"202\":1}}],[\"通过减少运行时\",{\"1\":{\"184\":1}}],[\"通过分析\",{\"1\":{\"158\":1}}],[\"通过缓存\",{\"1\":{\"132\":1}}],[\"通过使用\",{\"1\":{\"129\":1}}],[\"通过设置超时并在超时后将\",{\"1\":{\"46\":1}}],[\"通过\",{\"1\":{\"15\":1}}],[\"通过扁平化依赖解决上述问题\",{\"1\":{\"5\":1}}],[\"通常被称为\",{\"1\":{\"175\":1}}],[\"通常被用来解决跨域问题\",{\"1\":{\"121\":1}}],[\"通常需要清除旧的缓存\",{\"1\":{\"132\":1}}],[\"通常用以下几种方式生成\",{\"1\":{\"108\":1}}],[\"通常用于基于框架的简单脚手架\",{\"1\":{\"28\":1}}],[\"通常会将一些静态资源添加到缓存中\",{\"1\":{\"132\":1}}],[\"通常会进行以下几个步骤\",{\"1\":{\"132\":1}}],[\"通常会进行一些初始化操作\",{\"1\":{\"132\":1}}],[\"通常会编写以下脚本进行\",{\"1\":{\"132\":1}}],[\"通常会打开一个缓存\",{\"1\":{\"132\":1}}],[\"通常会以\",{\"1\":{\"29\":1}}],[\"通常会定义一些模板和配置文件\",{\"1\":{\"24\":1}}],[\"通常是一些命令行工具或者脚本\",{\"1\":{\"25\":1}}],[\"通常情况下\",{\"1\":{\"25\":1}}],[\"通常\",{\"1\":{\"8\":1,\"22\":1}}],[\"处理程序\",{\"1\":{\"142\":2}}],[\"处理客户端的请求并返回响应\",{\"1\":{\"132\":1}}],[\"处理客户端的请求并返回响应的阶段\",{\"1\":{\"132\":1}}],[\"处理文件监视器发出的所有其他事件\",{\"1\":{\"46\":1}}],[\"处理复杂的用户输入\",{\"1\":{\"23\":1}}],[\"处理\",{\"0\":{\"8\":1},\"1\":{\"42\":1,\"48\":1,\"174\":1}}],[\"处理直接依赖关系\",{\"1\":{\"7\":1}}],[\"布局\",{\"0\":{\"212\":1}}],[\"布局描述\",{\"1\":{\"93\":1}}],[\"布局都会保持上述结构\",{\"1\":{\"7\":1}}],[\"布局使用符号链接来创建依赖项的嵌套结构\",{\"1\":{\"7\":1}}],[\"无副作用因变量\",{\"1\":{\"174\":2,\"177\":1}}],[\"无副作用的因变量\",{\"1\":{\"174\":1}}],[\"无法跨域传输\",{\"1\":{\"135\":1}}],[\"无法共享内部变量导致未知bug\",{\"1\":{\"5\":1}}],[\"无论采用何种方式\",{\"1\":{\"108\":1}}],[\"无论依赖项的数量和依赖关系图的深度如何\",{\"1\":{\"7\":1}}],[\"无缓存\",{\"1\":{\"106\":1}}],[\"无重复字符的最长子串\",{\"1\":{\"86\":1}}],[\"无参数运行\",{\"1\":{\"35\":1}}],[\"无依赖的模板\",{\"1\":{\"32\":1}}],[\"无需显示指明依赖\",{\"1\":{\"179\":1}}],[\"无需手动设置\",{\"1\":{\"155\":1}}],[\"无需配置\",{\"1\":{\"154\":1}}],[\"无需再次请求服务器\",{\"1\":{\"95\":1}}],[\"无需切换开发环境\",{\"1\":{\"29\":1}}],[\"无需过多关项目构建及公共逻辑维护\",{\"1\":{\"22\":1}}],[\"无效的\",{\"1\":{\"26\":1}}],[\"避免影响原始列表\",{\"1\":{\"142\":1}}],[\"避免再次使用它\",{\"1\":{\"51\":1}}],[\"避免同时运行多个实例的\",{\"1\":{\"46\":1}}],[\"避免下载依赖因网络问题失败\",{\"1\":{\"40\":1}}],[\"避免循环符号链接\",{\"1\":{\"7\":1}}],[\"避免依赖层级过深\",{\"1\":{\"5\":1}}],[\"内存泄漏的场景有哪些\",{\"1\":{\"225\":1}}],[\"内存缓存更快\",{\"1\":{\"100\":1}}],[\"内存缓存\",{\"1\":{\"100\":1}}],[\"内含详细讲解\",{\"1\":{\"207\":1}}],[\"内置\",{\"1\":{\"177\":1}}],[\"内置多种功能的前端框架\",{\"1\":{\"172\":1}}],[\"内置路由\",{\"1\":{\"172\":1}}],[\"内配置的方式\",{\"1\":{\"152\":1}}],[\"内引入\",{\"1\":{\"25\":1}}],[\"内容如下\",{\"1\":{\"25\":1,\"167\":1}}],[\"内网建议\",{\"1\":{\"13\":1}}],[\"内的子文件夹中\",{\"1\":{\"7\":1}}],[\"内部有优化机制\",{\"1\":{\"185\":1}}],[\"内部的自变量变化\",{\"1\":{\"184\":1}}],[\"内部进行互相引用\",{\"1\":{\"11\":1}}],[\"内部如何管理依赖\",{\"1\":{\"5\":1}}],[\"内部使用基于内容寻址的文件系统来存储磁盘上所有的文件\",{\"1\":{\"2\":1}}],[\"08\",{\"1\":{\"115\":1}}],[\"04\",{\"1\":{\"115\":1}}],[\"09spahh3nxwd8kivqb10hssz66\",{\"1\":{\"98\":2}}],[\"03\",{\"1\":{\"95\":1}}],[\"0\",{\"1\":{\"7\":8,\"13\":2,\"26\":9,\"27\":1,\"79\":3,\"82\":9,\"85\":3,\"95\":1,\"104\":2,\"115\":1,\"118\":1,\"142\":1,\"145\":6,\"174\":2,\"184\":4}}],[\"示例如下\",{\"1\":{\"184\":1}}],[\"示例\",{\"1\":{\"7\":1,\"79\":1}}],[\"然后递归地将数据渲染成\",{\"1\":{\"202\":1}}],[\"然后新版本的\",{\"1\":{\"132\":1}}],[\"然后进入激活阶段\",{\"1\":{\"132\":1}}],[\"然后返回响应\",{\"1\":{\"132\":1}}],[\"然后再次向服务器发送请求\",{\"1\":{\"106\":1}}],[\"然后可以不断地向右移动右指针\",{\"1\":{\"84\":1}}],[\"然后根据条件判断选择对应的特性\",{\"1\":{\"30\":1}}],[\"然后在当前项目的\",{\"1\":{\"25\":1}}],[\"然后在\",{\"1\":{\"25\":1}}],[\"然后执行其\",{\"1\":{\"24\":1}}],[\"然后删减\",{\"1\":{\"22\":1}}],[\"然后创建\",{\"1\":{\"11\":1}}],[\"然后对这些包执行指定的操作\",{\"1\":{\"10\":1}}],[\"然后\",{\"1\":{\"7\":1,\"24\":1,\"43\":1}}],[\"然后针对每个节点下的包会做如下处理\",{\"1\":{\"5\":1}}],[\"则由\",{\"1\":{\"199\":1}}],[\"则代码在编译后不会报错\",{\"1\":{\"180\":1}}],[\"则代表项目根目录下的所有请求都可以被代理\",{\"1\":{\"132\":1}}],[\"则提供了一组用于创建测试所需的测试桩和测试桩验证函数等工具函数\",{\"1\":{\"150\":1}}],[\"则返回\",{\"1\":{\"145\":1}}],[\"则将该事件类型的处理函数列表清空\",{\"1\":{\"142\":1}}],[\"则用新处理函数初始化处理函数列表\",{\"1\":{\"142\":1}}],[\"则存储于浏览器本地\",{\"1\":{\"135\":1}}],[\"则不会触发激活阶段\",{\"1\":{\"132\":1}}],[\"则不会进入激活阶段\",{\"1\":{\"132\":1}}],[\"则在页面加载完成后注册\",{\"1\":{\"132\":1}}],[\"则直接会从磁盘中加载该资源\",{\"1\":{\"129\":1}}],[\"则表示预提取\",{\"1\":{\"129\":1}}],[\"则表示资源已更新\",{\"1\":{\"107\":2}}],[\"则表示资源未更新\",{\"1\":{\"107\":2}}],[\"则浏览器从浏览器缓存中获取更新后的缓存\",{\"1\":{\"106\":1}}],[\"则浏览器从浏览器缓存中获取响应\",{\"1\":{\"106\":1}}],[\"则浏览器更新缓存并将更新后的缓存返回\",{\"1\":{\"106\":1}}],[\"则浏览器向浏览器缓存请求缓存\",{\"1\":{\"106\":1}}],[\"则受客户端本地时间修改的影响\",{\"1\":{\"104\":1}}],[\"则是为了兼容\",{\"1\":{\"118\":1}}],[\"则是相对时间\",{\"1\":{\"101\":1}}],[\"则是要执行的命令\",{\"1\":{\"10\":1}}],[\"则更新\",{\"1\":{\"82\":1}}],[\"则弹出队列头部元素\",{\"1\":{\"79\":1}}],[\"则删除\",{\"1\":{\"50\":1}}],[\"则运行该命令\",{\"1\":{\"156\":1}}],[\"则运行\",{\"1\":{\"35\":1}}],[\"则先删除其下非\",{\"1\":{\"27\":1}}],[\"则使用默认模板\",{\"1\":{\"27\":1}}],[\"则检查项目名是否合法\",{\"1\":{\"27\":1}}],[\"则中止操作\",{\"1\":{\"27\":1}}],[\"则会注销所有指定类型的处理程序\",{\"1\":{\"142\":1}}],[\"则会以\",{\"1\":{\"27\":1}}],[\"则会自动从\",{\"1\":{\"24\":1}}],[\"则让用户重新从列表选择\",{\"1\":{\"26\":1}}],[\"则可以将模块编译成可重用的\",{\"1\":{\"25\":1}}],[\"则这个传递package便可在项目中有几组不同的依赖项\",{\"1\":{\"8\":1}}],[\"则\",{\"1\":{\"7\":1}}],[\"lydiahallie\",{\"1\":{\"226\":1}}],[\"latest\",{\"1\":{\"156\":2,\"167\":1}}],[\"last\",{\"0\":{\"97\":1,\"107\":1},\"1\":{\"94\":1,\"97\":3,\"107\":10,\"115\":2}}],[\"lambda\",{\"1\":{\"17\":1}}],[\"lr\",{\"1\":{\"94\":1}}],[\"leetcode\",{\"1\":{\"206\":1}}],[\"len\",{\"1\":{\"82\":7}}],[\"len2\",{\"1\":{\"82\":4}}],[\"len1\",{\"1\":{\"82\":4}}],[\"lengthoflongestsubstring\",{\"1\":{\"85\":1}}],[\"length\",{\"1\":{\"26\":4,\"50\":1,\"79\":2,\"82\":2,\"85\":1,\"121\":1,\"122\":1,\"179\":1}}],[\"lerna\",{\"1\":{\"29\":1}}],[\"let\",{\"1\":{\"26\":2,\"82\":12,\"85\":2,\"142\":1,\"184\":3}}],[\"ls\",{\"1\":{\"25\":1}}],[\"loop\",{\"1\":{\"222\":1}}],[\"localstorage\",{\"1\":{\"224\":1}}],[\"local\",{\"1\":{\"135\":3}}],[\"localhost\",{\"1\":{\"132\":1}}],[\"location\",{\"1\":{\"122\":4}}],[\"lock\",{\"1\":{\"5\":1}}],[\"loiane\",{\"1\":{\"64\":1}}],[\"load\",{\"1\":{\"132\":1}}],[\"loadurl\",{\"1\":{\"51\":2,\"55\":1}}],[\"loading\",{\"1\":{\"213\":1}}],[\"loadingwindow\",{\"1\":{\"51\":2}}],[\"loadingurl\",{\"1\":{\"51\":3}}],[\"loadwindow\",{\"1\":{\"51\":6}}],[\"loadextension\",{\"1\":{\"50\":1}}],[\"loaders\",{\"1\":{\"47\":1}}],[\"login\",{\"1\":{\"34\":1}}],[\"log\",{\"1\":{\"25\":1,\"26\":3,\"27\":1,\"50\":3,\"132\":2,\"143\":2,\"168\":1,\"174\":1}}],[\"lodash\",{\"1\":{\"11\":2}}],[\"list\",{\"1\":{\"207\":1}}],[\"listener\",{\"1\":{\"52\":1}}],[\"listen\",{\"1\":{\"43\":1,\"122\":3}}],[\"linux\",{\"1\":{\"149\":1}}],[\"linux软连接和硬链接\",{\"1\":{\"17\":1}}],[\"lint\",{\"1\":{\"17\":2,\"148\":3,\"149\":1}}],[\"links\",{\"1\":{\"17\":1}}],[\"linked\",{\"1\":{\"13\":2}}],[\"link\",{\"1\":{\"9\":1,\"16\":1,\"17\":1,\"25\":2}}],[\"lib\",{\"1\":{\"14\":1,\"166\":3}}],[\"library\",{\"1\":{\"7\":2,\"172\":1}}],[\"~\",{\"1\":{\"7\":2,\"26\":5,\"122\":2}}],[\"其内部实现是命令式的\",{\"1\":{\"199\":1}}],[\"其各模块间是相互关联和制约的\",{\"1\":{\"198\":1}}],[\"其每次更新流程都是从应用的根节点开始\",{\"1\":{\"185\":1}}],[\"其编译后的代码如下所示\",{\"1\":{\"184\":1}}],[\"其余的比较无意义\",{\"1\":{\"184\":1}}],[\"其优点如下\",{\"1\":{\"181\":1}}],[\"其工作原理可概括为两个步骤\",{\"1\":{\"181\":1}}],[\"其思路\",{\"1\":{\"180\":1}}],[\"其更新粒度不需要很细\",{\"1\":{\"179\":1}}],[\"其官方维护已于\",{\"1\":{\"167\":1}}],[\"其特点是简单易用\",{\"1\":{\"154\":1}}],[\"其他组件传递而来的自变量\",{\"1\":{\"175\":1}}],[\"其他\",{\"0\":{\"153\":1}}],[\"其他大部分资源会从磁盘加载\",{\"1\":{\"128\":1}}],[\"其配置在\",{\"1\":{\"150\":1}}],[\"其配置文件为\",{\"1\":{\"47\":1}}],[\"其配置文件位于\",{\"1\":{\"44\":1}}],[\"其结果为\",{\"1\":{\"145\":1}}],[\"其可以存储不少于\",{\"1\":{\"135\":1}}],[\"其生命周期存在于网页会话期间\",{\"1\":{\"135\":1}}],[\"其又可分为\",{\"1\":{\"135\":1}}],[\"其存储空间很小\",{\"1\":{\"135\":1}}],[\"其被磁盘缓存的概率远大于被内存缓存\",{\"1\":{\"128\":1}}],[\"其根源其实在前端\",{\"1\":{\"121\":1}}],[\"其效果类似于在开发者工具\",{\"1\":{\"118\":1}}],[\"其计算公式为\",{\"1\":{\"104\":2}}],[\"其会把这个值存储起来\",{\"1\":{\"97\":1,\"98\":1}}],[\"其属于响应首部字段\",{\"1\":{\"97\":1,\"98\":1}}],[\"其只适用于公共缓存服务器\",{\"1\":{\"96\":1}}],[\"其用于控制缓存的行为\",{\"1\":{\"96\":1}}],[\"其给出了缓存过期的绝对时间\",{\"1\":{\"95\":1}}],[\"其由首部字段名和字段值构成\",{\"1\":{\"93\":1}}],[\"其时间复杂度通常为o\",{\"1\":{\"76\":1}}],[\"其它参数\",{\"1\":{\"149\":1}}],[\"其它大部分资源都命中了强缓存\",{\"1\":{\"115\":1}}],[\"其它依赖\",{\"0\":{\"49\":1}}],[\"其它工具函数\",{\"1\":{\"26\":1}}],[\"其主要内容如下\",{\"1\":{\"47\":1}}],[\"其下提供了很多模板\",{\"1\":{\"29\":1}}],[\"其中每个消息都有一个名称和一个或多个订阅者\",{\"1\":{\"141\":1}}],[\"其中每个事件都有一个名称和一个或多个事件监听器\",{\"1\":{\"141\":1}}],[\"其中左指针代表着上文中\",{\"1\":{\"84\":1}}],[\"其中的值为上次请求时返回的\",{\"1\":{\"107\":2}}],[\"其中的\",{\"1\":{\"13\":1}}],[\"其中\",{\"1\":{\"10\":1,\"24\":1,\"103\":1,\"150\":1,\"157\":1,\"172\":1,\"174\":1}}],[\"其中包含所有依赖项的符号链接\",{\"1\":{\"7\":1}}],[\"其真实的位置在\",{\"1\":{\"6\":1}}],[\"在使用声明式代码的情况下最大限度地接近命令式代码的性能\",{\"1\":{\"201\":1}}],[\"在框架实现上有极大不同\",{\"1\":{\"183\":1}}],[\"在保持运行结果一致下\",{\"1\":{\"180\":1}}],[\"在运行时省略了\",{\"1\":{\"183\":1}}],[\"在运行时也能拥有极好的性能\",{\"1\":{\"181\":1}}],[\"在运行时\",{\"1\":{\"180\":1}}],[\"在运行命令时自动设置的\",{\"1\":{\"155\":1}}],[\"在编译时直接建立\",{\"1\":{\"180\":1}}],[\"在编译时可标记模板语法中的静态部分与动态部分\",{\"1\":{\"180\":1}}],[\"在编译时可以知道类型\",{\"1\":{\"164\":1}}],[\"在寻找\",{\"1\":{\"180\":1}}],[\"在浏览器执行到\",{\"1\":{\"180\":1}}],[\"在浏览器中强缓存的保质期限怎么计算\",{\"1\":{\"103\":1}}],[\"在模板中使用未定义的方法\",{\"1\":{\"180\":1}}],[\"在宿主环境执行时\",{\"1\":{\"180\":1}}],[\"在多次\",{\"1\":{\"177\":1}}],[\"在函数执行过程中产生对外部环境的影响\",{\"1\":{\"174\":1}}],[\"在状态变化后改变\",{\"1\":{\"173\":1}}],[\"在线查看\",{\"1\":{\"173\":1}}],[\"在线资源~\",{\"1\":{\"74\":1}}],[\"在根目录新建\",{\"1\":{\"166\":1}}],[\"在根目录下执行\",{\"1\":{\"33\":1}}],[\"在程序运行时才知道类型\",{\"1\":{\"164\":1}}],[\"在设计过程中考虑边缘情况\",{\"1\":{\"161\":1}}],[\"在同域下被设置时\",{\"1\":{\"135\":1}}],[\"在调用接口时需要手动将\",{\"1\":{\"134\":1}}],[\"在激活阶段\",{\"1\":{\"132\":2}}],[\"在激活和运行阶段\",{\"1\":{\"132\":1}}],[\"在这个命令中\",{\"1\":{\"154\":1}}],[\"在这个阶段\",{\"1\":{\"132\":1}}],[\"在这个算法中\",{\"1\":{\"85\":1}}],[\"在更新页面时的性能\",{\"1\":{\"201\":1}}],[\"在更新页面时只会更新必要元素\",{\"1\":{\"201\":1}}],[\"在更新\",{\"1\":{\"132\":1}}],[\"在更新过程中发生错误时触发\",{\"1\":{\"53\":1}}],[\"在安装阶段\",{\"1\":{\"132\":4}}],[\"在安装包时\",{\"1\":{\"25\":1}}],[\"在前端访问后端跨域时\",{\"1\":{\"121\":1}}],[\"在前端开发中\",{\"1\":{\"121\":1}}],[\"在前端工程化中\",{\"1\":{\"22\":1}}],[\"在开发者工具打开时\",{\"1\":{\"118\":1}}],[\"在开发环境下优化依赖的行为\",{\"1\":{\"44\":1}}],[\"在文件内容发生变化时\",{\"1\":{\"116\":1}}],[\"在资源\",{\"1\":{\"115\":1}}],[\"在实际应用中\",{\"1\":{\"107\":1}}],[\"在服务器进行对比时一定精准吗\",{\"1\":{\"107\":1}}],[\"在请求首部中被使用时\",{\"1\":{\"96\":1}}],[\"在移动结束后\",{\"1\":{\"84\":1}}],[\"在每一步的操作中\",{\"1\":{\"84\":1}}],[\"在每次\",{\"1\":{\"13\":1}}],[\"在处理数据时\",{\"1\":{\"76\":1}}],[\"在下载完成后触发\",{\"1\":{\"53\":1}}],[\"在下载更新时触发\",{\"1\":{\"53\":1}}],[\"在上方的\",{\"1\":{\"53\":1}}],[\"在任务栏中显示窗口\",{\"1\":{\"51\":1}}],[\"在窗口关闭时移除相应窗口的引用对象\",{\"1\":{\"51\":1}}],[\"在此事件后显示窗口将没有视觉闪烁\",{\"1\":{\"51\":1}}],[\"在此之前使用的是独立的模板仓库\",{\"1\":{\"29\":1}}],[\"在主窗口加载前先显示\",{\"1\":{\"51\":1}}],[\"在一个仓库中维护一个模板\",{\"1\":{\"28\":1}}],[\"在命令行输入\",{\"1\":{\"26\":1}}],[\"在终端中输出彩色文字\",{\"1\":{\"49\":1}}],[\"在终端中输入这些命令时\",{\"1\":{\"25\":1}}],[\"在终端中显示彩色的\",{\"1\":{\"41\":1}}],[\"在终端中执行\",{\"1\":{\"25\":1}}],[\"在终端输出彩色信息文案\",{\"1\":{\"23\":1}}],[\"在项目初始化时就具有统一的技术栈\",{\"1\":{\"22\":1}}],[\"在工程根目录下\",{\"1\":{\"14\":1}}],[\"在\",{\"1\":{\"7\":1,\"13\":1,\"17\":2,\"25\":1,\"26\":2,\"34\":1,\"47\":1,\"95\":1,\"96\":1,\"116\":1,\"132\":6,\"141\":1,\"145\":1,\"147\":2,\"154\":1,\"155\":1,\"168\":1,\"173\":1,\"174\":1,\"179\":1,\"180\":1,\"185\":2}}],[\"在a\",{\"1\":{\"5\":1}}],[\"用逗号隔开\",{\"1\":{\"154\":1}}],[\"用其以提升服务器资源的重复利用率\",{\"1\":{\"91\":1}}],[\"用来获取字符串中指定位置的字符\",{\"1\":{\"85\":1}}],[\"用窗口大小\",{\"1\":{\"77\":1}}],[\"用法查看此文档\",{\"1\":{\"26\":1}}],[\"用户在客户端输入账号密码并点击登录后\",{\"1\":{\"134\":1}}],[\"用户体验\",{\"1\":{\"131\":1}}],[\"用户操作与\",{\"0\":{\"117\":1}}],[\"用户界面代码\",{\"1\":{\"55\":1}}],[\"用户选择的选项\",{\"1\":{\"27\":1}}],[\"用户取消操作\",{\"1\":{\"26\":2}}],[\"用户响应将会保存到返回响应对象中的这个属性上\",{\"1\":{\"26\":1}}],[\"用户可通过\",{\"1\":{\"26\":1}}],[\"用\",{\"1\":{\"17\":1,\"142\":2,\"173\":1}}],[\"用于实现\",{\"1\":{\"180\":1}}],[\"用于\",{\"1\":{\"180\":2,\"185\":1}}],[\"用于定义要编译的源文件\",{\"1\":{\"166\":1}}],[\"用于打包构建项目\",{\"1\":{\"156\":1}}],[\"用于指定哪些文件是该模块的一部分\",{\"1\":{\"153\":1}}],[\"用于判断测试结果是否符合预期\",{\"1\":{\"150\":1}}],[\"用于存储事件类型及其处理函数列表\",{\"1\":{\"147\":1}}],[\"用于存储最近访问的资源\",{\"1\":{\"124\":1}}],[\"用于注册\",{\"1\":{\"142\":1}}],[\"用于表示资源的特定版本\",{\"1\":{\"108\":1}}],[\"用于临时存储经常访问的数据\",{\"1\":{\"90\":1}}],[\"用于解决数组或字符串的子问题\",{\"1\":{\"76\":1}}],[\"用于解析\",{\"1\":{\"47\":1}}],[\"用于为一个\",{\"1\":{\"52\":1}}],[\"用于初始化\",{\"1\":{\"51\":1}}],[\"用于初始化窗口设置\",{\"1\":{\"51\":1}}],[\"用于对打包后的代码进行混淆和压缩\",{\"1\":{\"47\":1}}],[\"用于使用\",{\"1\":{\"47\":1}}],[\"用于创建模块的别名\",{\"1\":{\"47\":1}}],[\"用于创建基于模板的项目\",{\"1\":{\"23\":1}}],[\"用于在组件多次\",{\"1\":{\"177\":1}}],[\"用于在测试中使用断言库\",{\"1\":{\"152\":1}}],[\"用于在程序中实现组件之间的松散耦合通信\",{\"1\":{\"140\":1}}],[\"用于在空闲时间预加载资源\",{\"1\":{\"129\":1}}],[\"用于在页面加载时预加载资源\",{\"1\":{\"129\":1}}],[\"用于在缓存验证失效流程中判断资源是否已更新\",{\"1\":{\"107\":1}}],[\"用于在\",{\"1\":{\"52\":1}}],[\"用于在打包过程中替换代码中的字符串或者其他值\",{\"1\":{\"47\":1}}],[\"用于在所有项目间共享依赖项\",{\"1\":{\"7\":1}}],[\"用于将索引转换为非负整数\",{\"1\":{\"145\":1}}],[\"用于将\",{\"1\":{\"47\":3,\"151\":1}}],[\"用于防止快速连续多次重启\",{\"1\":{\"46\":1}}],[\"用于处理静态资源的路径问题\",{\"1\":{\"44\":2}}],[\"用于快速搭建\",{\"1\":{\"42\":1}}],[\"用于开发环境代码构建\",{\"1\":{\"41\":1}}],[\"用于开发调试\",{\"1\":{\"25\":1}}],[\"用于生成基于\",{\"1\":{\"30\":1}}],[\"用于管理后台\",{\"1\":{\"26\":1}}],[\"用于新项目的启动和搭建\",{\"1\":{\"21\":1}}],[\"用于匹配包的名称\",{\"1\":{\"10\":1}}],[\"用一个\",{\"1\":{\"2\":1}}],[\"这一步骤\",{\"1\":{\"183\":1}}],[\"这一步骤的工作量\",{\"1\":{\"180\":1}}],[\"这一步\",{\"1\":{\"180\":1}}],[\"这一步使用\",{\"1\":{\"162\":1}}],[\"这里表示所有以\",{\"1\":{\"150\":1}}],[\"这里指定了\",{\"1\":{\"150\":1}}],[\"这种松散耦合可以提高代码的可维护性和可扩展性\",{\"1\":{\"141\":1}}],[\"这两种模式都是用于在程序中实现组件之间的松散耦合\",{\"1\":{\"141\":1}}],[\"这两种模板的区别在于模板的代码管理方式\",{\"1\":{\"32\":1}}],[\"这段代码首先检查浏览器是否支持\",{\"1\":{\"132\":1}}],[\"这使得\",{\"1\":{\"132\":1}}],[\"这对每次访问都需要确认身份的应用来说很有用\",{\"1\":{\"96\":1}}],[\"这可在开发过程中尽早地发现类型错误\",{\"1\":{\"151\":1}}],[\"这可能会导致应用出现问题\",{\"1\":{\"46\":1}}],[\"这可以节省磁盘空间\",{\"1\":{\"3\":1}}],[\"这是社区目前流行的一种模板管理方式\",{\"1\":{\"29\":1}}],[\"这个环境变量是由\",{\"1\":{\"155\":1}}],[\"这个属性通常用于\",{\"1\":{\"153\":1}}],[\"这个属性通常用于调试和开发环境\",{\"1\":{\"153\":1}}],[\"这个属性主要是为了向老版本的打包工具提供兼容性支持\",{\"1\":{\"153\":1}}],[\"这个选项通常用于在开发过程中进行类型检查\",{\"1\":{\"151\":1}}],[\"这个子串就对应着\",{\"1\":{\"84\":1}}],[\"这个窗口的左右两端方向一致的向前滑动\",{\"1\":{\"76\":1}}],[\"这个渲染进程负责显示窗口中的内容和处理用户输入\",{\"1\":{\"42\":1}}],[\"这个目录也会被添加到环境变量\",{\"1\":{\"25\":1}}],[\"这个启动脚本被称为\",{\"1\":{\"25\":1}}],[\"这样做的目的是为了避免出现负数索引值\",{\"1\":{\"145\":1}}],[\"这样可以实现一些高级的功能\",{\"1\":{\"132\":1}}],[\"这样在后续的请求中就可以直接从缓存中获取\",{\"1\":{\"132\":2}}],[\"这样每次访问加载的\",{\"1\":{\"115\":1}}],[\"这样的打包工具打包后可以自动生成\",{\"1\":{\"115\":1}}],[\"这样的网络资源的\",{\"1\":{\"93\":1}}],[\"这样的全局依赖\",{\"1\":{\"11\":1}}],[\"这样就可以在当前项目中使用本地包了\",{\"1\":{\"25\":1}}],[\"这样新项目开发只需专注于业务\",{\"1\":{\"22\":1}}],[\"这显然不是优雅的方式\",{\"1\":{\"22\":1}}],[\"这些选项很少改动\",{\"1\":{\"166\":1}}],[\"这些文件将会被打包到该模块中\",{\"1\":{\"153\":1}}],[\"这些文件由应用程序使用\",{\"1\":{\"52\":1}}],[\"这些缓存可能会导致页面出现问题\",{\"1\":{\"132\":1}}],[\"这些变量可以在代码中直接使用\",{\"1\":{\"44\":1}}],[\"这些依赖会在更高的依赖图中解析\",{\"1\":{\"8\":1}}],[\"这些符号链接指向全局存储仓库\",{\"1\":{\"7\":1}}],[\"这避免了\",{\"1\":{\"7\":1}}],[\"这与硬性重新加载不同\",{\"1\":{\"120\":1}}],[\"这与\",{\"1\":{\"7\":1}}],[\"这项技术被称作\",{\"1\":{\"7\":1}}],[\"的原理\",{\"1\":{\"221\":1}}],[\"的底层实现原理\",{\"1\":{\"220\":1}}],[\"的底层原理\",{\"1\":{\"179\":1}}],[\"的请把简历给我\",{\"1\":{\"206\":1}}],[\"的更新流程开始于元素\",{\"1\":{\"185\":1}}],[\"的更新流程开始于组件\",{\"1\":{\"185\":1}}],[\"的回调函数会在\",{\"1\":{\"184\":1}}],[\"的整体更新路径更短\",{\"1\":{\"183\":1}}],[\"的框架\",{\"1\":{\"183\":1}}],[\"的框架大体遵循以上步骤\",{\"1\":{\"181\":1}}],[\"的编译优化\",{\"1\":{\"183\":1}}],[\"的编译器命令\",{\"1\":{\"151\":1}}],[\"的元素及框架\",{\"1\":{\"183\":1}}],[\"的体积优势\",{\"1\":{\"181\":1}}],[\"的主流技术\",{\"1\":{\"181\":1}}],[\"的主进程是应用程序的核心\",{\"1\":{\"45\":1}}],[\"的灵活性\",{\"1\":{\"180\":2}}],[\"的前端框架\",{\"1\":{\"181\":1}}],[\"的前端框架则难以从\",{\"1\":{\"180\":1}}],[\"的前端框架都会进行此优化\",{\"1\":{\"180\":1}}],[\"的前端框架应运而生\",{\"1\":{\"173\":1}}],[\"的开销\",{\"1\":{\"180\":1}}],[\"的模板编译器会在构建阶段进行编译\",{\"1\":{\"180\":1}}],[\"的模板编译器才开始编译\",{\"1\":{\"180\":1}}],[\"的模块解析算法完全兼容\",{\"1\":{\"7\":1}}],[\"的限制\",{\"1\":{\"179\":1}}],[\"的缩写\",{\"1\":{\"177\":1}}],[\"的用处\",{\"1\":{\"177\":1}}],[\"的路径增多\",{\"1\":{\"176\":1}}],[\"的对应关系\",{\"1\":{\"176\":2}}],[\"的工作原理\",{\"1\":{\"176\":1}}],[\"的工作流\",{\"1\":{\"156\":2}}],[\"的描述\",{\"1\":{\"176\":1,\"181\":1}}],[\"的本质是\",{\"1\":{\"181\":1}}],[\"的本质是自变量\",{\"1\":{\"176\":1}}],[\"的本质是一种\",{\"1\":{\"132\":1}}],[\"的方案\",{\"1\":{\"175\":1}}],[\"的方案创建脚手架\",{\"1\":{\"32\":1}}],[\"的自变量\",{\"1\":{\"174\":1}}],[\"的变化\",{\"1\":{\"174\":1,\"184\":1}}],[\"的变化会导致\",{\"1\":{\"174\":1}}],[\"的知识回答上述问题\",{\"1\":{\"174\":1}}],[\"的知名开源项目源码\",{\"1\":{\"63\":1}}],[\"的发展\",{\"1\":{\"173\":1}}],[\"的样式或结构\",{\"1\":{\"173\":1}}],[\"的依据\",{\"1\":{\"173\":1}}],[\"的依赖管理是如何解决的\",{\"1\":{\"17\":1}}],[\"的依赖变成外部依赖\",{\"1\":{\"11\":1}}],[\"的解决方案为框架\",{\"1\":{\"172\":1}}],[\"的核心\",{\"1\":{\"172\":1}}],[\"的核心源码只包含了一个函数\",{\"1\":{\"142\":1}}],[\"的低层表示\",{\"1\":{\"162\":1}}],[\"的步骤\",{\"1\":{\"156\":1}}],[\"的别名\",{\"1\":{\"149\":1}}],[\"的重载\",{\"1\":{\"147\":1}}],[\"的结果为\",{\"1\":{\"145\":1}}],[\"的执行过程\",{\"1\":{\"145\":1}}],[\"的事件类型\",{\"1\":{\"142\":1}}],[\"的源码\",{\"1\":{\"140\":1,\"158\":1}}],[\"的操作流程\",{\"1\":{\"135\":1}}],[\"的数据\",{\"1\":{\"135\":1}}],[\"的常用操作\",{\"1\":{\"135\":1}}],[\"的域名与主站区分开来\",{\"1\":{\"135\":1}}],[\"的传输将会导致巨大的性能浪费\",{\"1\":{\"135\":1}}],[\"的环境变量\",{\"1\":{\"156\":1}}],[\"的环境\",{\"1\":{\"134\":1}}],[\"的存取问题\",{\"1\":{\"134\":1}}],[\"的作用范围不能超出其脚本所在的路径\",{\"1\":{\"132\":1}}],[\"的注册\",{\"1\":{\"132\":1}}],[\"的生命周期\",{\"1\":{\"132\":1}}],[\"的生命周期中\",{\"1\":{\"132\":1}}],[\"的生命周期包括以下几个阶段\",{\"1\":{\"132\":1}}],[\"的几个主要特性\",{\"1\":{\"131\":1}}],[\"的实现原理\",{\"1\":{\"220\":1}}],[\"的实现\",{\"1\":{\"177\":1}}],[\"的实现需要借助\",{\"1\":{\"131\":1}}],[\"的实验功能\",{\"1\":{\"51\":1}}],[\"的图片永远从内存加载外\",{\"1\":{\"128\":1}}],[\"的三种加载模式\",{\"0\":{\"118\":1}}],[\"的哈希值会发生变化\",{\"1\":{\"116\":1}}],[\"的内容生成一个哈希值\",{\"1\":{\"116\":1}}],[\"的问题\",{\"1\":{\"115\":1}}],[\"的文件名不会改变\",{\"1\":{\"115\":1}}],[\"的首页时\",{\"1\":{\"115\":1}}],[\"的首元素与\",{\"1\":{\"81\":2}}],[\"的缓存库\",{\"1\":{\"110\":1,\"137\":1}}],[\"的精度只能到秒级别\",{\"1\":{\"107\":1}}],[\"的标识也会更新\",{\"1\":{\"98\":1}}],[\"的响应\",{\"1\":{\"97\":1}}],[\"的优势越大\",{\"1\":{\"181\":1}}],[\"的优先级更高\",{\"1\":{\"96\":1}}],[\"的优点是可以避免不必要的\",{\"1\":{\"31\":1}}],[\"的形式发送的\",{\"1\":{\"93\":1}}],[\"的字符\",{\"1\":{\"85\":1}}],[\"的左右边界\",{\"1\":{\"84\":1}}],[\"的长度\",{\"1\":{\"83\":1}}],[\"的最长重复子数组的长度\",{\"1\":{\"82\":1}}],[\"的createserver\",{\"1\":{\"43\":1}}],[\"的值是由服务器生成的一个字符串\",{\"1\":{\"108\":1}}],[\"的值\",{\"1\":{\"43\":1,\"82\":1,\"97\":1,\"98\":1,\"103\":1}}],[\"的渲染进程是指在\",{\"1\":{\"42\":1}}],[\"的社区模板\",{\"1\":{\"31\":1}}],[\"的升级版本\",{\"1\":{\"30\":1}}],[\"的集成式方案\",{\"1\":{\"28\":1}}],[\"的两种变体选项\",{\"1\":{\"26\":1}}],[\"的命令\",{\"1\":{\"25\":1}}],[\"的替代品\",{\"1\":{\"25\":1}}],[\"的脚本\",{\"1\":{\"24\":1}}],[\"的全局\",{\"1\":{\"17\":1}}],[\"的使用\",{\"1\":{\"17\":1}}],[\"的包\",{\"1\":{\"13\":1,\"135\":1}}],[\"的衡量单位\",{\"1\":{\"13\":1}}],[\"的时候帮我们做\",{\"1\":{\"13\":1}}],[\"的配置文件\",{\"1\":{\"13\":1}}],[\"的目录\",{\"1\":{\"7\":1}}],[\"的\",{\"1\":{\"7\":2,\"11\":1,\"14\":1,\"15\":1,\"30\":1,\"40\":1,\"44\":1,\"52\":1,\"173\":1,\"176\":1,\"177\":1,\"183\":1}}],[\"的区别\",{\"0\":{\"3\":1},\"1\":{\"17\":1,\"180\":1,\"223\":1,\"224\":1}}],[\"下被使用\",{\"1\":{\"132\":1}}],[\"下即为整个\",{\"1\":{\"55\":1}}],[\"下代码变更时\",{\"1\":{\"46\":1}}],[\"下\",{\"0\":{\"113\":1},\"1\":{\"27\":1}}],[\"下生成\",{\"1\":{\"25\":1}}],[\"下载脚本\",{\"1\":{\"132\":1}}],[\"下载该包\",{\"1\":{\"24\":1}}],[\"下载对应版本依赖的\",{\"1\":{\"5\":1}}],[\"下的所有文件夹都当做一个\",{\"1\":{\"11\":1}}],[\"下面的代码移除\",{\"1\":{\"142\":1}}],[\"下面的依赖包跟\",{\"1\":{\"6\":1}}],[\"下面配置表示将\",{\"1\":{\"11\":1}}],[\"idb\",{\"1\":{\"135\":1}}],[\"i++\",{\"1\":{\"82\":3}}],[\"it\",{\"1\":{\"57\":1}}],[\"itech\",{\"1\":{\"17\":1}}],[\"iconpark\",{\"1\":{\"57\":3}}],[\"icon\",{\"0\":{\"57\":1},\"1\":{\"57\":3}}],[\"ipcrenderer\",{\"1\":{\"52\":1}}],[\"ipc处理函数\",{\"1\":{\"52\":1}}],[\"ipcmain\",{\"1\":{\"52\":2,\"54\":1}}],[\"ipc\",{\"0\":{\"52\":1},\"1\":{\"51\":1,\"52\":1}}],[\"i\",{\"1\":{\"31\":1,\"70\":1,\"82\":12,\"85\":12,\"174\":1}}],[\"iframe\",{\"1\":{\"224\":1}}],[\"if\",{\"0\":{\"97\":1,\"98\":1},\"1\":{\"26\":7,\"27\":2,\"46\":4,\"48\":1,\"50\":3,\"51\":3,\"57\":1,\"79\":1,\"82\":1,\"85\":1,\"94\":2,\"97\":5,\"98\":4,\"106\":2,\"107\":4,\"122\":2,\"132\":1,\"142\":5,\"156\":1,\"179\":1}}],[\"import\",{\"1\":{\"25\":2,\"26\":6,\"27\":1,\"153\":2,\"173\":1,\"184\":1}}],[\"image\",{\"1\":{\"6\":1}}],[\"isref\",{\"1\":{\"184\":1}}],[\"issue\",{\"1\":{\"110\":1,\"137\":1}}],[\"iscustomelement\",{\"1\":{\"57\":4}}],[\"isusesystitle\",{\"1\":{\"51\":1,\"52\":1}}],[\"isdirectory\",{\"1\":{\"26\":1}}],[\"isvalidpackagename\",{\"1\":{\"26\":3}}],[\"isempty\",{\"1\":{\"26\":3}}],[\"is\",{\"1\":{\"17\":1,\"57\":1}}],[\"ignore\",{\"1\":{\"13\":2}}],[\"inline\",{\"1\":{\"212\":1}}],[\"interview\",{\"1\":{\"206\":3,\"207\":2,\"208\":2}}],[\"interface\",{\"1\":{\"147\":1}}],[\"innerhtml\",{\"1\":{\"201\":5}}],[\"invoke\",{\"1\":{\"52\":1}}],[\"invokeable\",{\"1\":{\"52\":1}}],[\"instanceof\",{\"1\":{\"220\":2}}],[\"install\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"6\":1,\"9\":1,\"11\":3,\"17\":1,\"40\":1,\"156\":3,\"165\":1}}],[\"inspect=5858\",{\"1\":{\"48\":2}}],[\"include\",{\"1\":{\"47\":1,\"166\":2}}],[\"includes\",{\"1\":{\"26\":2,\"47\":1}}],[\"indexof\",{\"1\":{\"142\":1,\"145\":2}}],[\"indexeddb\",{\"1\":{\"92\":1,\"135\":3,\"136\":1}}],[\"index\",{\"0\":{\"168\":1},\"1\":{\"25\":6,\"34\":1,\"50\":1,\"55\":1,\"148\":1,\"152\":1,\"153\":4,\"157\":2,\"168\":3}}],[\"in\",{\"1\":{\"13\":2,\"132\":1,\"180\":1}}],[\"initwindow\",{\"1\":{\"50\":2,\"51\":3}}],[\"initial\",{\"1\":{\"26\":3}}],[\"init新增了\",{\"1\":{\"24\":1}}],[\"init创建项目\",{\"1\":{\"11\":1}}],[\"init\",{\"1\":{\"6\":1,\"13\":1,\"24\":1,\"25\":3,\"26\":3,\"41\":1,\"165\":1,\"166\":1,\"167\":1}}],[\"又能将\",{\"1\":{\"6\":1}}],[\"和微任务\",{\"1\":{\"222\":1}}],[\"和虚拟dom在创建页面时的性能差距不大\",{\"1\":{\"201\":1}}],[\"和浏览器环境中使用\",{\"1\":{\"154\":1}}],[\"和发布\",{\"1\":{\"141\":1}}],[\"和图片这样的静态资源\",{\"1\":{\"122\":1}}],[\"和直接点击浏览器上的刷新按钮效果一样\",{\"1\":{\"118\":1}}],[\"和非\",{\"1\":{\"26\":1}}],[\"和\",{\"1\":{\"6\":1,\"16\":1,\"17\":3,\"44\":1,\"80\":1,\"81\":1,\"82\":3,\"85\":1,\"93\":1,\"94\":1,\"96\":1,\"104\":2,\"107\":1,\"116\":2,\"118\":1,\"121\":1,\"124\":1,\"132\":1,\"135\":1,\"142\":1,\"148\":5,\"150\":4,\"153\":1,\"154\":2,\"156\":1,\"157\":1,\"166\":1,\"172\":1,\"174\":1,\"180\":1,\"201\":1,\"223\":2,\"224\":1}}],[\"将执行\",{\"1\":{\"184\":1}}],[\"将当前\",{\"1\":{\"179\":1}}],[\"将当前项目链接到全局环境中\",{\"1\":{\"25\":1}}],[\"将该\",{\"1\":{\"179\":1}}],[\"将该二进制数向右移动\",{\"1\":{\"145\":1}}],[\"将自变量直接从\",{\"1\":{\"175\":1}}],[\"将其值设为\",{\"1\":{\"156\":1}}],[\"将其提取到临时目录中\",{\"1\":{\"54\":1}}],[\"将会被\",{\"1\":{\"150\":1}}],[\"将会导致无效资源的传输和性能浪费\",{\"1\":{\"135\":1}}],[\"将按照定义的顺序依次运行\",{\"1\":{\"149\":1}}],[\"将模块打包成\",{\"1\":{\"148\":1}}],[\"将模块的导入路径视为在node\",{\"1\":{\"47\":1}}],[\"将结果转换为十进制数\",{\"1\":{\"145\":1}}],[\"将有符号整数转为无符号整数\",{\"1\":{\"145\":1}}],[\"将在匹配类型的处理程序之后调用\",{\"1\":{\"142\":1}}],[\"将新处理函数添加到处理函数列表\",{\"1\":{\"142\":1}}],[\"将新的元素加入队列尾部\",{\"1\":{\"79\":1}}],[\"将新的元素加入队列中\",{\"1\":{\"78\":1}}],[\"将一些静态资源添加到缓存中\",{\"1\":{\"132\":1}}],[\"将需要缓存的资源添加到缓存中\",{\"1\":{\"132\":1}}],[\"将公共库\",{\"1\":{\"116\":1}}],[\"将以上两种方式进行组合\",{\"1\":{\"104\":1}}],[\"将左指针向右移动一格\",{\"1\":{\"84\":1}}],[\"将包名转为合法值\",{\"1\":{\"26\":1}}],[\"将获取的项目名处理为合法值\",{\"1\":{\"26\":1}}],[\"将它们复制到新项目的目录中\",{\"1\":{\"24\":1}}],[\"将被符号链接至根目录的\",{\"1\":{\"7\":1}}],[\"将被符号链接到\",{\"1\":{\"7\":1}}],[\"将\",{\"1\":{\"6\":1,\"134\":1,\"145\":1,\"180\":2,\"181\":1}}],[\"将依赖从缓存拷贝到当前目录的\",{\"1\":{\"5\":1}}],[\"2万5千字大厂面经\",{\"1\":{\"206\":1}}],[\"250m\",{\"1\":{\"135\":1}}],[\"2019\",{\"1\":{\"167\":1,\"180\":1}}],[\"204\",{\"1\":{\"122\":1}}],[\"2021\",{\"1\":{\"115\":1}}],[\"2023\",{\"1\":{\"17\":1,\"95\":1,\"97\":2}}],[\"29322\",{\"1\":{\"98\":2}}],[\"23\",{\"1\":{\"27\":1,\"97\":2}}],[\"2\",{\"1\":{\"6\":1,\"13\":1,\"25\":1,\"27\":2,\"50\":1,\"79\":1,\"135\":1,\"162\":1,\"184\":1,\"185\":1}}],[\"2中\",{\"1\":{\"5\":1}}],[\"4294967295\",{\"1\":{\"145\":3}}],[\"4kb\",{\"1\":{\"135\":1}}],[\"404\",{\"1\":{\"229\":1}}],[\"40\",{\"1\":{\"115\":1}}],[\"400\",{\"1\":{\"51\":1}}],[\"47\",{\"1\":{\"95\":1}}],[\"4\",{\"1\":{\"6\":1,\"79\":1,\"184\":1}}],[\"耗时较长\",{\"1\":{\"5\":1}}],[\"扁平化算法本身的复杂性很高\",{\"1\":{\"5\":1}}],[\"xml\",{\"1\":{\"173\":1}}],[\"x版本问题\",{\"1\":{\"50\":1}}],[\"x\",{\"1\":{\"5\":1,\"47\":1,\"121\":1,\"122\":1,\"174\":6,\"176\":2}}],[\"59\",{\"1\":{\"115\":1}}],[\"50\",{\"1\":{\"74\":1,\"95\":1}}],[\"5000\",{\"1\":{\"46\":1}}],[\"5858\",{\"1\":{\"48\":1}}],[\"5\",{\"1\":{\"5\":1,\"79\":4,\"135\":1}}],[\"靠前优先\",{\"1\":{\"5\":1}}],[\"bfc的布局规则是什么\",{\"1\":{\"212\":1}}],[\"bfc\",{\"1\":{\"210\":1}}],[\"benchmark\",{\"1\":{\"181\":1}}],[\"beta\",{\"1\":{\"15\":3}}],[\"branches\",{\"1\":{\"156\":2}}],[\"browserwindow实例通过\",{\"1\":{\"55\":1}}],[\"browserwindow\",{\"1\":{\"51\":4,\"54\":1}}],[\"browser\",{\"1\":{\"47\":1,\"50\":1,\"152\":1,\"167\":1}}],[\"bus\",{\"2\":{\"160\":1}}],[\"bundle\",{\"1\":{\"148\":3}}],[\"builtinmodules\",{\"1\":{\"47\":2}}],[\"buildfromtemplate\",{\"1\":{\"51\":1}}],[\"builder\",{\"1\":{\"40\":2}}],[\"build\",{\"1\":{\"14\":3,\"34\":2,\"44\":2,\"148\":3,\"156\":6}}],[\"block元素放一起会产生空白间隙\",{\"1\":{\"212\":1}}],[\"blob\",{\"1\":{\"135\":1}}],[\"blue\",{\"1\":{\"26\":3,\"48\":1}}],[\"border\",{\"1\":{\"72\":2}}],[\"boris\",{\"1\":{\"64\":1}}],[\"box\",{\"1\":{\"72\":1}}],[\"boolean\",{\"1\":{\"26\":1}}],[\"bytecode\",{\"1\":{\"162\":1}}],[\"by\",{\"1\":{\"64\":13,\"66\":1,\"74\":3}}],[\"b\",{\"1\":{\"26\":2,\"81\":3,\"94\":2,\"143\":1,\"175\":1}}],[\"bind\",{\"1\":{\"220\":1,\"225\":1}}],[\"binaries\",{\"1\":{\"40\":3}}],[\"bin\",{\"1\":{\"24\":2,\"25\":7}}],[\"basic\",{\"0\":{\"233\":1}}],[\"base64\",{\"1\":{\"120\":2,\"128\":2}}],[\"base\",{\"1\":{\"44\":2}}],[\"basename\",{\"1\":{\"26\":1}}],[\"basebranch\",{\"1\":{\"13\":2}}],[\"babel\",{\"1\":{\"173\":1,\"217\":1}}],[\"bar\",{\"1\":{\"7\":2}}],[\"b两个包同时依赖c包的不同版本\",{\"1\":{\"5\":1}}],[\"b包在package\",{\"1\":{\"5\":1}}],[\"b包下的node\",{\"1\":{\"5\":1}}],[\"b包依赖同一个版本的c包\",{\"1\":{\"5\":1}}],[\"当找出差异的性能消耗为0时\",{\"1\":{\"200\":1}}],[\"当设计一个框架时\",{\"1\":{\"198\":1}}],[\"当自变量发生变化后\",{\"1\":{\"184\":1}}],[\"当自变量需要\",{\"1\":{\"175\":1}}],[\"当项目需要大量使用\",{\"1\":{\"175\":1}}],[\"当项目中只有部分文件发生变化时\",{\"1\":{\"116\":2}}],[\"当依赖的\",{\"1\":{\"174\":1}}],[\"当前视图状态\",{\"1\":{\"172\":1}}],[\"当前目录\",{\"1\":{\"26\":1}}],[\"当在\",{\"1\":{\"156\":1}}],[\"当有新的\",{\"1\":{\"156\":1}}],[\"当有新版本可用时触发\",{\"1\":{\"53\":1}}],[\"当主题对象发送一条消息时\",{\"1\":{\"141\":1}}],[\"当主进程文件被修改后重启\",{\"1\":{\"46\":1}}],[\"当主进程文件发生变化时\",{\"1\":{\"46\":1}}],[\"当事件发射器对象触发一个事件时\",{\"1\":{\"141\":1}}],[\"当一个新版本的\",{\"1\":{\"132\":1}}],[\"当一个资源准备加载时\",{\"1\":{\"127\":1}}],[\"当然\",{\"1\":{\"132\":1}}],[\"当访问单页应用\",{\"1\":{\"115\":1}}],[\"当服务器没有提供明确的缓存过期时间或者缓存标识时\",{\"1\":{\"109\":1}}],[\"当资源内容发生变化时\",{\"1\":{\"108\":2}}],[\"当资源发生变化时\",{\"1\":{\"98\":1}}],[\"当客户端请求该资源时\",{\"1\":{\"108\":1}}],[\"当浏览器再次请求该资源时\",{\"1\":{\"107\":2}}],[\"当浏览器向服务器发送请求时\",{\"1\":{\"107\":2}}],[\"当浏览器第一次发起\",{\"1\":{\"100\":1}}],[\"当浏览器第一次接收到服务器返回资源的\",{\"1\":{\"97\":1,\"98\":1}}],[\"当浏览器发起\",{\"1\":{\"99\":1}}],[\"当使用不支持\",{\"1\":{\"153\":1}}],[\"当使用现代打包工具\",{\"1\":{\"153\":1}}],[\"当使用\",{\"1\":{\"96\":1,\"153\":1,\"180\":1}}],[\"当其与\",{\"1\":{\"96\":1}}],[\"当没有新版本可用时触发\",{\"1\":{\"53\":1}}],[\"当更新过程开始时触发\",{\"1\":{\"53\":1}}],[\"当确定渲染进程卡死时\",{\"1\":{\"51\":1}}],[\"当所有窗口关闭时退出应用\",{\"1\":{\"50\":1}}],[\"当\",{\"1\":{\"46\":1,\"48\":1,\"96\":1,\"103\":2,\"132\":1,\"135\":1,\"136\":1,\"145\":1}}],[\"当特性较多较复杂时\",{\"1\":{\"30\":1}}],[\"当需要启动一个新项目时\",{\"1\":{\"22\":1}}],[\"当执行\",{\"1\":{\"11\":1}}],[\"当a\",{\"1\":{\"5\":1}}],[\"当中去找\",{\"1\":{\"5\":1}}],[\"当中\",{\"1\":{\"5\":1}}],[\"但有损灵活性\",{\"1\":{\"202\":1}}],[\"但有以下区别\",{\"1\":{\"3\":1}}],[\"但投入产出比可能并不高\",{\"1\":{\"201\":1}}],[\"但无法超越\",{\"1\":{\"200\":1}}],[\"但与\",{\"1\":{\"183\":1}}],[\"但缓存的值为函数式形\",{\"1\":{\"177\":1}}],[\"但出发点不同\",{\"1\":{\"173\":1}}],[\"但也可以在\",{\"1\":{\"149\":1}}],[\"但不生成任何输出\",{\"1\":{\"148\":2}}],[\"但并不一定立即生效\",{\"1\":{\"132\":1}}],[\"但可能还会报跨域\",{\"1\":{\"121\":1}}],[\"但我们期望浏览器每次加载时都应该向服务器询问是否更新\",{\"1\":{\"115\":1}}],[\"但只要它们表示的是同一个资源\",{\"1\":{\"108\":1}}],[\"但实现方式不同\",{\"1\":{\"107\":1}}],[\"但若修改客户端时间为\",{\"1\":{\"101\":1}}],[\"但每次使用缓存资源前都必须先向服务器确认其有效性\",{\"1\":{\"96\":1}}],[\"但在响应首部中被使用时\",{\"1\":{\"96\":1}}],[\"但往往为了做向下兼容\",{\"1\":{\"96\":1}}],[\"但\",{\"1\":{\"92\":1,\"173\":1,\"201\":1}}],[\"但需要保证这两个指针对应的子串中没有重复的字符\",{\"1\":{\"84\":1}}],[\"但对于复杂的项目模板生成\",{\"1\":{\"32\":1}}],[\"但是它的容量较小\",{\"1\":{\"124\":1}}],[\"但是\",{\"1\":{\"8\":1,\"85\":2,\"107\":1,\"108\":1}}],[\"但它也存在以下问题\",{\"1\":{\"5\":1}}],[\"解题思路\",{\"1\":{\"86\":1}}],[\"解决了\",{\"1\":{\"115\":1}}],[\"解决了重复安装包问题\",{\"1\":{\"5\":1}}],[\"解决方法\",{\"1\":{\"57\":1}}],[\"解决幽灵依赖问题\",{\"1\":{\"17\":1}}],[\"解决痛点\",{\"1\":{\"17\":1}}],[\"解决\",{\"1\":{\"16\":1}}],[\"解析命令行参数\",{\"1\":{\"26\":1}}],[\"解析处理命令行输入\",{\"0\":{\"26\":1}}],[\"解析模块时\",{\"1\":{\"7\":1}}],[\"解析完全兼容\",{\"1\":{\"6\":1}}],[\"解析依赖包版本区间为具体版本号\",{\"1\":{\"5\":1}}],[\"机制介绍\",{\"1\":{\"17\":1}}],[\"机制\",{\"1\":{\"5\":1,\"16\":1,\"222\":1}}],[\"ahead\",{\"1\":{\"180\":1}}],[\"aot\",{\"0\":{\"180\":1},\"1\":{\"180\":13,\"181\":3,\"183\":2,\"184\":2,\"185\":1}}],[\"abstract\",{\"1\":{\"162\":1}}],[\"abcde12345\",{\"1\":{\"108\":1}}],[\"am\",{\"1\":{\"148\":1,\"155\":1}}],[\"api\",{\"0\":{\"224\":1},\"1\":{\"132\":3,\"135\":3,\"140\":1,\"148\":2,\"157\":4,\"174\":1,\"176\":1,\"180\":1,\"183\":1,\"185\":2}}],[\"apply\",{\"1\":{\"220\":1,\"225\":1}}],[\"application\",{\"0\":{\"136\":1},\"1\":{\"136\":1}}],[\"apps\",{\"1\":{\"131\":1}}],[\"apparent\",{\"1\":{\"104\":2}}],[\"appendswitch\",{\"1\":{\"50\":1}}],[\"app\",{\"1\":{\"25\":2,\"35\":1,\"50\":7,\"51\":2,\"52\":1,\"131\":1,\"134\":1}}],[\"authorization\",{\"1\":{\"121\":1,\"122\":1}}],[\"autoupdater\",{\"1\":{\"53\":1}}],[\"axios\",{\"1\":{\"121\":3}}],[\"age=86400\",{\"1\":{\"122\":1}}],[\"age=0\",{\"1\":{\"115\":1}}],[\"age=2592000\",{\"1\":{\"100\":1}}],[\"age\",{\"0\":{\"100\":1,\"101\":1},\"1\":{\"94\":1,\"96\":8,\"100\":1,\"101\":2,\"103\":4,\"104\":8,\"134\":1}}],[\"agent\",{\"1\":{\"27\":2}}],[\"awesome\",{\"1\":{\"74\":1}}],[\"await\",{\"1\":{\"26\":2,\"150\":1,\"217\":1,\"223\":1}}],[\"ai\",{\"0\":{\"73\":1}}],[\"available\",{\"1\":{\"53\":2}}],[\"action\",{\"1\":{\"156\":1}}],[\"actions\",{\"1\":{\"156\":4}}],[\"activate\",{\"1\":{\"51\":1}}],[\"accept\",{\"1\":{\"121\":1,\"122\":1}}],[\"access\",{\"1\":{\"13\":2,\"121\":9,\"122\":3}}],[\"ast\",{\"1\":{\"162\":10}}],[\"ascoders\",{\"1\":{\"69\":1}}],[\"ascii\",{\"1\":{\"41\":1}}],[\"as\",{\"1\":{\"48\":1,\"51\":1,\"173\":1}}],[\"async\",{\"1\":{\"25\":1,\"26\":1,\"150\":1,\"217\":1,\"223\":1}}],[\"array<wildcardhandler<t>>\",{\"1\":{\"147\":1}}],[\"array<handler<t>>\",{\"1\":{\"147\":1}}],[\"array\",{\"1\":{\"146\":1}}],[\"arraybuffer\",{\"1\":{\"135\":1}}],[\"arr\",{\"1\":{\"146\":3}}],[\"arm64\",{\"1\":{\"27\":1}}],[\"args\",{\"1\":{\"48\":2,\"52\":1}}],[\"argtemplate\",{\"1\":{\"26\":6,\"27\":1}}],[\"argtargetdir\",{\"1\":{\"26\":4}}],[\"argv\",{\"1\":{\"25\":3,\"26\":2,\"47\":1,\"50\":1}}],[\"angular\",{\"1\":{\"180\":5}}],[\"angularjs\",{\"1\":{\"172\":1}}],[\"and\",{\"1\":{\"156\":2,\"207\":1}}],[\"answers\",{\"1\":{\"207\":1,\"208\":1}}],[\"answers<\",{\"1\":{\"26\":1}}],[\"ans\",{\"1\":{\"85\":4}}],[\"animista\",{\"1\":{\"72\":1}}],[\"antfu\",{\"1\":{\"31\":2}}],[\"any\",{\"1\":{\"26\":2,\"48\":1,\"51\":1,\"142\":1}}],[\"advanced\",{\"1\":{\"206\":1}}],[\"admin\",{\"1\":{\"25\":2,\"26\":5,\"27\":3,\"33\":1,\"35\":3}}],[\"addeventlistener\",{\"1\":{\"132\":1}}],[\"add2\",{\"1\":{\"82\":3}}],[\"add1\",{\"1\":{\"82\":3}}],[\"add\",{\"1\":{\"13\":2,\"25\":2,\"85\":1,\"122\":4,\"179\":2}}],[\"alt\",{\"1\":{\"106\":2}}],[\"algorithm\",{\"0\":{\"231\":1},\"1\":{\"76\":1}}],[\"all\",{\"1\":{\"50\":1,\"142\":12,\"143\":1,\"147\":2,\"148\":2,\"149\":2,\"225\":1}}],[\"allowfileaccess\",{\"1\":{\"50\":1}}],[\"allow\",{\"1\":{\"11\":2,\"121\":9,\"122\":3}}],[\"alias\",{\"1\":{\"44\":1,\"47\":2}}],[\"alpha\",{\"1\":{\"15\":1}}],[\"a\",{\"1\":{\"5\":1,\"26\":6,\"57\":1,\"81\":3,\"94\":2,\"116\":2,\"143\":1,\"175\":2}}],[\"会产生一定性能开销\",{\"1\":{\"202\":1}}],[\"会比较新旧虚拟\",{\"1\":{\"201\":1}}],[\"会销毁所有旧的\",{\"1\":{\"201\":1}}],[\"会重新执行\",{\"1\":{\"184\":1}}],[\"会为每个组件都建立\",{\"1\":{\"184\":1}}],[\"会建立\",{\"1\":{\"184\":1}}],[\"会与\",{\"1\":{\"167\":1}}],[\"会对代码做静态分析\",{\"1\":{\"164\":1}}],[\"会对代码做类型检查\",{\"1\":{\"162\":1}}],[\"会打包成\",{\"1\":{\"154\":1}}],[\"会自动使用这个属性指定的文件作为入口\",{\"1\":{\"153\":3}}],[\"会自动执行依赖项之间的垃圾回收\",{\"1\":{\"3\":1}}],[\"会返回一个\",{\"1\":{\"132\":1}}],[\"会根据保存下来的资源的\",{\"1\":{\"125\":1}}],[\"会导致页面空白报错\",{\"1\":{\"115\":1}}],[\"会导致文件路径过长的问题\",{\"1\":{\"5\":1}}],[\"会携带一个\",{\"1\":{\"107\":2}}],[\"会查询浏览器缓存是否缓存有该资源\",{\"1\":{\"99\":1}}],[\"会抛出一个异常\",{\"1\":{\"85\":1}}],[\"会被该\",{\"1\":{\"184\":1}}],[\"会被浏览器优先读取\",{\"1\":{\"100\":1}}],[\"会被\",{\"1\":{\"55\":1}}],[\"会输出日志信息\",{\"1\":{\"46\":1}}],[\"会提示让选择项目名称和模板\",{\"1\":{\"35\":1}}],[\"会大大增加模板的维护成本\",{\"1\":{\"30\":1}}],[\"会尝试处理为合法值作为默认值\",{\"1\":{\"26\":1}}],[\"会将浏览器存储的本地缓存都清空掉\",{\"1\":{\"119\":1}}],[\"会将\",{\"1\":{\"25\":1}}],[\"会将两个包硬链接到\",{\"1\":{\"7\":1}}],[\"会非常小\",{\"1\":{\"25\":1}}],[\"会生成开发时\",{\"1\":{\"25\":1}}],[\"会执行\",{\"1\":{\"24\":1}}],[\"会首先检查本地是否已经安装了\",{\"1\":{\"24\":1}}],[\"会把基于的\",{\"1\":{\"11\":1}}],[\"会从依赖图中更高的已安装的依赖项中解析\",{\"1\":{\"8\":1}}],[\"会忽略符号链接\",{\"1\":{\"7\":1}}],[\"会经历以下步骤\",{\"1\":{\"7\":1}}],[\"会使用硬链接技术将其链接到项目的\",{\"1\":{\"7\":1}}],[\"会在编辑器内输入代码时显示\",{\"1\":{\"164\":1}}],[\"会在编译时对代码做类型检查\",{\"1\":{\"164\":1}}],[\"会在原来的编译流程上前置以下流程\",{\"1\":{\"162\":1}}],[\"会在每次加载模块时重新解析和编译代码\",{\"1\":{\"25\":1}}],[\"会在工程的根目录下生成\",{\"1\":{\"13\":1}}],[\"会在\",{\"1\":{\"7\":1,\"25\":1,\"184\":1}}],[\"会不停往上级的\",{\"1\":{\"5\":1}}],[\"中为何没有这些性能优化\",{\"1\":{\"185\":1}}],[\"中任何自变量的变化都会开启一次遍历应用的更新流程\",{\"1\":{\"185\":1}}],[\"中被称为\",{\"1\":{\"185\":2}}],[\"中发生变化\",{\"1\":{\"181\":1}}],[\"中描述逻辑\",{\"1\":{\"180\":1}}],[\"中受益\",{\"1\":{\"180\":2,\"184\":2}}],[\"中动态部分的关系\",{\"1\":{\"180\":1}}],[\"中分别使用对象的存取描述符和\",{\"1\":{\"179\":1}}],[\"中移除该\",{\"1\":{\"179\":1}}],[\"中使用的\",{\"1\":{\"179\":1}}],[\"中并不需要显示指明参数\",{\"1\":{\"179\":1}}],[\"中输入代码\",{\"1\":{\"168\":1}}],[\"中添加\",{\"1\":{\"166\":1}}],[\"中所有属性值的联合类型\",{\"1\":{\"147\":1}}],[\"中可使用\",{\"1\":{\"145\":1}}],[\"中修改了请求处理逻辑\",{\"1\":{\"132\":1}}],[\"中修改了缓存策略\",{\"1\":{\"132\":1}}],[\"中去的\",{\"1\":{\"120\":1}}],[\"中定义因变量时需要显示指明\",{\"1\":{\"179\":1}}],[\"中定义自变量\",{\"1\":{\"174\":1}}],[\"中定义缓存的字段\",{\"1\":{\"95\":1,\"96\":1}}],[\"中定义的路径中寻找对应的可执行文件并执行\",{\"1\":{\"25\":1}}],[\"中下标为\",{\"1\":{\"85\":1}}],[\"中有配置\",{\"1\":{\"47\":1}}],[\"中创建项目\",{\"1\":{\"27\":1}}],[\"中止操作\",{\"1\":{\"26\":1}}],[\"中指定\",{\"1\":{\"25\":1}}],[\"中增加如下脚本\",{\"1\":{\"14\":1}}],[\"中新增了\",{\"1\":{\"11\":1}}],[\"中进行管理\",{\"1\":{\"11\":1}}],[\"中\",{\"1\":{\"7\":1,\"24\":1,\"25\":1,\"29\":1,\"116\":1,\"134\":1,\"141\":1,\"147\":1,\"150\":1,\"226\":1}}],[\"中每个包的每个文件都是来自内容可寻址存储的硬链接\",{\"1\":{\"7\":1}}],[\"中的自变量与因变理\",{\"0\":{\"177\":1}}],[\"中的位运算符只能用于\",{\"1\":{\"145\":1}}],[\"中的位置\",{\"1\":{\"5\":1}}],[\"中的参数\",{\"1\":{\"122\":1}}],[\"中的值进行比较\",{\"1\":{\"107\":1}}],[\"中的时间戳进行比较\",{\"1\":{\"107\":1}}],[\"中的某个元素对齐\",{\"1\":{\"81\":2}}],[\"中的第三方模块\",{\"1\":{\"47\":1}}],[\"中的\",{\"0\":{\"116\":1},\"1\":{\"27\":2,\"34\":1,\"116\":1,\"141\":1,\"176\":1}}],[\"中的非法访问依赖问题\",{\"1\":{\"7\":1}}],[\"中的目录结构为嵌套结构\",{\"1\":{\"5\":1}}],[\"中声明的包无法访问\",{\"1\":{\"2\":1}}],[\"1px\",{\"1\":{\"210\":1,\"213\":1}}],[\"1d\",{\"1\":{\"122\":1}}],[\"17\",{\"1\":{\"97\":2}}],[\"14\",{\"1\":{\"97\":2,\"156\":2}}],[\"11111111\",{\"1\":{\"145\":8}}],[\"11\",{\"1\":{\"95\":1}}],[\"100\",{\"1\":{\"206\":1}}],[\"10m\",{\"1\":{\"135\":1}}],[\"10\",{\"1\":{\"79\":4,\"215\":1}}],[\"1500\",{\"1\":{\"51\":1}}],[\"13\",{\"1\":{\"27\":1,\"97\":2}}],[\"18\",{\"1\":{\"6\":1}}],[\"1\",{\"1\":{\"5\":1,\"7\":4,\"24\":1,\"26\":3,\"79\":6,\"85\":14,\"95\":1,\"96\":2,\"118\":1,\"122\":1,\"142\":1,\"145\":6,\"174\":2,\"179\":1,\"184\":6,\"206\":1}}],[\"包提供的\",{\"1\":{\"53\":1}}],[\"包中的一个名为\",{\"1\":{\"24\":1}}],[\"包\",{\"1\":{\"24\":1}}],[\"包括范式的选择\",{\"1\":{\"198\":1}}],[\"包括二进制数据\",{\"1\":{\"135\":1}}],[\"包括客户端和代理服务器\",{\"1\":{\"96\":1}}],[\"包括\",{\"1\":{\"52\":1,\"53\":1,\"153\":2,\"157\":1}}],[\"包括所有导出的变量和函数\",{\"1\":{\"47\":1}}],[\"包括一些常见的配置和文件\",{\"1\":{\"24\":1}}],[\"包括目录结构\",{\"1\":{\"22\":1}}],[\"包并发布到\",{\"1\":{\"23\":1}}],[\"包含大量冗余的属性\",{\"1\":{\"181\":1}}],[\"包含库本身以及附加功能\",{\"1\":{\"172\":1}}],[\"包含以下命令\",{\"1\":{\"156\":1}}],[\"包含源服务器和代理服务器\",{\"1\":{\"103\":1}}],[\"包含node\",{\"1\":{\"47\":1}}],[\"包含\",{\"1\":{\"15\":1,\"142\":1}}],[\"包本身\",{\"1\":{\"6\":1}}],[\"包到本地离线镜像\",{\"1\":{\"5\":1}}],[\"包如何到达项目\",{\"1\":{\"5\":1}}],[\"执行机制\",{\"0\":{\"222\":1}}],[\"执行上下文栈和作用域链的理解\",{\"1\":{\"221\":1}}],[\"执行对应的\",{\"1\":{\"185\":1}}],[\"执行如下步骤\",{\"1\":{\"184\":1}}],[\"执行回调\",{\"1\":{\"179\":1}}],[\"执行一些\",{\"1\":{\"177\":1}}],[\"执行无效操作也会进行隐式转换\",{\"1\":{\"164\":1}}],[\"执行无符号右移操作\",{\"1\":{\"145\":1}}],[\"执行的入口文件为\",{\"1\":{\"41\":1}}],[\"执行到\",{\"1\":{\"40\":1}}],[\"执行npm\",{\"1\":{\"25\":1}}],[\"执行\",{\"1\":{\"14\":1,\"40\":1,\"145\":1,\"179\":1,\"184\":1,\"185\":1}}],[\"执行完初始化命令后\",{\"1\":{\"13\":1}}],[\"执行命令后\",{\"1\":{\"5\":1}}],[\"执行该命令后\",{\"1\":{\"5\":1}}],[\"并解释其中原理\",{\"1\":{\"225\":1}}],[\"并解压到本地缓存\",{\"1\":{\"5\":1}}],[\"并发控制\",{\"1\":{\"217\":1}}],[\"并最终执行对应的\",{\"1\":{\"184\":1}}],[\"并报错\",{\"1\":{\"180\":1}}],[\"并不是实际宿主环境的\",{\"1\":{\"176\":1}}],[\"并不是持久性的\",{\"1\":{\"135\":1}}],[\"并由编译器解析\",{\"1\":{\"162\":1}}],[\"并通过使用回调\",{\"1\":{\"150\":1}}],[\"并使用当前版本号作为标签名\",{\"1\":{\"155\":1}}],[\"并使用当前版本号作为提交信息\",{\"1\":{\"155\":1}}],[\"并使用\",{\"1\":{\"150\":1}}],[\"并使用与事件发送方相关联的\",{\"1\":{\"54\":1}}],[\"并执行这些测试\",{\"1\":{\"150\":1}}],[\"并行运行多个命令\",{\"1\":{\"149\":1}}],[\"并采取适当的行动\",{\"1\":{\"141\":1}}],[\"并传递给它们相关的数据\",{\"1\":{\"141\":1}}],[\"并进行安装\",{\"1\":{\"132\":1}}],[\"并返回最新的\",{\"1\":{\"97\":1}}],[\"并再下次访问该资源时通过携带\",{\"1\":{\"97\":1}}],[\"并加上该元素的值\",{\"1\":{\"79\":1}}],[\"并从滑动窗口中减去该元素的值\",{\"1\":{\"78\":1}}],[\"并更新滑动窗口中所有元素的和\",{\"1\":{\"78\":1}}],[\"并更新它们的版本\",{\"1\":{\"10\":1}}],[\"并提供了许多可配置的选项\",{\"1\":{\"53\":1}}],[\"并提供快速的热更新和构建功能\",{\"1\":{\"42\":1}}],[\"并让用户选择重载或退出\",{\"1\":{\"51\":1}}],[\"并包含当前正在运行的\",{\"1\":{\"48\":1}}],[\"并防止任何残留进程或资源对应用程序造成问题\",{\"1\":{\"48\":1}}],[\"并监听\",{\"1\":{\"48\":1}}],[\"并在此基础上通过\",{\"1\":{\"184\":1}}],[\"并在退出后手动清除\",{\"1\":{\"134\":1}}],[\"并在响应中收到\",{\"1\":{\"106\":1}}],[\"并在下次访问该资源时通过携带\",{\"1\":{\"98\":1}}],[\"并在下方监听\",{\"1\":{\"48\":1}}],[\"并在必要时处理窗口的崩溃和无响应情况\",{\"1\":{\"51\":1}}],[\"并在检测到更改时自动重新构建该代码\",{\"1\":{\"46\":1}}],[\"并在其中创建两个子项目\",{\"1\":{\"11\":1}}],[\"并退出\",{\"1\":{\"40\":1}}],[\"并作为默认值\",{\"1\":{\"26\":1}}],[\"并将代码打包\",{\"1\":{\"180\":1}}],[\"并将请求后符合条件的资源存入内存和磁盘中\",{\"1\":{\"127\":1}}],[\"并将新文件复制到应用程序目录中\",{\"1\":{\"54\":1}}],[\"并将\",{\"1\":{\"43\":1}}],[\"并将该端口号设置为\",{\"1\":{\"43\":1}}],[\"并将控制权转交给打包后的代码\",{\"1\":{\"25\":1}}],[\"并将其转换为\",{\"1\":{\"157\":1}}],[\"并将其保存到缓存中\",{\"1\":{\"132\":1}}],[\"并将其缓存起来\",{\"1\":{\"25\":1}}],[\"并将其安装到本地的\",{\"1\":{\"7\":1,\"24\":1}}],[\"并将其删除\",{\"1\":{\"3\":1}}],[\"并根据更新状态向渲染进程发送消息\",{\"1\":{\"53\":1}}],[\"并根据用户的选择和输入进行初始化配置\",{\"1\":{\"24\":1}}],[\"并根据不同的需求进行定制化\",{\"1\":{\"22\":1}}],[\"并且能够准确地表示资源的特定版本\",{\"1\":{\"108\":1}}],[\"并且不是空目录\",{\"1\":{\"27\":1}}],[\"并且可以与各种断言库一起使用\",{\"1\":{\"150\":1}}],[\"并且可以将新的资源添加到缓存中\",{\"1\":{\"132\":1}}],[\"并且可以清除旧的缓存\",{\"1\":{\"132\":1}}],[\"并且可以接收用户输入参数\",{\"1\":{\"26\":1}}],[\"并且可以加快安装速度\",{\"1\":{\"3\":1}}],[\"并且提高项目的可维护性和可扩展性\",{\"1\":{\"22\":1}}],[\"安托\",{\"1\":{\"64\":1}}],[\"安全性\",{\"1\":{\"131\":1}}],[\"安全性高\",{\"1\":{\"2\":1}}],[\"安全\",{\"1\":{\"17\":1}}],[\"安装阶段就完成了\",{\"1\":{\"132\":1}}],[\"安装完成\",{\"1\":{\"132\":1}}],[\"安装依赖包\",{\"1\":{\"25\":1}}],[\"安装依赖项时\",{\"1\":{\"3\":1}}],[\"安装到工作空间的根目录中\",{\"1\":{\"13\":1}}],[\"安装\",{\"1\":{\"11\":1,\"24\":1,\"132\":2}}],[\"安装新包时会根据\",{\"1\":{\"5\":1}}],[\"nginx\",{\"0\":{\"121\":1,\"122\":1},\"1\":{\"121\":2,\"122\":2}}],[\"ngnix\",{\"1\":{\"70\":1}}],[\"never\",{\"1\":{\"147\":1}}],[\"network\",{\"1\":{\"93\":1,\"118\":1,\"120\":1}}],[\"nextvalue\",{\"1\":{\"179\":2}}],[\"next\",{\"1\":{\"77\":2,\"78\":1,\"79\":5}}],[\"new\",{\"1\":{\"26\":3,\"46\":1,\"50\":1,\"51\":3,\"79\":1,\"85\":1,\"142\":1,\"179\":2,\"220\":1}}],[\"n\",{\"1\":{\"76\":1,\"85\":3}}],[\"nicholas\",{\"1\":{\"64\":1}}],[\"navigator\",{\"1\":{\"132\":3}}],[\"native\",{\"1\":{\"57\":1}}],[\"name\",{\"1\":{\"26\":20,\"27\":5,\"156\":2,\"184\":3}}],[\"name>=<cookie\",{\"1\":{\"134\":1}}],[\"name>\",{\"1\":{\"24\":5}}],[\"n在\",{\"1\":{\"27\":1}}],[\"nums2\",{\"1\":{\"80\":1,\"81\":1,\"82\":8}}],[\"nums1\",{\"1\":{\"80\":1,\"81\":1,\"82\":8}}],[\"number>\",{\"1\":{\"147\":1}}],[\"number\",{\"1\":{\"26\":1,\"77\":3}}],[\"null\",{\"1\":{\"26\":6,\"27\":1,\"46\":1,\"47\":1,\"51\":3,\"173\":4,\"184\":2}}],[\"noemit\",{\"1\":{\"148\":2,\"151\":2}}],[\"nosql\",{\"1\":{\"135\":1}}],[\"now\",{\"1\":{\"104\":5}}],[\"none\",{\"0\":{\"98\":1},\"1\":{\"94\":1,\"98\":4,\"107\":2}}],[\"no\",{\"1\":{\"94\":2,\"96\":8,\"118\":2,\"122\":1}}],[\"notes\",{\"1\":{\"206\":1}}],[\"not\",{\"1\":{\"17\":1,\"53\":1,\"97\":1,\"106\":1,\"229\":1}}],[\"noderesolve\",{\"1\":{\"47\":1}}],[\"node\",{\"0\":{\"7\":1},\"1\":{\"3\":1,\"5\":7,\"6\":4,\"7\":14,\"8\":2,\"11\":1,\"14\":3,\"17\":1,\"24\":1,\"25\":6,\"26\":3,\"27\":1,\"40\":1,\"44\":1,\"47\":5,\"48\":2,\"50\":1,\"51\":1,\"141\":1,\"149\":1,\"150\":3,\"153\":2,\"154\":1,\"156\":4,\"165\":1,\"168\":1,\"173\":1}}],[\"npx\",{\"1\":{\"11\":1,\"31\":1,\"167\":1}}],[\"npmmirror\",{\"1\":{\"40\":3}}],[\"npmrc\",{\"1\":{\"17\":1}}],[\"npmjs\",{\"1\":{\"14\":1,\"34\":2}}],[\"npm3\",{\"1\":{\"5\":1}}],[\"npm3+\",{\"1\":{\"2\":1,\"7\":1}}],[\"npm\",{\"0\":{\"3\":1,\"5\":1,\"24\":1,\"34\":1},\"1\":{\"1\":2,\"3\":1,\"5\":2,\"16\":1,\"17\":3,\"23\":2,\"24\":19,\"25\":5,\"26\":1,\"27\":4,\"34\":4,\"35\":2,\"40\":1,\"48\":5,\"135\":2,\"148\":6,\"149\":5,\"155\":5,\"156\":5,\"165\":2}}],[\"与模板大小相关\",{\"1\":{\"201\":1}}],[\"与数据变化量相关\",{\"1\":{\"201\":1}}],[\"与自变量建立对应关系的抽象层级\",{\"1\":{\"176\":1}}],[\"与逻辑时能够跳出组件的限制\",{\"1\":{\"177\":1}}],[\"与逻辑的\",{\"1\":{\"174\":1}}],[\"与逻辑的关注点分离\",{\"1\":{\"174\":1}}],[\"与逻辑\",{\"0\":{\"174\":1}}],[\"与逻辑配合更密切\",{\"1\":{\"173\":1}}],[\"与跨域问题\",{\"0\":{\"121\":1}}],[\"与其行为相反的\",{\"1\":{\"96\":1}}],[\"与其他包管理器不同\",{\"1\":{\"3\":1}}],[\"与缓存有关的首部字段名\",{\"0\":{\"94\":1}}],[\"与传统包管理器文件结构对比\",{\"1\":{\"17\":1}}],[\"与相关的依赖很好地组织到一起\",{\"1\":{\"6\":1}}],[\"与原生\",{\"1\":{\"6\":1}}],[\"与\",{\"0\":{\"3\":1,\"97\":1,\"98\":1,\"100\":1,\"101\":1,\"107\":1,\"123\":1,\"129\":1},\"1\":{\"3\":1,\"96\":1,\"104\":1,\"135\":1,\"173\":1,\"174\":1,\"175\":1,\"183\":1}}],[\"支持通配符\",{\"1\":{\"166\":1}}],[\"支持默认的几种模板类型\",{\"1\":{\"26\":1}}],[\"支持monorepo\",{\"1\":{\"17\":1}}],[\"支持的命令\",{\"1\":{\"10\":1}}],[\"支持\",{\"1\":{\"2\":1}}],[\"高频面试题\",{\"1\":{\"215\":1}}],[\"高级\",{\"0\":{\"214\":1}}],[\"高度始终为宽度的一半\",{\"1\":{\"213\":1}}],[\"高灵活性意味着\",{\"1\":{\"173\":1}}],[\"高效利用磁盘空间\",{\"1\":{\"2\":1}}],[\"高性能的\",{\"1\":{\"1\":1}}],[\"没有完成这部分性能优化的任务\",{\"1\":{\"185\":1}}],[\"没有出现过\",{\"1\":{\"85\":1}}],[\"没有到达字符串末尾并\",{\"1\":{\"85\":1}}],[\"没有\",{\"1\":{\"2\":1,\"8\":1,\"142\":1}}],[\"速度快\",{\"1\":{\"2\":1}}],[\"意味着前端框架在运行时消耗在寻找\",{\"1\":{\"176\":1}}],[\"意味着\",{\"1\":{\"162\":1,\"180\":1}}],[\"意味\",{\"1\":{\"1\":1}}],[\"python\",{\"1\":{\"206\":1}}],[\"p>\",{\"1\":{\"184\":1}}],[\"pinia\",{\"1\":{\"172\":1,\"175\":1}}],[\"pid\",{\"1\":{\"46\":2}}],[\"p\",{\"1\":{\"148\":1,\"149\":1,\"184\":3}}],[\"polyfill等\",{\"1\":{\"180\":1}}],[\"pop\",{\"1\":{\"179\":1}}],[\"posts\",{\"0\":{\"230\":1}}],[\"post\",{\"1\":{\"121\":1,\"122\":1}}],[\"port\",{\"1\":{\"43\":1}}],[\"portfinder\",{\"1\":{\"43\":1}}],[\"pure\",{\"1\":{\"173\":2}}],[\"pull\",{\"1\":{\"156\":3}}],[\"pub\",{\"0\":{\"141\":1},\"1\":{\"141\":1}}],[\"publishconfig\",{\"1\":{\"34\":2}}],[\"publish\",{\"1\":{\"13\":1,\"14\":1,\"15\":1,\"34\":1,\"148\":1,\"155\":1}}],[\"publish发布时\",{\"1\":{\"11\":1}}],[\"public\",{\"1\":{\"13\":2,\"17\":1,\"51\":4,\"94\":1,\"96\":3}}],[\"put\",{\"1\":{\"121\":1,\"122\":1}}],[\"push\",{\"1\":{\"79\":1,\"92\":1,\"142\":1,\"148\":2,\"155\":2,\"156\":3,\"179\":1}}],[\"playground\",{\"1\":{\"184\":1}}],[\"platforms\",{\"1\":{\"26\":3}}],[\"platformvariant\",{\"1\":{\"26\":2}}],[\"platform\",{\"1\":{\"26\":14,\"27\":2}}],[\"plugin\",{\"1\":{\"47\":9,\"152\":3,\"167\":1}}],[\"plugins\",{\"1\":{\"44\":2,\"47\":1,\"57\":1,\"167\":1}}],[\"pwa\",{\"0\":{\"131\":1},\"1\":{\"31\":1,\"131\":10}}],[\"pkg\",{\"1\":{\"27\":3}}],[\"pkgmanager\",{\"1\":{\"27\":1}}],[\"pkginfo\",{\"1\":{\"27\":3}}],[\"pkgspecarr\",{\"1\":{\"26\":3}}],[\"pkgspec\",{\"1\":{\"26\":2}}],[\"pkgfromuseragent\",{\"1\":{\"26\":1,\"27\":1}}],[\"phantom\",{\"1\":{\"17\":1}}],[\"param\",{\"1\":{\"142\":7}}],[\"participant\",{\"1\":{\"106\":3}}],[\"park\",{\"0\":{\"57\":1}}],[\"parseroptions\",{\"1\":{\"152\":2,\"167\":1}}],[\"parser\",{\"1\":{\"152\":3,\"167\":2}}],[\"parse\",{\"1\":{\"27\":1,\"148\":1,\"157\":2}}],[\"path\",{\"1\":{\"25\":2,\"26\":12,\"27\":3,\"47\":2,\"52\":1,\"134\":1}}],[\"pattern\",{\"1\":{\"17\":1,\"156\":1}}],[\"patchflags\",{\"1\":{\"184\":1}}],[\"patch\",{\"1\":{\"13\":4,\"184\":2}}],[\"pack>\",{\"1\":{\"57\":1}}],[\"packagename\",{\"1\":{\"26\":2,\"27\":2}}],[\"package\",{\"0\":{\"153\":1},\"1\":{\"2\":1,\"6\":2,\"8\":2,\"11\":4,\"24\":1,\"25\":2,\"26\":1,\"27\":4,\"29\":1,\"34\":1,\"148\":2,\"150\":1,\"152\":1,\"155\":4}}],[\"packages\",{\"1\":{\"2\":1,\"11\":6,\"14\":2,\"36\":1}}],[\"pacakge\",{\"1\":{\"14\":1}}],[\"pragma\",{\"1\":{\"118\":2}}],[\"props\",{\"1\":{\"173\":1,\"175\":1}}],[\"proxy\",{\"1\":{\"110\":1,\"137\":1,\"179\":1,\"217\":1}}],[\"protocol\",{\"1\":{\"93\":1}}],[\"product\",{\"1\":{\"61\":1}}],[\"production\",{\"1\":{\"44\":1,\"47\":3}}],[\"progressive\",{\"1\":{\"131\":1}}],[\"progress\",{\"1\":{\"53\":1}}],[\"promises\",{\"1\":{\"150\":1}}],[\"promise\",{\"1\":{\"46\":2,\"166\":1,\"217\":1,\"223\":1,\"225\":1}}],[\"prompt\",{\"1\":{\"26\":1,\"73\":1}}],[\"prompts\",{\"1\":{\"23\":1,\"25\":1,\"26\":8}}],[\"projectname\",{\"1\":{\"26\":6}}],[\"project\",{\"1\":{\"26\":4,\"31\":2}}],[\"process\",{\"1\":{\"25\":2,\"27\":2,\"43\":1,\"44\":1,\"46\":1,\"47\":3,\"48\":3,\"50\":3,\"51\":3}}],[\"prepack\",{\"1\":{\"180\":1}}],[\"prepublishonly\",{\"1\":{\"34\":2}}],[\"preactjs\",{\"1\":{\"156\":1}}],[\"present\",{\"1\":{\"156\":1}}],[\"pretty\",{\"1\":{\"151\":1}}],[\"prettier\",{\"1\":{\"17\":1}}],[\"prefetch\",{\"0\":{\"129\":1},\"1\":{\"129\":2}}],[\"preferbuiltins\",{\"1\":{\"47\":1}}],[\"preload\",{\"0\":{\"129\":1},\"1\":{\"129\":3}}],[\"preventassignment\",{\"1\":{\"47\":1}}],[\"prev\",{\"1\":{\"26\":1}}],[\"prereleases\",{\"1\":{\"15\":1}}],[\"prerelease版本\",{\"1\":{\"15\":1}}],[\"pre\",{\"1\":{\"15\":4}}],[\"preinstall\",{\"1\":{\"11\":1}}],[\"private\",{\"1\":{\"11\":1,\"94\":1,\"96\":3}}],[\"personblog\",{\"1\":{\"110\":1,\"137\":1}}],[\"performant\",{\"1\":{\"1\":1}}],[\"peerdependencies\",{\"1\":{\"17\":1}}],[\"peer\",{\"1\":{\"8\":7}}],[\"peers\",{\"0\":{\"8\":1},\"1\":{\"8\":1}}],[\"png\",{\"1\":{\"6\":1}}],[\"pnpm\",{\"0\":{\"0\":1,\"1\":1,\"6\":1,\"9\":1},\"1\":{\"2\":2,\"3\":5,\"6\":4,\"7\":10,\"9\":1,\"10\":4,\"11\":8,\"13\":2,\"14\":3,\"15\":2,\"16\":3,\"17\":10,\"25\":2,\"27\":1,\"29\":1,\"31\":2,\"33\":1},\"2\":{\"19\":1}}],[\"什么是事件代理\",{\"1\":{\"224\":1}}],[\"什么是宏任务\",{\"1\":{\"222\":1}}],[\"什么是异步编程\",{\"1\":{\"222\":1}}],[\"什么是闭包\",{\"1\":{\"221\":1}}],[\"什么是bfc\",{\"1\":{\"212\":1}}],[\"什么是前端缓存\",{\"0\":{\"91\":1}}],[\"什么是缓存\",{\"0\":{\"90\":1}}],[\"什么是\",{\"0\":{\"1\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
